0	NewSTM creates a new STM transaction .
1	first returns the first value in the read set .
2	cmps returns a slice of v3 . Cmp for a given revision .
3	NewSTMRepeatable creates a new STM .
4	NewSTMSerializable creates a new serializable transaction .
5	NewSTMReadCommitted creates a new STM transaction .
6	NewCertPool creates a new x509 . CertPool .
7	NewCert creates a new tls . Certificate .
8	Pause pauses the peer .
9	Resume resumes the peer .
10	pick picks a message from the pipeline and writes it to the given channel .
11	post sends a request for a snapshot .
12	newTxnResp creates a new TxnResponse from a TxnRequest .
13	applyCompare applies a compare to rv .
14	OpCompact applies the given CompactOptions to the given revision .
15	NewPriorityQueue creates a new PriorityQueue
16	Enqueue adds a value to the priority queue .
17	NewLeaderStats returns a new LeaderStats instance
18	Succ implements the Follower interface .
19	Fail is part of the Follower interface .
20	delete removes a watcher from the broadcasts list .
21	startStreamWriter starts a stream writer .
22	checkStreamSupport returns true if v supports the given stream type .
23	maybeUpdate returns true if n  = n  = n .
24	IsPaused returns true if the progress is in a paused state .
25	needSnapshotAbort returns true if the progress needs a snapshot abort .
26	add adds an inflight to the list of inflights .
27	growBuf grows the size of the buffer .
28	freeTo frees to a uint64 .
29	SaveDBFrom creates a new snapshot from the given io . Reader
30	DBFilePath returns the db file path for a snapshot .
31	Set sets the value of a string .
32	NewUniqueStringsValue creates a new UniqueStringsValue .
33	UniqueStringsFromFlag returns a slice of unique strings from a flag .
34	UniqueStringsMapFromFlag creates a unique strings map from a flag .
35	Percentiles returns a slice of pcs and a slice of data .
36	VerifyBootstrap verifies the bootstrap config
37	VerifyJoinExisting returns an error if the config is invalid .
38	hasLocalMember returns an error if there is no local member in the initial cluster configuration .
39	advertiseMatchesCluster advertises that the cluster matches the server config .
40	ReqTimeout returns the timeout for a request .
41	getStatus returns the status of a raft .
42	GetDefaultHost returns the default host .
43	getIfaceAddr returns the iface address for the given address family .
44	getIfaceLink returns the netlink message for the given interface idx
45	lsCommandFunc runs the ls command .
46	printLs prints a list of nodes .
47	rPrint runs rPrint on the given node .
48	NewLeaseRenewerCommand returns a new lease renewer command
49	Read reads a snapshot from a file .
50	GetCipherSuite returns the cipher suite for the given string .
51	post creates a post request and sends it to the pipeline .
52	send sends a message to raft .
53	sendHeartbeat sends a heartbeat message .
54	bcastAppend sends an append to each progress .
55	bcastHeartbeat broadcasts a heartbeat .
56	tickElection ticks the election .
57	tickHeartbeat ticks the heartbeat .
58	stepCandidate steps a candidate into a leader position .
59	restore is used to restore a snapshot .
60	promotable returns true if the raft is promotable .
61	checkQuorumActive checks if the quorum is active .
62	increaseUncommittedSize increases the uncommittedSize of raft .
63	reduceUncommittedSize reduces the uncommitted size of raft .
64	newPeriodic creates a new Periodic .
65	Pause pauses the Periodic .
66	Resume restarts the Periodic .
67	Lock locks the mutex .
68	NewLocker creates a new Locker .
69	NewFIFOScheduler returns a new fifo scheduler .
70	Schedule schedules a job .
71	Stop stops the fifo .
72	NewServer creates a new zap server .
73	StartServe starts the gRPC server
74	Stop stops the gRPC server
75	Transport implements rpcpb . Server .
76	RegisterInterruptHandler registers a new interrupt handler .
77	HandleInterrupts implements zap . Logger . HandleInterrupts .
78	OpGet returns an Op for a given key .
79	OpDelete creates a delete operation .
80	OpPut creates a put operation .
81	OpTxn creates a new transaction .
82	WithFromKey returns an OpOption that sets the key to the end of the operation .
83	withTop returns a slice of OpOptions containing the top - level options for the given sort target and sort order .
84	Exist checks if the given directory exists .
85	searchIndex searches for a WAL file at the given index .
86	isValidSeq checks if a sequence is valid .
87	NewListener creates a new net . Listener .
88	cafiles returns a list of trusted cafiles .
89	ServerConfig returns the tls . Config for the server .
90	ClientConfig returns the tls . Config for the client .
91	newTLSKeepaliveListener creates a new TLSKeepaliveListener
92	applyV2Request applies a RequestV2 to the EtcdServer .
93	NewRoleCommand returns a new instance of the role command
94	roleAddCommandFunc implements the cobra . Command interface .
95	roleGetCommandFunc implements the roleGetCommand interface .
96	roleGrantPermissionCommandFunc implements the roleGrantPermissionCommand interface .
97	roleRevokePermissionCommandFunc executes the role revoke - permission command .
98	NewCluster creates a new cluster .
99	NewClusterByConfig creates a new cluster based on the given configuration .
100	HTTPMembers returns a list of all members of the cluster .
101	waitLeader waits for a member to join the cluster .
102	waitNoLeader waits for a list of membs to be removed from the cluster .
103	isMembersEqual returns true if all members are equal .
104	listenGRPC listens on the grpc socket .
105	NewClientV3 creates a new gRPC client .
106	Clone returns a clone of the member .
107	Close closes the member .
108	Stop stops a member .
109	checkLeaderTransition checks if there is a transition between the current leader and the new leader .
110	Restart restarts a member .
111	Terminate terminates a member .
112	Metric returns the metric for the member .
113	InjectPartition injects a partition into the member .
114	RecoverPartition recovers a partition .
115	NewClusterV3 creates a new ClusterV3 .
116	ParseWithDefaults parses jwtOptions with default values .
117	Parse parses the JWT options .
118	Key returns the JWT key .
119	fill fills the response header with data .
120	add adds a new watcher to the watchBroadcast . Returns true if the watcher was added .
121	Watch returns a watch id for the given key and end .
122	newFileEncoder creates a new encoder for the given file .
123	purgeFile purges a file .
124	Set sets the value of a string .
125	NewStringsValue creates a new StringsValue from a string
126	StringsFromFlag returns a list of string values for a given flag .
127	Cluster returns a clustered string .
128	NewPageWriter creates a new PageWriter .
129	watch returns a watcher for a given key .
130	notify adds a new event to the event history .
131	clone returns a clone of the watcherHub .
132	isHidden checks if the given path is a hidden path .
133	createEtcdLogFile creates etcd log file
134	runEtcd runs the etcd command
135	stopEtcd stops the etcd process .
136	handle_SIGQUIT_ETCD_AND_REMOVE_DATA_AND_STOP_AGENT implements rpcpb . Response handler for SIGQUIT_ETCD .
137	LimitListener creates a limit listener .
138	allowMethod returns true if the given method is allowed .
139	NewWatchServer returns a new instance of WatchServer .
140	FiltersFromRequest converts a WatchCreateRequest to a slice of FilterFuncs .
141	newPipelineHandler creates a new pipeline handler .
142	checkClusterCompatibilityFromHeader checks if the given header is compatible with the given cluster
143	KeyExists returns a clientv3 . Cmp indicating if the given key exists .
144	KeyMissing returns a clientv3 . Cmp for a missing key .
145	ValidateSecureEndpoints validates the given endpoints .
146	putNewKV is a helper function to put a new KV into the database .
147	newUniqueEphemeralKey creates a new unique ephemeral key .
148	NewUpdateDirCommand returns a command to update a directory .
149	updatedirCommandFunc updates a directory .
150	handleBackup handles backups .
151	saveDB saves srcDB to destDB . If v3 is true srcDB will be closed .
152	NewWatchCommand returns a new instance of a watch command
153	NewV3 creates a new v3 manager .
154	Save saves the snapshot to dbPath
155	Status returns the status of the database at the given path .
156	Restore restores the etcd server config .
157	NewAuthStore creates a new authStore .
158	NewTokenProvider creates a new TokenProvider .
159	MendPeer adds a peer to the transport .
160	removePeer removes a peer from the transport .
161	ActivePeers returns the number of active peers in the transport .
162	resolveTCPAddrDefault returns the default TCP address for the given address .
163	resolveTCPAddrs takes a slice of URLs and resolves them into a slice of URLs .
164	urlsEqual returns true if a and b are equal .
165	URLStringsEqual returns true if a and b are equal
166	NewLeaseCommand returns a new lease command
167	NewLeaseGrantCommand returns a new instance of a lease grant command
168	leaseGrantCommandFunc creates a lease grant command .
169	NewLeaseRevokeCommand returns a new instance of a lease revoke command
170	leaseRevokeCommandFunc invokes the lease revoke command .
171	NewLeaseTimeToLiveCommand returns a new instance of a lease timetolive command
172	leaseTimeToLiveCommandFunc runs the lease timetolive command .
173	NewLeaseListCommand returns a new instance of a lease list command
174	leaseListCommandFunc runs a command to list leases .
175	NewLeaseKeepAliveCommand returns a new instance of the lease keep - alive command
176	leaseKeepAliveCommandFunc runs the lease keep - alive command .
177	NewAlarmCommand returns a new cobra command for alarm
178	alarmDisarmCommandFunc runs the alarm disarm command .
179	alarmListCommandFunc runs the alarm list command .
180	Flags returns a slice of etcd flags .
181	EmbedConfig returns the embed config for Etcd .
182	PProfHandlers returns a map of http . Handlers for pprof profiles .
183	NewBackendQuota creates a new quota backend .
184	NewClusterProxy creates a new cluster proxy .
185	NewHandler creates a new http . Handler .
186	TimeToLiveHTTP implements the http . RoundTripper interface .
187	newWatcherBatch creates a new watcherBatch .
188	add adds a new watcher to the group .
189	contains returns true if the given key is in the watcher group .
190	delete removes a watcher from the group .
191	choose creates a new watcherGroup from a set of watchers .
192	watcherSetByKey returns a watcher set for a given key .
193	Compare returns - 1 if c is less than or equal to ivl .
194	successor returns the successor of the node .
195	updateMax updates the max of the interval node .
196	visit visits a node . Returns true if a node was visited .
197	Delete removes an interval from the tree . Returns true if the interval was deleted .
198	Insert inserts a new value into the tree .
199	rotateLeft rotates x to the left of the tree .
200	replaceParent replaces the parent of x with the parent of y .
201	MaxHeight returns the maximum height of the interval tree .
202	Visit implements IntervalTree .
203	find returns the node corresponding to the given interval .
204	Find returns the value of the given interval .
205	Intersects returns true if iv intersects .
206	Contains returns true if the given interval is contained in the tree .
207	Stab adds a new interval to the tree .
208	Union implements IntervalTree . Union .
209	NewExactReadCloser creates a new exactReadCloser .
210	NewElection creates a new election .
211	ResumeElection resumes an election .
212	Proclaim implements the Election interface .
213	Resign implements the Election interface .
214	Leader returns the current leader .
215	Observe is part of the v3 . Election interface .
216	check implements the quota . Alarmer interface .
217	NewExecWatchCommand creates a new exec - watch command
218	execWatchCommandFunc runs the exec watch command .
219	NewListener creates a new net . Listener .
220	NewRoundTripper creates a new http . RoundTripper .
221	createPostRequest creates a new POST request .
222	checkPostResponse checks if a post response is valid .
223	serverVersion returns the X - Server - Version header .
224	checkVersionCompatibility checks if localServer and localMinCluster are compatible .
225	setPeerURLsHeader sets the X - PeerURLs header .
226	addRemoteFromRequest adds a remote URL from the request .
227	NewKeysAPIWithPrefix creates a new KeysAPI .
228	TTLDuration returns the TTL of the node .
229	SetPflagsFromEnv sets all flags in the given environment .
230	FlagToEnv converts a flag to an environment variable .
231	excerpt extracts a single line from a string .
232	passConfChange returns true if the given entry is a config change .
233	printInternalRaftRequest prints an internal raft request .
234	listEntriesType returns a list of entries for a given streamdecoder .
235	newLog creates a new raftLog with the given storage and logger .
236	newLogWithSize creates a new raftLog with the given storage logger and maxNextEntsSize .
237	findConflict returns the index of the conflicting term in ents .
238	nextEnts returns the next set of entries in the log .
239	allEntries returns all the entries in the log .
240	slice returns a slice of raft log entries .
241	NewSession creates a new session .
242	Close closes the session .
243	WithTTL returns a SessionOption that sets the session TTL .
244	WithLease returns a SessionOption that sets the given lease id .
245	addRequest adds a request to the queue .
246	recvAck returns the number of acks for the given message .
247	advance progresses the readIndexStatus for the given message .
248	lastPendingRequestCtx returns the last pending request ctx .
249	Start starts the EtcdServer .
250	start starts the EtcdServer .
251	Process sends a message to the Etcd server .
252	ReportSnapshot reports a snapshot status .
253	MoveLeader moves a leader from local to transferee .
254	TransferLeadership transfers the leadership to the local server .
255	configure implements raftpb . EtcdServer .
256	sync sends a SYNC request to Etcd .
257	publish sends a PUT request to EtcdServer .
258	applyEntryNormal applies the given raftpb . Entry to the EtcdServer .
259	applyConfChange implements raftpb . EtcdServer .
260	monitorVersions monitors cluster and peer versions .
261	goAttach attaches a function to the EtcdServer .
262	NewRoundrobinBalanced creates a new picker for rrBalanced .
263	Pick is part of the Balanced interface .
264	NewTLSListener creates a new TLS listener .
265	acceptLoop accepts connections in a loop .
266	SetEndpoints sets the endpoints of the resolver group .
267	Target returns the id of the target endpoint .
268	Target returns a string representation of a target .
269	Build creates a new etcd resolver .
270	Handle implements RequestV2 .
271	NewElectionCommand returns a new instance of an election command
272	nodeToMember converts a NodeExtern to a Member .
273	NewTmpBackend creates a new etcd backend .
274	newRevision creates a new Revision .
275	Run runs the revision .
276	Pause pauses the revision .
277	Resume resumes the revision .
278	voteRespMsgType returns the vote response message type for the given message type .
279	DescribeMessage returns a string representation of a message .
280	DescribeEntry returns a string representation of an Entry .
281	DescribeEntries returns a string representation of the given entries .
282	SetLogger sets the gRPC logger .
283	GetLogger returns a logutil . Logger .
284	maybeFirstIndex returns the first index of the snapshot if it exists .
285	maybeLastIndex returns the index of the last entry .
286	maybeTerm returns the term at index i and a boolean indicating if there is a term at index i .
287	shrinkEntriesArray shrinks the array of entries .
288	SaveSnap saves a snapshot .
289	New creates a new client with the given configuration .
290	NewCtxClient creates a new Client .
291	NewFromURL creates a new client from a URL .
292	Close closes the client .
293	Endpoints returns a copy of the client s endpoints
294	SetEndpoints sets the endpoints for the client .
295	Sync synchronizes all members of the server .
296	dialSetupOpts returns a slice of grpc . DialOptions for dialing .
297	Dial creates a new grpc . ClientConn .
298	dialWithBalancer creates a new grpc . ClientConn .
299	dial creates a new grpc . ClientConn .
300	WithRequireLeader returns a context with the metadata required to be leader .
301	roundRobinQuorumBackoff returns a backoffFunc that rounds a quorum backoff .
302	isHaltErr returns true if err is a salt error .
303	NewLease creates a new lease .
304	IsCreate returns true if the event is created .
305	Err implements WatchResponse .
306	IsProgressNotify returns true if the WatchResponse is a progress notification
307	RequestProgress sends a progress request to the watcher .
308	nextResume returns the next resuming stream .
309	dispatchEvent dispatches an event to the WatchResponse
310	broadcastResponse broadcasts the response to all substreams .
311	unicastResponse returns true if the response was unicast .
312	joinSubstreams joins the substreams of the watchGrpcStream .
313	toPB converts a watchRequest to a WatchRequest .
314	toPB converts a progressRequest to a WatchRequest .
315	Contains returns true if the given value is in the unsafeSet .
316	ContainsAll returns true if the set contains all values .
317	Equals returns true if two sets are equal .
318	Values returns the values of the unsafeSet .
319	Copy returns a copy of the unsafeSet .
320	Sub returns a copy of the other set .
321	v2MembersURL creates a url . URL for v2 members .
322	NewMigrateCommand returns a new instance of the MigrateCommand
323	publishEntries publishes raftpb . Entry to rc . confState .
324	openWAL creates a new WAL .
325	replayWAL replays the WAL of a member .
326	stop stops the raft node .
327	NewWatchCommand returns a new instance of the watch command
328	InitialState implements Storage .
329	SetHardState sets the hard state of the storage .
330	Entries implements Storage . Entries .
331	Term returns the term at index i .
332	LastIndex returns the last index of the storage .
333	FirstIndex returns the first index in the storage .
334	Snapshot returns a snapshot of the storage .
335	ApplySnapshot applies a snapshot to the storage .
336	Compact implements storage . Storage . Compact .
337	unreachable checks if the given URL is unreachable .
338	NewEndpointCommand returns a new endpoint command
339	epHealthCommandFunc creates an EPC health command .
340	NewElectCommand returns a new instance of an elect command
341	NewDefragCommand returns a new instance of etcd defrag command
342	RegisterBuilder registers a new balancer builder .
343	Build creates a new balancer .
344	recordTransition records the transition between the old and new state .
345	doSerialize implements the EtcdServer interface .
346	send sends events to the watcher .
347	post sends a watch response and returns true if the response was received .
348	OriginAllowed returns true if the origin is allowed .
349	IsHostWhitelisted returns true if the given host is on the host whitelist
350	Valids returns a sorted list of valid strings .
351	NewSelectiveStringsValue returns a new SelectiveStringsValue
352	NewKV creates a new clientv3 . KV
353	NewURLsValue creates a new URLsValue .
354	URLsFromFlag returns a list of URLs for a given flag .
355	servePeers implements http . PeerHandler
356	NewStore creates a new store .
357	appendMarkTombstone appends a tombstone mark to b .
358	IsDirWriteable checks if the given directory is writeable .
359	TouchDirAll wraps os . MkdirAll .
360	CreateDirAll creates a directory .
361	ZeroToEnd truncates the file to zero .
362	Open opens a file in the pipeline .
363	NewRaftLoggerFromZapCore creates a new raft . Logger from a zap core .
364	NewConfig creates a new clientv3 . Config .
365	RegisterElectionHandler registers the http handlers for service Election to mux . The handlers forward requests to the grpc endpoint over conn .
366	UpdateCapability updates the capability for the given version .
367	NewLockCommand returns a new instance of the lock command
368	tick ticks the raft node .
369	advanceTicks increases the number of ticks in the raft node .
370	NewAuthCommand returns a new auth cobra command
371	authEnableCommandFunc runs the auth enable command .
372	authDisableCommandFunc implements the authDisableCommand interface .
373	RetryKVClient returns a retryKVClient .
374	RetryLeaseClient returns a retryLeaseClient .
375	RetryClusterClient returns a retryClusterClient .
376	RetryMaintenanceClient creates a new MaintenanceClient .
377	RetryAuthClient returns a retry auth client .
378	NewSetDirCommand returns a command to set a directory .
379	Enter adds a new client to the queue .
380	Leave exits the DoubleBarrier .
381	HandleBasic implements http . HandleMux .
382	WriteError logs an error and writes it to w .
383	MemberByName returns a new member with the given name .
384	PeerURLs returns the urls of all the peers in the cluster .
385	ValidateConfigurationChange validates a configuration change .
386	AddMember adds a new member to the cluster .
387	RemoveMember removes a member from the cluster .
388	ValidateClusterAndAssignIDs validates a RaftCluster and assigns its IDs .
389	Keep returns a map of all items in the tree with the given revision .
390	closeRequireLeader closes all keepAlives and keepAlives .
391	resetRecv creates a new LeaseKeepAliveClient .
392	recvKeepAlive is used to keep alive a lease .
393	deadlineLoop runs in a goroutine until the deadline expires .
394	sendKeepAliveLoop sends keep - alive requests to the stream .
395	NewKV creates a new leasingKV .
396	rescind implements leasing . KV .
397	LeaseValue returns the lease value for the given key .
398	ValueBytes returns the value as a byte slice .
399	WithRange returns a new Cmp with the specified range .
400	WithPrefix returns a copy of the Cmp with the prefix set .
401	mustInt64 returns an int64 value panicking if the value is not an int64 .
402	mustInt64orLeaseID returns the value of val as int64 if it is not a LeaseID .
403	Next returns the next update for the watcher .
404	getJournalWriteSyncer returns a zapcore . WriteSyncer for writing to a journal .
405	newKV creates a new KV node .
406	newDir creates a new directory .
407	Read implements v2 . NodeReader .
408	Write writes a value to the node .
409	List returns a list of nodes .
410	GetChild returns the child of the given name .
411	Add adds a new child node to the node .
412	Remove implements the Node interface .
413	Compare compares two values and returns a boolean indicating if the two matches .
414	Clone returns a deep copy of the node .
415	isConnectedToQuorumSince returns true if the member is connected to the queue since the given time .
416	isConnectedSince returns true if the remote has been connected since the given time .
417	numConnectedSince returns the number of connections since the given time .
418	longestConnected returns the longest connection and a boolean indicating if the transport is connected .
419	isTornEntry returns true if data is a truncated byte slice .
420	StartMockServersOnNetwork starts a mock server on a given network .
421	StartAt starts the mock servers at the given address .
422	StopAt implements the MockServers interface .
423	Stop stops the mock servers .
424	NewCheckCommand returns a new cobra command for checking etcd properties .
425	NewCheckPerfCommand returns a new instance of the etcd performance check command
426	NewCheckDatascaleCommand returns a new instance of the datascale check command
427	NewGetCommand returns a new instance of the get command
428	NewGetCommand returns a new instance of the cli get command
429	PickPeerURL picks a peer url
430	HandleMetricsHealth implements http . Handler for MetricsHealth
431	NewRemoveCommand creates a new remove command
432	rmCommandFunc executes the rm command .
433	checkIntervals returns a map of request intervals and an error if any .
434	ReportEventReceived reports the number of events received .
435	RegisterKVHandler registers the http handlers for service KVServer to mux . The handlers forward requests to the grpc endpoint over conn .
436	RegisterWatchHandler registers the http handlers for service WatchMux to mux . The handlers forward requests to the grpc endpoint over conn .
437	RegisterLeaseHandler registers the http handlers for service Lease to mux . The handlers forward requests to the grpc endpoint over conn .
438	RegisterClusterHandler registers the http handlers for service ClusterHandler to mux . The handlers forward requests to the grpc endpoint over conn .
439	RegisterMaintenanceHandler registers the http handlers for service Maintenance to mux . The handlers forward requests to the grpc endpoint over conn .
440	RegisterAuthHandler registers the http handlers for service etcdserverpb on mux . The handlers forward requests to the grpc endpoint over conn .
441	startEtcd starts an etcd server .
442	identifyDataDirOrDie attempts to identify a data directory or dies if it doesn t exist .
443	openLast opens the file at dirpath and returns a LockedFile .
444	gotLeader returns the current leader .
445	lostNotify returns a channel that will be closed when the leader is lost .
446	newGRPCProxyCommand returns a new GRP proxy command
447	NewMemberCommand returns a new instance of a member command
448	NewMemberAddCommand returns a new instance of a member add command
449	NewMemberRemoveCommand returns a new instance of the member remove command
450	NewMemberUpdateCommand returns a new instance of a member update command
451	NewMemberListCommand returns a new instance of a member list command
452	memberAddCommandFunc creates a new member add command .
453	memberRemoveCommandFunc executes the member remove command .
454	memberUpdateCommandFunc executes a member update command .
455	memberListCommandFunc implements the cobra . Command interface .
456	Open creates a new WAL .
457	OpenForRead implements walpb . Logger . OpenForRead .
458	Verify verifies that the given snapshot is a valid record .
459	Close closes the WAL .
460	notify sends an event to the event channel .
461	Remove removes the watcher from the event channel .
462	mkPathDepth returns the path depth of a node .
463	mkV2Node returns the v2store . NodeExtern for the given KeyValue .
464	prevKeyFromPuts converts a TxnResponse to a KeyValue .
465	NewWeightedReport creates a new weighted report .
466	NewURLsMapFromStringMap creates a new URLsMap from a string map .
467	String returns a string representation of the URLsMap .
468	URLs returns a sorted list of URLs in the map .
469	parse parses a string into a map .
470	NewClientHandler creates a new client handler .
471	writeKeyEvent writes a key event to the response .
472	writeKeyError writes an error to the http . ResponseWriter .
473	getUint64 gets a uint64 value from url . Values
474	getBool returns a boolean value from a form .
475	waitDeletes waits until maxCreateRev is reached .
476	AddOutputPaths adds the specified output paths to the config .
477	NewConfig returns a new Config object .
478	PeerURLsMapAndToken returns a URLsMap and a token for a peer .
479	GetDNSClusterNames returns a list of DNS cluster names .
480	checkBindURLs checks if the given urls are valid bindings .
481	GetCluster returns a cluster .
482	GetClient returns a SRV client for the given service and domain .
483	GetSRVService returns the SRV service .
484	ReadDir reads the contents of a directory .
485	compact is a helper function to compact a revision .
486	defrag is a helper function to defragment a client .
487	NewUserCommand returns a new user related command .
488	userAddCommandFunc creates a user add command .
489	userGetCommandFunc implements the userGetCommand interface .
490	userChangePasswordCommandFunc executes the user change password command .
491	addEvent adds an event to the queue .
492	scan scans the history for a given key . If recursive is true the history will be recursive .
493	clone returns a copy of the EventHistory .
494	openSnapshotBackend opens a snapshot backend .
495	openBackend creates a new backend based on cfg .
496	recoverSnapshotBackend recovers a snapshot backend .
497	NewUpdateCommand returns a new ttl update command
498	updateCommandFunc updates a command .
499	frontAndBack returns the front and back stats .
500	Insert adds p to the statsQueue .
501	Rate returns the rate of stats in the queue .
502	Clear clears the queue .
503	UniqueStrings returns a slice of strings with the given length and number of unique characters .
504	RandomStrings returns a slice of random strings .
505	IsKeyNotFound returns true if the error is a KeyNotFound error .
506	IsRoleNotFound returns true if the error is a role not found error .
507	IsUserNotFound returns true if the error is a user not found error .
508	JoinCluster joins a cluster .
509	GetCluster returns a cluster .
510	newProxyFunc creates a proxy function .
511	isSafeRetry returns true if err is a context error or a non - repeatable error .
512	withRetryPolicy returns a retryOption that sets the retry policy .
513	withAuthRetry returns a retryOption that sets retryAuth to true .
514	withMax returns a retryOption that sets the maximum number of retries to retry .
515	withBackoff returns a retryOption that sets the backoff function .
516	RecvAppendReq adds a new request to the stats queue .
517	SendAppendReq sends an append request .
518	merge merges bbsrc into bbsrc .
519	deleteRevKey deletes a revision of a key .
520	isMemberBootstrapped checks if a member is bootstrapped .
521	GetClusterFromRemotePeers returns a RaftCluster from a list of remote peers .
522	getClusterFromRemotePeers returns a RaftCluster from remote peers .
523	getRemotePeerURLs returns a sorted list of remote peer URLs .
524	getVersions returns a map of version . Versions for a cluster .
525	decideClusterVersion determines the cluster version .
526	getVersion fetches the version information for a member .
527	NewTimeoutDetector creates a new TimeoutDetector .
528	Reset resets the TimeoutDetector .
529	Observe implements the TimeoutDetector interface .
530	NewPeerHandler creates a new peer handler .
531	put stores a key index .
532	tombstone adds a tombstone to the key index .
533	get returns the modified and created revisions for a given key .
534	since implements zap . KeyIndex . Since .
535	keep removes a revision from the key index .
536	findGeneration finds a generation by rev .
537	cancelWatcher removes a watcher from the store .
538	syncWatchersLoop synchronizes the watchers in the store .
539	syncVictimsLoop synchronizes the victims in the store .
540	moveVictims moves the victims in the watchableStore .
541	kvsToEvents converts kvs to mvccpb events
542	notify sends a notification to the watchableStore .
543	isOpFuncCalled returns true if a function is called .
544	UnsafePut is part of the Transaction interface .
545	UnsafeSeqPut is part of the Transaction interface .
546	UnsafeRange implements the Transaction interface for batchTx .
547	UnsafeDelete deletes a key from a bucket .
548	UnsafeForEach is part of the Transaction interface .
549	Commit commits the transaction .
550	CommitAndStop commits and stops the transaction .
551	Renew renews a lease .
552	Attach attaches an item to a lease .
553	revokeExpiredLeases revokes expired leases .
554	checkpointScheduledLeases returns the list of scheduled leases .
555	expireExists returns whether or not a lease exists .
556	findExpiredLeases returns a slice of leases that have expired .
557	refresh refreshes the lease with a new TTL .
558	forever sets the lease to expire forever .
559	Keys returns the keys of the lease .
560	Remaining returns the remaining duration of the lease .
561	NewCompactionCommand returns a new instance of etcd compaction command
562	compactionCommandFunc compactions a command .
563	NewPutCommand returns a new instance of the put command
564	putCommandFunc implements the putCommand interface for Cobra .
565	NewHandler creates a new http . Handler .
566	NewReadonlyHandler returns a new http . Handler that implements the http . Handler interface .
567	NewSetCommand creates a new set command
568	setCommandFunc sets a command .
569	waitOnLastRev waits until the last revision is reached .
570	GetDefaultInterfaces returns a map of default hostnames .
571	NewSnapshotCommand returns a new instance of etcd snapshot command
572	NewMoveLeaderCommand returns a new instance of etcd leadership move command
573	transferLeadershipCommandFunc executes the move - leader command .
574	OpenDir opens a directory and returns an os . File .
575	NewRemoveDirCommand returns a new rmdir command
576	rmdirCommandFunc executes the rmdir command .
577	NewDelCommand returns a new instance of the del command
578	delCommandFunc deletes a command .
579	NewExpect creates a new ExpectProcess .
580	NewExpectWithEnv creates a new ExpectProcess .
581	ExpectFunc expects a function to be called .
582	Expect returns a string containing the value of s .
583	LineCount returns the number of lines in the process .
584	Signal implements os . Process .
585	keyFunc returns a string representation of a RangeRequest .
586	Add adds a new range to the cache .
587	Get retrieves a range from the cache .
588	Invalidate invalidates a key and endkey .
589	Compact compacts the cache to the given revision .
590	NewUniqueURLsWithExceptions creates a new UniqueURLs instance .
591	UniqueURLsFromFlag returns a list of unique URLs from the given flag set .
592	UniqueURLsMapFromFlag creates a unique URLs map from urlsFlagName
593	Hold holds the barrier .
594	Release removes the barrier .
595	Wait blocks until the barrier is closed .
596	NewLockRacerCommand returns a new instance of the lock - racer command
597	ElectionTimeout returns the election timeout for this member .
598	DialEtcdGRPCServer connects to the Etcd GRPC server .
599	CreateEtcdClientConfig creates an Etcd client config
600	CreateEtcdClient creates a new etcd client
601	CheckCompact checks if the member is compliant with the given revision .
602	Defrag is used to defragment a member
603	RevHash returns the revision and hash of the member .
604	Rev implements the Member interface .
605	Compact implements the EtcdClient interface .
606	IsLeader returns true if the member is a leader
607	WriteHealthKey writes the member s health key .
608	SaveSnapshot saves a snapshot
609	RestoreSnapshot restores a snapshot
610	NewWatcher creates a new watcher .
611	NewRawNode creates a new raft node .
612	Campaign sends a campaign to the raw node .
613	Propose implements the Node interface for RawNode .
614	ProposeConfChange implements the Node interface for RawNode .
615	ApplyConfChange applies a ConfChange to the raw node .
616	Step implements the Node interface for RawNode .
617	Ready returns the raw node ready .
618	WithProgress implements the Node interface for RawNode .
619	ReportUnreachable reports an unreachable node .
620	ReportSnapshot reports the status of a Snapshot .
621	TransferLeader implements the Node interface for RawNode .
622	ReadIndex implements raft . NodeReadIndex
623	printcURL prints the cURL command .
624	StartNode starts a new raft node .
625	RestartNode restarts a node .
626	Tick ticks the node .
627	MustSync returns true if st must be synchronized with prevst .
628	NewGRPC17Health creates a new GRPC17Health .
629	NeedUpdate returns true if the GRPC17Health needs to be updated .
630	dflSignal implements the dflSignal interface .
631	New creates a new Store .
632	Index returns the current index .
633	Get returns an event for a given node .
634	Create creates a new node .
635	Set implements Store . Set .
636	getCompareFailCause returns the reason why a comparison fails .
637	Delete deletes a node .
638	walk walks a node and calls walkFunc for each component in the store .
639	internalGet returns the node at the given path .
640	DeleteExpiredKeys deletes expired keys .
641	checkDir checks if a directory exists in the store .
642	Save returns the JSON encoding of the store .
643	Recovery implements the Store interface .
644	Next returns the next uint64 in the generator .
645	NewMakeMirrorCommand returns a new instance of etcd make - mirror command
646	NewZapCoreLoggerBuilder creates a new zap core logger .
647	NewSyncer creates a new syncer .
648	DropPort drops a port
649	SetLatency sets the netem delay between ms and rv .
650	RemoveLatency removes latency .
651	NewTxnCommand returns a new cobra command for txn
652	txnCommandFunc executes a txn command .
653	New creates a new Compactor .
654	printResponseKey prints the response key
655	RegisterLockHandler registers the http handlers for service Lock to mux . The handlers forward requests to the grpc endpoint over conn .
656	grpcHandlerFunc returns a http . Handler for the grpc server .
657	addCORSHeader adds a CORS header to the response
658	fallback implements the v3 . Op interface .
659	IDFromString converts a string to an ID .
660	release releases the lock .
661	EncodedSize returns the encoded size of the value .
662	Decode decodes a byte slice into a ValueStruct
663	NewMergeIterator creates a new MergeIterator .
664	initHeap initializes the heap .
665	Valid returns true if the iterator is valid .
666	Key returns the key of the iterator .
667	Value returns the value of the iterator .
668	Next moves the iterator to the next element .
669	Seek seeks for a key in the iterator .
670	Close closes the iterator .
671	Encode encodes the valuePointer into a byte slice .
672	Decode decodes the header from a byte slice .
673	encodeEntry encodes an Entry into buf .
674	SetEntry implements the WriteBatch interface .
675	Set implements the WriteBatch interface .
676	SetWithTTL sets the value for the given key with the given TTL .
677	Delete implements the WriteBatch interface .
678	commit commits the batch to the database .
679	Flush is part of the Batch interface .
680	Error implements the WriteBatch interface .
681	getMemTables returns a list of mt tables .
682	writeRequests writes a list of requests to the database .
683	ensureRoomForWrite ensures that the root table is ready for writing .
684	writeLevel0Table writes a level 0 table .
685	handleFlushTask handles the flush task .
686	flushMemtable flushes the memtable to disk .
687	calculateSize calculates the lsm and vlog size .
688	Size returns the lsm and vlog size of the database .
689	Next returns the next value in the sequence .
690	Release releases the sequence from the database .
691	KeySplits returns a sorted list of key splits .
692	Flatten attempts to compact the database with the given number of workers .
693	Mmap implements os . FileMapper . Mmap .
694	Madvise madvises a byte slice .
695	setDiscardTs sets the discard ts value .
696	hasConflict returns true if a transaction has a conflict of reads and commits .
697	Set adds a new entry to the transaction .
698	SetWithMeta sets an entry with the given key value and meta .
699	Delete removes an entry from the database .
700	Get retrieves an item from a transaction .
701	CommitWith implements the Transaction interface for Txn .
702	View implements the DB interface .
703	Update implements the DB interface .
704	Seek attempts to find a key in the block iterator . If the key does not exist in the block iterator it returns io . EOF .
705	SeekToLast moves the iterator to the last block .
706	parseKV parses a KV header .
707	NewIterator returns a new iterator .
708	seekFrom searches the block index for the given key and returns the iterator s whence . If the key does not exist it returns io . EOF .
709	seekForPrev seeks for the previous key in the iterator .
710	Value returns the y . ValueStruct representation of the iterator .
711	Seek seeks for a key .
712	NewConcatIterator creates a new ConcatIterator .
713	Valid returns true if the ConcatIterator is valid .
714	Next moves the ConcatIterator to the next element .
715	Close closes the iterator .
716	OpenExistingFile opens an existing file .
717	Copy returns a copy of a .
718	KeyWithTs returns a copy of the key with the given ts .
719	ParseTs converts a byte slice into a uint64 .
720	ParseKey parses a key into a byte slice .
721	SameKey returns true if src and dst are equal .
722	FixedDuration returns a string representation of a fixed duration .
723	NewCloser creates a new Closer .
724	NewThrottle creates a new throttle .
725	Do executes the throttle .
726	Done sends an error to the throttle . If err is nil the throttle will panic .
727	Finish waits for the throttle to finish and returns an error .
728	SetDiscardTs sets the diskard ts for a transaction .
729	openReadOnly opens the log file as RDONLY .
730	iterate iterates over a log entry .
731	sortedFids returns the list of files to be deleted .
732	write writes reqs to disk .
733	populateDiscardStats populates vlog . DiscardStats .
734	Backup writes a backup of the database to the given writer .
735	ToList converts a stream to a KVList .
736	produceRanges creates a new key range .
737	produceKVs creates a new transaction based on the readTs .
738	Orchestrate is used to orchestrate a stream .
739	NewStream creates a new Stream .
740	NewStreamAt creates a new stream at readTs .
741	DecrRef removes a reference from the table .
742	ParseFileID parses a file ID .
743	PrintHistogram prints a histogram of key sizes .
744	newSizeHistogram creates a new size histogram .
745	buildHistogram builds a badger histogram from a key prefix .
746	printHistogram prints the histogram data .
747	Init initializes the watermark .
748	Begin marks the watermark at the given index .
749	BeginMany marks a list of indices as done .
750	Done marks the mark at the given index as done .
751	DoneMany marks one or more indices as done .
752	SetDoneUntil sets the watermark to done until val is reached .
753	WaitForMark waits for the watermark to mark the given index .
754	Encode encodes the header into b .
755	Decode decodes a byte slice into a header .
756	NewTableBuilder creates a new table builder .
757	keyDiff returns the difference between the base key and the new key .
758	Add adds a new value to the block .
759	blockIndex returns the block index .
760	Finish reads from b . keyBuf and returns the result .
761	Errorf implements Logger .
762	Infof implements Logger .
763	DecrRef removes a reference from the skiplist .
764	NewSkiplist creates a new Skiplist .
765	Put adds a value to the skiplist .
766	Get returns the value for the given key .
767	Key returns the iterator s key .
768	Value returns the value of the iterator .
769	Next returns the next item in the iterator .
770	Prev returns the previous item in the iterator .
771	Seek iterates over a set of bytes until it reaches the given target .
772	SeekForPrev is a helper function that seeks for the next target in the iterator .
773	NewUniIterator returns a new UniIterator .
774	Next moves the iterator to the next element .
775	Seek moves the iterator to the next key .
776	asChanges returns the changes as ManifestChanges .
777	rewrite rewrites the manifest file .
778	validate returns an error if the level handler is invalid .
779	acquireDirectoryLock acquires a lock for a directory .
780	release releases the lock guard .
781	AssertTruef asserts that b is true .
782	Wrapf wraps an error with the given format and args .
783	initTables initializes the tables .
784	deleteTables removes all tables from the list .
785	tryAddLevel0Table attempts to add a table to the database at the given level . Returns true if the table was added .
786	getTableForKey returns the table for the given key .
787	get returns the value for a given key .
788	overlappingTables returns the number of overlapping tables .
789	String returns a string representation of the item .
790	KeyCopy returns a copy of the item s key .
791	ValueSize returns the value size of the item .
792	NewKeyIterator creates a new iterator for a given key .
793	Valid returns true if the iterator is valid .
794	ValidForPrefix returns whether the iterator is valid for a given prefix .
795	Close closes the iterator .
796	parseItem parses an item from the iterator .
797	Seek attempts to find the next key in the iterator .
798	GetMergeOperator returns a MergeOperator .
799	Get returns the merged data . If there is no merged data an error is returned .
800	compareAndAdd compares this and next levels and adds them to compactStatus . Returns true if this and next levels overlap .
801	newArena creates a new Arena .
802	putNode adds a node to the Arena .
803	getNode returns the node at the given offset .
804	getKey returns the key at the given offset and size .
805	getVal returns a y . ValueStruct with the given offset and size .
806	getNodeOffset returns the offset of a node .
807	init initializes the variables .
808	revertToManifest reverts a manifest to a table .
809	dropTree removes a tree from the manifest .
810	dropPrefix drops a prefix .
811	isLevel0Compactable returns true if the level is 0 .
812	doCompact performs a compact compaction .
813	get retrieves the value for a given key from the levels controller .
814	seekTotal returns the total of all accounts in the badger . Txn .
815	findFirstInvalidTxn returns the first invalid transaction .
816	Create creates a new snapshot sink .
817	List returns a list of snapshot metadata .
818	Open opens a snapshot with the given id .
819	Write implements io . Writer .
820	NewFileSnapshotStoreWithLogger creates a new FileSnapshotStore .
821	NewFileSnapshotStore creates a new FileSnapshotStore .
822	snapshotName returns the name of a snapshot .
823	Create creates a new snapshot .
824	List returns a list of snapshot metadata .
825	getSnapshots returns a list of snapshots .
826	readMeta reads the metadata for a file snapshot .
827	Open opens the snapshot with the given id .
828	ReapSnapshots reaps all snapshots .
829	Write implements io . Writer
830	Close closes the snapshot sink .
831	Cancel cancels the snapshot .
832	finalize flushes the state file and closes the state file .
833	writeMeta writes the metadata of the snapshot to disk .
834	NewNetworkTransportWithConfig creates a new network transport with the given config .
835	setupStreamContext sets up a stream context for the transport .
836	getStreamContext returns the current stream context .
837	SetHeartbeatHandler sets the heartbeat handler .
838	CloseStreams closes all streams in the transport .
839	Close closes the transport .
840	getPooledConn returns the pooled connection for the given server address .
841	getConnFromAddressProvider returns a netConn from an address provider .
842	getConn creates a new netConn from a pooled connection .
843	returnConn returns a netConn .
844	listen waits for a connection to the raft - net stream .
845	handleConn handles a raft - net connection .
846	handleCommand handles an RPC command .
847	decodeResponse decodes the RPC response .
848	sendRPC sends a RPC message to conn .
849	newNetPipeline creates a new netPipeline .
850	decodeResponses reads and decodes responses from the netPipeline .
851	AppendEntries appends a list of entries to the pipeline .
852	Close the netPipeline .
853	NewObserver creates a new Observer .
854	RegisterObserver registers a new observer .
855	DeregisterObserver removes an observer from Raft .
856	observe adds a new observation to the Raft .
857	NewInmemStore creates a new InmemStore .
858	FirstIndex returns the first index in the store .
859	LastIndex returns the last index in the store .
860	GetLog returns the log at the given index .
861	StoreLog stores a log .
862	StoreLogs stores the given logs .
863	DeleteRange deletes all logs in the range min and max .
864	Set sets the value for the given key .
865	Get returns the value associated with the given key .
866	SetUint64 sets a uint64 value for the given key .
867	GetUint64 returns the uint64 value associated with the given key .
868	NewLogCache creates a new LogCache .
869	Connect connects the transport to the given peer .
870	Disconnect removes a peer from the transport .
871	DisconnectAll disconnects all pipelines
872	Respond sends an RPC response .
873	Open implements io . Opener for userSnapshotFuture .
874	vote returns a vote if leader is true .
875	notifyAll sends a notification to all followers of the given leader .
876	cleanNotify removes v from notifyLock .
877	LastContact returns the last contact .
878	setLastContact sets the last contact time .
879	replicate replicates a followerReplication .
880	pipelineReplicate adds a followerReplication to the pipeline .
881	pipelineSend sends append entries to a peer .
882	pipelineDecode is used to decode an append pipeline .
883	setupAppendEntries sets up the append entries for the given request .
884	setPreviousLog sets the previous log entry to the given index .
885	setNewLogs adds a new log entry to the request .
886	appendStats appends a set of metrics to metrics . MeasureSince .
887	handleStaleTerm handles stale term .
888	AppendEntries implements raft . Transport . AppendEntries .
889	RequestVote is part of the raft . Transport interface .
890	InstallSnapshot implements raft . Transport .
891	EncodePeer encodes a peer into the transport .
892	DecodePeer decodes a peer from p .
893	AppendEntries is part of the raft . Pipeline interface .
894	ReadPeersJSON reads a json - encoded list of peers from a file .
895	ReadConfigJSON reads a configuration from a JSON file .
896	NewTCPTransport creates a new TCP transport .
897	NewTCPTransportWithLogger creates a new TCP transport with a logger .
898	NewTCPTransportWithConfig creates a new TCP transport with the given config .
899	Dial is part of the net . Layer interface .
900	Accept is part of net . Layer interface .
901	Addr returns the address of the TCPStreamLayer .
902	restoreSnapshot restores a snapshot .
903	BootstrapCluster returns the future of the cluster .
904	Leader returns the server address of the current leader .
905	Apply executes a command and waits for a response .
906	Barrier returns the future of the Raft barrier .
907	VerifyLeader verifies that the current leader is a leader of raft .
908	AddVoter adds a new voting machine .
909	RemoveServer removes a server .
910	Shutdown returns the shutdown future .
911	Snapshot returns a snapshot of Raft .
912	Restore restores a snapshot to raft .
913	String returns a string representation of Raft .
914	LastContact returns the last contact time .
915	Logf logs a message .
916	containsNode returns true if n is in the list of raftNodes .
917	LeaderPlus returns a slice of raft nodes that have at least n nodes in the cluster .
918	WaitTilUptoDate waits until the given maxWait duration is reached .
919	assertLogEntryEqual checks if two log entries are equal .
920	runFSM runs the raft fsm .
921	Clone creates a new copy of the configuration .
922	Clone returns a copy of the configurations .
923	hasVote returns true if the server with the given id has a vote
924	checkConfiguration checks if a configuration is valid .
925	nextConfiguration returns the next configuration for a given configuration .
926	encodePeers encodes a group of peers into a byte slice .
927	decodePeers decodes a packet of peers into a Configuration .
928	encodeConfiguration encodes a configuration into a byte slice .
929	decodeConfiguration decodes a configuration from a byte slice .
930	goFunc adds a go function to the raftState .
931	getLastIndex returns the index of the last log and snapshot .
932	getLastEntry returns the last log entry and the last log term .
933	checkRPCHeader returns an error if the command does not have a RPC header .
934	setLeader sets the current leader .
935	requestConfigChange is used to request a configuration change .
936	run runs Raft .
937	runFollower runs a raft follower .
938	liveBootstrap is used to live bootstrap a cluster
939	runCandidate is used to run a candidate .
940	runLeader runs the leader state .
941	startStopReplication starts the replication process .
942	configurationChangeChIfStable returns a channel that will be closed when a configuration change occurs .
943	verifyLeader is used to verify if a leader has been verified .
944	checkLeaderLease checks the LeaderLeaseConfig . LeaderLeaseTimeout .
945	restoreUserSnapshot restores a user snapshot .
946	appendConfigurationEntry appends a configuration entry to the future .
947	dispatchLogs dispatches logs .
948	processLogs processes the logs at the given index .
949	processLog processes a log .
950	processRPC processes an RPC .
951	processHeartbeat processes a heartbeat .
952	setLastContact sets the last contact time .
953	persistVote persists a vote .
954	setCurrentTerm sets the current term .
955	setState sets the current RaftState .
956	getCommitIndex returns the commit index .
957	recalculate recalculates the commitment .
958	randomTimeout returns a channel that will be closed when minVal is 0 .
959	generateUUID generates a random UUID .
960	decodeMsgPack decodes a message pack .
961	encodeMsgPack encodes a message pack .
962	backoff returns a backoff time . Duration based on the given round and limit .
963	newApplySource creates a new applySource .
964	reset resets the applySource .
965	DefaultConfig returns a default configuration .
966	ValidateConfig validates the given config .
967	runSnapshots runs a batch of snapshots .
968	shouldSnapshot returns true if a snapshot should be taken .
969	takeSnapshot takes a snapshot of Raft .
970	compactLogs compresses the logs at the given index .
971	WebpackCheck checks the webpack . config . js .
972	New creates a new genny generator .
973	UnixSocket creates a listener for a Unix socket .
974	Get returns an ErrorHandler with the given status . If the status is 0 defaultErrorHandler is returned .
975	PanicHandler returns a Handler that sends panic events to the next handler .
976	partialFeeder returns the partial feeder for the given template name .
977	New creates a new template engine .
978	WriteTo writes the message to the given writer .
979	Send sends a message to the SMTPSender
980	NewSMTPSender creates a new SMTPSender .
981	Param returns the parameter with the given key .
982	Set sets a value for a given key .
983	Value implements Context . Valuer .
984	Redirect redirects the user to the given URL .
985	File returns a binding . File for the given form name .
986	MarshalJSON implements json . Marshaler .
987	New creates a new genny group
988	New returns a new instance of App .
989	DeprecrationsCheck checks for deprecations .
990	List implements the Resource interface .
991	Render implements io . Writer interface .
992	Save saves the session .
993	GetOnce removes a value from the session if it exists .
994	Set adds a new value to the session
995	Clear removes all values from the session
996	getSession returns a session from the session store .
997	New creates a new generator .
998	New creates a new genny generator .
999	New creates a new genny generator .
1000	NewMessage creates a new message .
1001	Reset resets the message .
1002	SetHeader sets the header of the message .
1003	SetHeaders sets the headers for the message .
1004	SetAddressHeader sets the message s address header .
1005	FormatAddress encodes the given address and name into a string .
1006	SetDateHeader sets the date header of the message .
1007	FormatDate returns a string representation of a date .
1008	SetBody sets the body of the message .
1009	SetPartEncoding sets the part encoding .
1010	SetHeader sets the header of a file .
1011	SetCopyFunc sets the copy function .
1012	AttachReader appends a file to the message .
1013	Attach appends a file to the message .
1014	EmbedReader embeds a reader into the message .
1015	Embed appends a file to the message .
1016	ValidateTemplates returns a RunFn that validates the given templates .
1017	PlushValidator validates a plush file .
1018	Validate validates the options .
1019	LoadPlugins loads plugins .
1020	WriteHeader writes a header to the response writer .
1021	Write implements the io . Writer interface .
1022	Flush implements the http . Flusher interface .
1023	CloseNotify sends a close notification to the ResponseWriter .
1024	Run runs the updater .
1025	onlyRelevantFiles returns nil if err is nil .
1026	GoTemplateEngine creates a template and executes it .
1027	GET adds a GET route to the app .
1028	Redirect redirects the user to the specified destination .
1029	ANY implements App . ANY .
1030	buildRouteName returns the path name of the app .
1031	New creates a new genny . Group
1032	NewDialer creates a new Dialer .
1033	Dial creates a new SendCloser .
1034	DialAndSend connects to the server and sends the message .
1035	Set sets the values for a given key .
1036	Add adds a key and value to the Flash data .
1037	persist persists a Flash session .
1038	newFlash creates a new Flash object .
1039	Get retrieves a cookie by name .
1040	Set sets a cookie .
1041	SetWithExpirationTime sets a cookie with expiration time
1042	Delete deletes a cookie .
1043	NewMessage creates a new Message .
1044	NewFromData creates a new message from the given data .
1045	New creates a new message from the given context .
1046	CloseNotify implements EventSource .
1047	NewEventSource returns a new EventSource .
1048	NewSimpleWithContext creates a new Simple with the given context .
1049	Register registers a new handler .
1050	Start starts the Simple Background Worker .
1051	Stop stops the Simple background worker .
1052	Perform performs a job .
1053	PerformAt performs a job until t .
1054	PerformIn performs a job in the given duration .
1055	String returns a string representation of the RouteInfo .
1056	Alias adds aliases to the RouteInfo .
1057	Name returns the name of the route .
1058	BuildPathHelper builds a RouteHelperFunc from the RouteInfo .
1059	New creates a new genny generator
1060	New creates a new generator .
1061	RegisterCustomDecoder registers a custom decoder .
1062	Replace adds a new MiddlewareFunc to the middleware stack
1063	Routes returns a list of routes for the app .
1064	WrapBuffaloHandler wraps the given handler into an http . Handler .
1065	PackageJSONCheck performs a package . json check .
1066	match checks if the importpath is a valid import path .
1067	Send sends a message to the given Sender .
1068	Last returns true if n is the last option .
1069	Stop implements App . Stop .
1070	DepEnsure ensures that a goroutine is running .
1071	String returns a string representation of the BuildInfo .
1072	New returns a new genny generator .
1073	AddBody adds a body to the message .
1074	AddBodies adds the given renderers to the message .
1075	AddAttachment adds an attachment to the message .
1076	AddEmbedded adds an attachment to the message .
1077	SetHeader sets the header of the message .
1078	New creates a new genny group
1079	New creates a new genny generator
1080	New creates a new genny generator
1081	Cleanup creates a new genny . RunFn based on the given options .
1082	MDTemplateEngine creates a template engine from a github - flavored_markdown .
1083	Update updates a configmap .
1084	FilterChanges returns a map of ConfigMapIDs and ConfigMapUpdates that match the given ConfigUpdater .
1085	getLabelsFromREMatches returns a slice of labels from a slice of strings .
1086	getLabelsFromGenericMatches returns a slice of labels from a slice of matches and additional labels .
1087	Start starts the agent .
1088	Subscribe adds a subscription to the agent .
1089	Config returns the agent s configuration .
1090	Set sets the agent s configuration .
1091	IsMember returns true if the given user is a member of an organization .
1092	ListIssueComments is part of the Client interface .
1093	ListPullRequestComments is part of the Client interface .
1094	ListReviews is part of the Client interface .
1095	ListIssueEvents is part of the Client interface .
1096	CreateComment creates a fake comment
1097	CreateReview adds a review to the fake client .
1098	CreateCommentReaction creates a new comment reaction .
1099	CreateIssueReaction creates a fake issue reaction .
1100	DeleteComment deletes an issue comment
1101	DeleteStaleComments is part of the github . Client interface .
1102	GetPullRequest is part of the Client interface .
1103	GetPullRequestChanges is part of the Client interface .
1104	GetRef is part of the Client interface .
1105	DeleteRef is part of the Client interface .
1106	GetSingleCommit is part of the Client interface .
1107	CreateStatus creates a fake status
1108	ListStatuses is part of the Client interface .
1109	GetCombinedStatus is part of the Client interface .
1110	GetRepoLabels is part of the github . Client interface .
1111	GetIssueLabels is part of the github . Client interface .
1112	AddLabel adds a new label to a FakeClient
1113	RemoveLabel is part of the Client interface .
1114	FindIssues is part of the Client interface .
1115	AssignIssue adds a new issue .
1116	GetFile is part of the Client interface .
1117	ListTeams is part of the Client interface .
1118	ListTeamMembers is part of the Client interface .
1119	IsCollaborator returns true if the user is a collaborator .
1120	ListCollaborators returns a list of collaborators .
1121	ClearMilestone is part of the Client interface .
1122	SetMilestone is part of the Client interface .
1123	ListMilestones is part of the github . Client interface .
1124	ListPRCommits is part of the github . Client interface .
1125	GetRepoProjects is part of the github . Client interface .
1126	GetOrgProjects is part of the Client interface .
1127	GetProjectColumns is part of the github . Client interface .
1128	CreateProjectCard creates a fake github . ProjectCard .
1129	DeleteProjectCard deletes a fake project card .
1130	MoveProjectCard is part of the Client interface .
1131	CreateDatabaseClient creates a new InfluxDB client
1132	Push sends a measurement to InfluxDB .
1133	NewProwJobWithAnnotation creates a new ProwJob with the given labels and annotations .
1134	NewProwJob creates a new prow job .
1135	NewPresubmit creates a new presubmit job .
1136	PresubmitSpec creates a ProwJobSpec for a presubmit job .
1137	PostsubmitSpec converts a Postsubmit spec to a ProwJobSpec
1138	PeriodicSpec returns a ProwJobSpec for a periodic job .
1139	BatchSpec returns a ProwJobSpec for a batch job .
1140	PartitionActive splits a slice of ProwJobs into a single pending and triggered channel .
1141	ProwJobFields returns a logrus . Fields representation of a ProwJob .
1142	ClusterToCtx converts a cluster name to a ctx .
1143	AddCommand adds a command to the plugin help
1144	Get takes name of the prowJob and returns the corresponding prowJob object and an error if there is any .
1145	Watch returns a watch . Interface that watches the requested prowJobs .
1146	Delete takes name of the prowJob and deletes it . Returns an error if one occurs .
1147	Patch applies the patch and returns the patched prowJob .
1148	MergeMethod returns the MergeMethod for the given org and repo .
1149	Query returns a string representation of the TideQuery .
1150	ForRepo returns true if the given org and repo match the query .
1151	OrgExceptionsAndRepos returns a map of org exceptions and repos in TideQueries .
1152	QueryMap returns a map of TideQueries .
1153	ForRepo implements the TideQueries interface for QueryMap .
1154	Validate validates the TideContextPolicy .
1155	GetTideContextPolicy returns the TideContextPolicy for the given org branch and repository .
1156	IsOptional returns true if c is an OptionalContextPolicy .
1157	MissingRequiredContexts implements the TideContextPolicy interface .
1158	ValidateWebhook validates a webhook
1159	HelpProvider returns a pluginhelp . PluginHelp object that can be used to request help for plugins that are rebaseable .
1160	HandleEvent handles a pull request event .
1161	HandleAll checks if all repositories have been configured for the plugin .
1162	NewDryRunProwJobClient creates a new dry run prow job client
1163	Create creates a new prow job
1164	Update updates a prow job .
1165	UpdateStatus updates the status of a prow job .
1166	Delete is part of the JobClient interface
1167	DeleteCollection is part of the DryRunProwClient interface
1168	Get is part of the ProwClient interface .
1169	List retrieves a list of prow jobs .
1170	Watch returns a watch . Interface that watches a dryRunProwJob .
1171	Patch implements ProwJobClient .
1172	hasSynced returns true if all controllers have synced .
1173	Run is part of the controller . Controller interface .
1174	runWorker runs the worker .
1175	fromKey converts a key into a string and a string .
1176	enqueueKey adds a key to the workqueue .
1177	finalState returns true if the given prowjob is in a final state .
1178	description returns the description of the condition .
1179	prowJobStatus returns the ProwJobState and a string representation of the pipeline run status .
1180	pipelineMeta returns a metav1 . ObjectMeta for the pipeline .
1181	sourceURL returns the source URL for the given prow job .
1182	makePipelineGitResource converts a ProwJob into a pipeline resource .
1183	makePipelineRun creates a new pipeline run .
1184	matchingConfigs returns a list of plugins that match the given configs .
1185	SuggestCodeChange returns a suggestion code change for a problem .
1186	ServeExternalPluginHelp serves external plugin help
1187	protect implements the Protector interface .
1188	UpdateOrg updates an organization .
1189	UpdateRepo updates a repository .
1190	UpdateBranch updates the protection policy for the given branch .
1191	LoadConfig loads a config from json
1192	Run runs kubectl options
1193	Start starts the agent .
1194	reloadSecret reloads a secret file .
1195	GetSecret returns the secret at the given path .
1196	setSecret sets the secret value for the agent .
1197	GetTokenGenerator returns the token generator function .
1198	New creates a new History .
1199	Record adds a record to the history .
1200	ServeHTTP implements the http . Handler interface .
1201	Flush flushes the action history to GCS .
1202	AllRecords returns a map of all records in the history .
1203	MakeCommand creates a cobra command .
1204	CheckFlags returns an error if any of the pattern matches .
1205	ReceiveComment returns a slice of points from a comment .
1206	NewController creates a new controller .
1207	Run starts the controller .
1208	runWorker runs the worker .
1209	New creates a new local git and git . Client .
1210	MakeFakeRepo creates a fake repo .
1211	AddCommit adds a commit to a repository .
1212	CheckoutNewBranch checks out a new branch .
1213	Checkout is part of the Git interface .
1214	RevParse parses a commit .
1215	CleanAll cleans all regions .
1216	optionsForRepo returns the plugins . Lgtm for the given org and repo .
1217	getChangedFiles returns a list of changes for the given org and repo .
1218	loadReviewers returns a set of reviewers for the given filenames .
1219	NewController creates a new controller .
1220	SaveLastSync saves the last sync to a temp file
1221	Sync implements Controller . Sync .
1222	AddFlags adds flags for the event counter plugin
1223	CheckFlags returns an error if the plugin does not match any flags .
1224	ReceiveIssueEvent receives an issue event .
1225	Upload uploads an object to a bucket .
1226	FileUploadWithMetadata uploads a file with the given metadata .
1227	DataUploadWithMetadata creates a DataUploadFunc that adds metadata to the object .
1228	HasLabel returns true if a label exists in issueLabels .
1229	ImageTooBig returns true if the image is too big .
1230	LevelFromPermissions returns the RepoPermissionLevel from the given permissions .
1231	PermissionsFromLevel converts a RepoPermissionLevel to a RepoPermissions
1232	newProwJobs returns a ProwJobs
1233	GetApplicable returns a slice of Blockers that are applicable to the given org repo and branch .
1234	serve implements the http . Handler interface .
1235	NewCountPlugin creates a new count plugin .
1236	ReceiveComment is part of the CommentPlugin interface .
1237	updateMetrics updates disk usage metrics .
1238	LogStatus logs the current resource status .
1239	SyncConfig syncs the config with the storage .
1240	Metric returns a common . Metric for the specified resource type .
1241	FormatURL returns a human - readable version of the given URL .
1242	runAndSkipJobs runs the requested jobs and skips the jobs that are skipped .
1243	validateContextOverlap validates that the given contexts overlap .
1244	RunRequested runs the requested jobs .
1245	skipRequested creates a list of skipped jobs and adds them to the pull request .
1246	Match returns true if the label matches the event name .
1247	Match returns true if the given event name matches the given label .
1248	AddFlags adds flags to the given FlagSet .
1249	AddFlagsWithoutDefaultGitHubTokenPath adds flags without default GitHubTokenPath
1250	Validate validates GitHub options
1251	GitHubClientWithLogFields creates a new GitHub client .
1252	GitHubClient returns a GitHub client .
1253	GitClient returns a GitHub client .
1254	toMap converts a CoverageList to a map
1255	findChanges takes a baseList and a newList and returns a list of coverage changes .
1256	CreateDatabase creates a new database .
1257	ShouldReport returns true if a job should be reported .
1258	Report reports a job to GitHub .
1259	MarkComplete marks the set as complete .
1260	NewJobAgent creates a new JobAgent .
1261	Start starts the job agent .
1262	Jobs returns a copy of the jobs in the agent .
1263	ProwJobs returns a copy of the ProwJobs
1264	GetProwJob returns the job with the given id .
1265	GetJobLog returns the log for the given job and id .
1266	unionStrings returns the union of parent and child .
1267	Apply applies a policy to a child policy .
1268	GetOrg returns the organization with the given name .
1269	GetRepo returns the repository with the given name .
1270	GetBranch returns the branch with the given name .
1271	GetPolicy returns a policy for a given repository and branch .
1272	UpdateIssueEvents updates the issue events .
1273	enqueueKey enqueues a key from the workqueue .
1274	prowJobStatus returns the status of a prow job .
1275	buildEnv returns a map of environment variables for a build job .
1276	defaultArguments adds default arguments to the argument spec .
1277	defaultEnv creates the default environment for the container .
1278	injectSource injects a source into the build spec .
1279	injectedSteps is a helper function that injects a set of steps into a prowjob .
1280	determineTimeout determines the timeout for a given decoration .
1281	makeBuild creates a Build from a ProwJob .
1282	newLabels creates a sql . Labels object from a slice of github . Labels .
1283	newAssignees creates a new instance of assignees .
1284	NewIssueComment creates a new comment
1285	messageFilter returns a pjutil . Filter that matches the given changes .
1286	IsSuccess returns true if the build is a success
1287	IsFailure returns true if the build is a failure .
1288	IsAborted returns true if the build is aborted .
1289	ProwJobID returns the id of a prow job .
1290	BuildID returns the build ID for the build .
1291	CrumbRequest makes a crumb request
1292	measure implements the metrics . Client interface .
1293	GetSkipMetrics returns skip metrics for a given path .
1294	Get returns the contents of a file at the given path .
1295	request performs a request and returns a response .
1296	doRequest creates a new request .
1297	getJobName returns the name of a prow job .
1298	getBuildPath returns the path to the build job .
1299	GetJobInfo returns the job info for the given job spec .
1300	JobParameterized returns true if the job is parameterized .
1301	EnsureBuildableJob ensures that a job is buildable .
1302	LaunchBuild launches a new build .
1303	Build creates a new build .
1304	BuildFromSpec builds a job from a job spec
1305	GetEnqueuedBuilds returns a list of all builds in the queue .
1306	Abort aborts a build .
1307	PresubmitToJobSpec converts config . Presubmit to downwardapi . JobSpec
1308	PostsubmitToJobSpec converts a Postsubmit to a JobSpec .
1309	PeriodicToJobSpec converts periodic to downwardapi . JobSpec
1310	GetBuildID returns the build id of a build .
1311	listGcsObjects returns a list of GCS objects .
1312	FindBaseProfile returns the gcs base profile .
1313	sortBuilds returns a sorted list of build numbers in strBuilds .
1314	GetAll returns a list of all regions .
1315	NewEventClient creates a new event client .
1316	PruneComments prunes the comments for the given issue .
1317	FormatResponse returns a formatted response .
1318	FormatSimpleResponse formats a simple response .
1319	FormatICResponse returns the response body as a string .
1320	FormatResponseRaw returns the response as a string .
1321	Validate validates the options
1322	Encode encodes the options into a string .
1323	RegisterIssueHandler registers an issue handler with the plugin .
1324	RegisterIssueCommentHandler registers an issue comment handler .
1325	RegisterPullRequestHandler registers a pull request handler .
1326	RegisterStatusEventHandler registers a status event handler .
1327	RegisterPushEventHandler registers a push event handler .
1328	RegisterReviewEventHandler registers a review event handler .
1329	RegisterReviewCommentEventHandler registers a new review comment event handler .
1330	RegisterGenericCommentHandler registers a generic comment handler .
1331	NewAgent creates a new Agent .
1332	InitializeCommentPruner initializes the comment pruner
1333	CommentPruner returns a comment pruner client .
1334	Load loads a configuration from a YAML file .
1335	Config returns the current configuration .
1336	Set sets the configuration of the agent .
1337	Start starts the config agent at the given path .
1338	GenericCommentHandlers returns a map of generic comment handlers for a given repository .
1339	IssueHandlers returns a map of IssueHandlers for the given repository .
1340	IssueCommentHandlers returns a map of IssueCommentHandlers for the given repository .
1341	PullRequestHandlers returns a map of pull request handlers for the given repository .
1342	ReviewEventHandlers returns a map of review event handlers for a given repository .
1343	ReviewCommentEventHandlers returns a map of review comment event handlers for the given repository .
1344	StatusEventHandlers returns a map of status event handlers for a given repository .
1345	PushEventHandlers returns a map of PushEventHandlers for the given repository .
1346	EventsForPlugin returns a list of event handlers for the given plugin name .
1347	insertLink inserts a link to a given view URL .
1348	HelpProvider returns a pluginhelp . PluginHelp object that can be used to request help from a repository .
1349	getPatch fetches a patch from a pull request .
1350	releaseNoteFromParentPR returns the release - note from the parent PR .
1351	ValidatePayload validates a payload .
1352	PayloadSignature returns the signature of the given payload and key .
1353	updateString updates a string with a new value .
1354	updateBool updates a boolean value .
1355	configureOrgMeta configures the metadata for an organization .
1356	configureTeamRepos configures a team s repositories .
1357	ShouldReport returns true if the given ProwJob should report .
1358	Run is part of the downwardapi . Job interface .
1359	Format implements LogrusFormatter .
1360	FindLabels returns a list of labels that match the given regex .
1361	AddFlags adds flags to the Options object .
1362	NewAgent creates a new agent .
1363	HandleLogin returns an http . HandlerFunc that logs a user into the agent .
1364	HandleLogout implements the http . HandlerFunc interface for Agent .
1365	serverError logs an Internal server error .
1366	FromItem converts a common . Item to a ResourcesConfigObject
1367	GetItems returns a slice of all items in the collection .
1368	SetItems sets a set of resources config objects .
1369	UnmarshalText deserializes into a RepoPermissionLevel instance
1370	IsAssignee returns true if the given login is an assignee .
1371	IsAuthor returns true if the user is an authorized user .
1372	HasLabel returns true if the issue has a label .
1373	Branch returns the branch of the PushEvent .
1374	truncate returns a truncated version of in .
1375	reportStatus reports the status of a prowJob .
1376	parseIssueComments parses a set of IssueComments from a ProwJob .
1377	createComment creates a comment from a report template .
1378	Config returns the lens config .
1379	Callback implements Lens . Callback .
1380	FormatRecord returns a string representation of a given record .
1381	Namespace sets the client s namespace .
1382	NewFakeClient creates a new fake client .
1383	NewClientInCluster creates a new kubernetes client
1384	NewClientFromFile creates a new client from a YAML file
1385	NewClient creates a new client
1386	ReplaceConfigMap replaces a config with a new one .
1387	GetDiskUsage returns the disk usage for a given path .
1388	GetATime returns the atime for a given path .
1389	RegisterLens registers a lens with Spyglass .
1390	GetLens returns the lens with the given name .
1391	LastNLines returns the last n nines of the artifact .
1392	NewClient creates a new Slack client
1393	WriteMessage sends a message to the chat .
1394	MarkAndSweep marks a NATGateway and sets it to Sweep .
1395	ListAll lists all NAT gateways .
1396	NewClient creates a new Client .
1397	Acquire acquires a resource .
1398	AcquireWait waits for a resource to be acquired .
1399	AcquireByState returns a list of resources .
1400	ReleaseAll releases all holding resources .
1401	ReleaseOne releases a resource .
1402	UpdateAll updates all holding resources .
1403	SyncAll synchronizes all resources .
1404	UpdateOne updates a single resource .
1405	Metric returns a metric of the specified type .
1406	HasResource returns true if the client has a resource .
1407	DialContext is part of the Dialer interface .
1408	NewDashboardAgent creates a new dashboard agent .
1409	QueryPullRequests returns a list of pull requests .
1410	GetHeadContexts returns a list of contexts associated with a pull request .
1411	ConstructSearchQuery constructs a search query for a repository .
1412	NewBundledStates creates a new BundledStates
1413	ReceiveEvent is part of the BundledStates interface .
1414	ages returns the ages of the BundledStates for the given time .
1415	Percentile returns a time . Duration sorted by the percentile .
1416	NewMetrics returns a new instance of Metrics
1417	NewDiskCache creates a new disk cache
1418	NewMemCache creates a new MemCache .
1419	NewFromCache creates a new http . RoundTripper from a cache .
1420	ProwV1 retrieves the ProwV1Client
1421	Prow retrieves the ProwV1Client
1422	NewOwners returns a new Owners object .
1423	GetApprovers returns a map of owners to approvers
1424	GetAllPotentialApprovers returns all potential approvers
1425	GetReverseMap returns a map of approvers in reverse order .
1426	temporaryUnapprovedFiles returns a list of temporary unapproved files .
1427	KeepCoveringApprovers returns a list of registered approvers .
1428	GetSuggestedApprovers returns the list of approvers that are currently approved .
1429	GetOwnersSet returns the set of approver owners .
1430	GetShuffledApprovers returns a list of shuffled approvers .
1431	String returns a string representation of the approval .
1432	IntersectSetsCase returns the intersection of two sets .
1433	NewApprovers returns a new Approvers instance .
1434	AddLGTMer adds a new approver for the given login and reference .
1435	RemoveApprover removes a user from the approver list .
1436	AddAssignees adds the given logins to the list of assignees .
1437	GetCurrentApproversSetCased returns the set of current approvers .
1438	GetFilesApprovers returns a map of file approvers .
1439	NoIssueApprovers returns a map of NoIssue Approvers .
1440	UnapprovedFiles returns the list of files that are not approved .
1441	GetFiles returns a list of approved files .
1442	IsApproved returns true if the Approvers are approved .
1443	ListApprovals returns a list of approvals .
1444	ListNoIssueApprovals returns a list of no - issue approvals .
1445	GenerateTemplate generates a new template with the given name and data .
1446	writeTemplate creates a new template and writes it to outputPath
1447	Labels returns a slice of all the labels in the configuration .
1448	LabelsForTarget returns a slice of labels for a given target .
1449	LoadConfig loads a configuration from a YAML file .
1450	loadLabels loads the labels for the given repositories .
1451	kill kills a repository .
1452	create creates a new update .
1453	classifyLabels is a helper function to classify a set of labels .
1454	linkify converts a string to a link .
1455	NewCache creates a new cache .
1456	KeyToPath returns the path to the given key .
1457	ensureDir ensures that the given directory exists .
1458	Put stores the given content in the cache .
1459	Get retrieves a key from the cache .
1460	Delete removes a key from the cache .
1461	NewGCSArtifact creates a new GCSArtifact .
1462	Size returns the size of the artifact .
1463	ReadAll reads all the artifacts .
1464	ReadTail reads n bytes from the artifact .
1465	gzipped returns true if the artifact is gzipped .
1466	optionsForRepo returns a plugins . Welcome for the given repo .
1467	List lists all ProwJobs in the indexer .
1468	ProwJobs returns an object that can list and get ProwJobs .
1469	List lists all ProwJobs in the indexer for a given namespace .
1470	RunsAgainstAllBranch returns true if the Brancher is running against all branches .
1471	Intersects returns true if br intersects other .
1472	ShouldRun implements RegexpChangeMatcher .
1473	RunsAgainstChanges returns true if reChanges matches a set of strings .
1474	CouldRun returns true if the given baseRef should be run .
1475	ShouldRun implements ChangedFilesProvider . ShouldRun .
1476	CouldRun returns true if the given baseRef should be run .
1477	ShouldRun implements the Run method for Presubmit .
1478	GetPresubmit returns a presubmit for a given repository and job name .
1479	SetPresubmits sets the presubmits for the given jobs .
1480	SetPostsubmits sets the Postsubmits field .
1481	AllPresubmits returns all the presubmits for the given repositories .
1482	AllPostsubmits returns all postsubmits for the given repositories .
1483	AllPeriodics returns all periodics .
1484	ClearCompiledRegexes clears compiled regexes .
1485	Empty returns true if the SimpleConfig is empty .
1486	NewClient returns a new github client .
1487	ExpandAlias expands the alias .
1488	ExpandAliases expands the list of aliases .
1489	ParseFullConfig parses a YAML - encoded FullConfig .
1490	ParseSimpleConfig parses a YAML - encoded SimpleConfig .
1491	decodeOwnersMdConfig decodes the owner config from the given path .
1492	findOwnersForFile finds the owner for a given path .
1493	FindApproverOwnersForFile finds all approvers for a file .
1494	FindReviewersOwnersForFile returns the list of owners of the given file .
1495	FindLabelsForFile returns the labels for the given file .
1496	IsNoParentOwners returns true if the given path has no parent owners .
1497	Ratio returns the coverage ratio .
1498	FromPayload unmarshals a periodic job event from JSON .
1499	ToMessage converts periodicProwJobEvent to a pubsub . Message
1500	UnmarshalText implements the encoding . TextUnmarshaler interface for Privacy .
1501	compileApplicableBlockades compiles a list of blockades that are applicable to the given org .
1502	calculateBlocks returns a summary of the given changes and blockades .
1503	MergeMultipleProfiles merges multiple profiles .
1504	AddFlags adds flags to the given FlagSet .
1505	processNextItem waits for the next item to be processed and returns true if it succeeded .
1506	handleErr handles an error and adds it to the queue .
1507	AggregateFilter returns a filter that aggregates the given filters .
1508	FilterPresubmits takes a filter and a list of presubmits and returns a list of triggers and a list of skip triggers .
1509	MakeCommand creates a cobra command with the given flags .
1510	Push adds an issue event to the heap .
1511	Pop removes the last element from the heap .
1512	NewFakeOpenPluginWrapper creates a new FakeOpenPluginWrapper
1513	ReceiveIssue is part of the OpenPlugin interface .
1514	Validate validates the options .
1515	Complete executes a clone of a repository .
1516	Set sets the format of the repository .
1517	ensure ensures that the given binary is installed .
1518	output outputs a command to stderr .
1519	projects returns a list of project ids .
1520	selectProject selects a project from a list of available projects .
1521	createCluster creates a new cluster .
1522	createContext creates a new gcloud context
1523	contextConfig returns a ClientConfigLoader and a Config object .
1524	selectContext selects a kubernetes context from the given options .
1525	applyCreate executes kubectl create command .
1526	determineSkippedPresubmits determines which presubmits are skipped .
1527	Dispatch dispatches issues and comments to the InfluxDB .
1528	CreateIssue creates a new issue .
1529	CreateStatus creates a new repo status .
1530	ForEachPR lists all PRs in a repository .
1531	GetCollaborators returns a list of collaborators for org and repo .
1532	GetCombinedStatus returns the CombinedStatus for the given ref .
1533	GetIssues returns a list of issues for a given repository .
1534	GetRepoLabels returns the labels for the given org and repo .
1535	GetUser returns a github user .
1536	checkConfigValidity checks if a valid config has been provided through the flags
1537	createSystemdLogfile creates a systemd logfile .
1538	createFullSystemdLogfile creates a full systemd logfile .
1539	createSystemdLogfiles creates systemd logfiles .
1540	prepareLogfiles prepares logfiles relevant to this node .
1541	writeSuccessMarkerFile writes a success marker file
1542	MakeCommand returns a cobra command for junit .
1543	warnDeprecated logs a deprecated message .
1544	Describe returns a string representation of the RequireMatchingLabel .
1545	TriggerFor returns a trigger for the given org and repo .
1546	EnabledReposForPlugin returns the orgs and repos for a given plugin .
1547	EnabledReposForExternalPlugin returns the orgs and repos for the given external plugin .
1548	SetDefaults sets default values for the ConfigUpdater
1549	validatePlugins returns an error if any plugins are duplicated .
1550	ShouldReport returns true if the given prowjob should be reported .
1551	Run runs a git clone command .
1552	PathForRefs returns a path for the given refs .
1553	gitCtxForRefs returns a gitCtx for the given refs .
1554	commandsForBaseRef creates a clone of a base git reference .
1555	gitTimestampEnvs returns the environment variables for the given timestamp .
1556	gitRevParse parses a git commit .
1557	commandsForPullRefs returns a slice of cloneCommands for a set of pull references .
1558	ProduceCovList creates a CoverageList from a slice of profiles .
1559	popRandom removes random elements from a set .
1560	resolve resolves the experimental kubernetes options .
1561	ProwJobClientset implements the ProwJob interface for ExperimentalKubernetesOptions .
1562	ProwJobClient returns a prowJobClient for the specified namespace .
1563	InfrastructureClusterClient implements the KubernetesClient interface for ExperimentalKubernetesOptions
1564	BuildClusterClients implements the KubernetesClients interface for ExperimentalKubernetesOptions
1565	Age returns the age of the active state .
1566	ReceiveEvent returns a new state based on the given event name and label .
1567	ReceiveEvent returns an InactiveState with the given label and start and exit timestamp .
1568	Active returns true if the MultiState is active .
1569	Age returns the age of the given time .
1570	ReceiveEvent implements the ReceiveEvent interface for MultiState .
1571	ProwJobs returns a ProwJobInformer .
1572	ItemToResourcesConfig converts an Item to a ResourcesConfig .
1573	Copy returns a copy of TypeToResources .
1574	MakeCommand returns a cobra command for aggregation .
1575	incrementNumPendingJobs increments the number of pending jobs .
1576	setPreviousReportState sets the previous report state for the given prow job .
1577	SyncMetrics synchronizes metrics for the controller .
1578	DumpProfile writes a list of profiles to the given writer .
1579	blocksEqual returns true if two profile blocks are equal .
1580	NewProwJobInformer constructs a new informer for ProwJob type . Always prefer using an informer factory to get a shared informer instead of getting an independent one . This reduces memory footprint and number of connections to the server .
1581	NewFilteredProwJobInformer constructs a new informer for ProwJob type . Always prefer using an informer factory to get a shared informer instead of getting an independent one . This reduces memory footprint and number of connections to the server .
1582	New creates a new Spyglass .
1583	Lenses returns a slice of all the artifact lenses in the cache .
1584	JobPath returns the path to a Spyglass job .
1585	RunPath parses src and returns the path to the Spyglass instance .
1586	ExtraLinks returns the extra links in src .
1587	needDemux returns a list of plugins that match srcRepo .
1588	desuxExternal deserializes an external plugin .
1589	dispatch sends the given payload to the given endpoint .
1590	AddFlags adds flags for the state plugin
1591	CheckFlags checks if plugin flags are set .
1592	ReceiveIssueEvent receives an issue event .
1593	Load loads the config for a job .
1594	loadConfig loads a config from a YAML file .
1595	yamlToConfig converts a yaml file to a JobConfig
1596	ReadFileMaybeGZIP reads a gzipped file .
1597	finalizeJobConfig finalizes the job configuration .
1598	validateComponentConfig returns an error if the config is invalid .
1599	ConfigPath returns the default config path for the given value .
1600	ValidateController validates a controller .
1601	defaultJobBase sets the default job base
1602	SetPresubmitRegexes sets the presubmit regexes .
1603	setBrancherRegexes sets the branch regexes for the given Brancher .
1604	SetPostsubmitRegexes sets the postsubmit regexes .
1605	Body returns a human - readable representation of a lens .
1606	NewBoskosHandler returns a new http . ServeMux that handles Boskos requests .
1607	ErrorToStatus converts an error to a status
1608	DumpProfile dumps a profile to destination .
1609	LoadProfile loads a profile from disk .
1610	NewClient creates a new git client .
1611	SetCredentials sets the credentials for the given user .
1612	Checkout checks out a commit .
1613	CheckoutNewBranch checks out a new branch .
1614	Merge merges a commit into a repository .
1615	CheckoutPullRequest checks out a pull request .
1616	Config runs a git config command .
1617	retryCmd retries a command .
1618	LabelsAndAnnotationsForSpec returns a map of labels and annotations for a given job spec .
1619	ProwJobToPod converts a prowjob to a pod .
1620	CloneLogPath returns the path to the cloned log file .
1621	cloneEnv clones a kubeconfig environment variable .
1622	sshVolume creates a ssh volume with the given secret .
1623	InjectEntrypoint injects a new entrypoint into the container .
1624	PlaceEntrypoint creates a new entrypoint container .
1625	kubeEnv returns a sorted list of environment variables .
1626	Client creates a new Kubernetes client
1627	handle adds or removes a work - in - progress label .
1628	SendHook sends a hook to GitHub
1629	janitorClean cleans up a project .
1630	janitor runs a janitor on a resource .
1631	Run runs the pull server .
1632	specToStarted converts a JobSpec to a gcs . Started object .
1633	Run implements the options . Options interface .
1634	hasPRChanged returns true if the pull request action has changed .
1635	UpdateIssues fetches the latest issue update from the database .
1636	handleReviewEvent handles a review event .
1637	findAssociatedIssue finds an associated issue in the given body .
1638	optionsForRepo returns a plugins . Approve for the given repository .
1639	localOnlyMain is a wrapper around http . ServeMux . LocalOnlyMain .
1640	summarize returns a summary of the covered statements .
1641	Subset returns a new CoverageList containing a subset of the given prefix .
1642	ListDirectories returns a list of all directories in the CoverageList .
1643	readRequest reads an admission request from the given io . Reader .
1644	handle writes the request to the response writer .
1645	writeResponse writes an admission response to w .
1646	onlyUpdateStatus only updates the status of a resource .
1647	convertSuiteMeta converts gcs . SuitesMeta to a resultstore . Suite .
1648	NewHealth returns a new instance of Health .
1649	ServeReady implements the Health interface .
1650	NewController creates a new Controller .
1651	newExpectedContext creates a new expected context .
1652	contextsToStrings converts a slice of contexts into a slice of strings .
1653	filterSubpools returns a map of subpools filtered by goroutines .
1654	filterSubpool filters the list of pull requests from the given subpool .
1655	poolPRMap creates a map of pull requests for the given subpool .
1656	unsuccessfulContexts returns a list of failed contexts .
1657	accumulate takes a map of presubmits to PullRequests and a map of ProwJobs to PullRequests .
1658	tryMerge returns true if the merge function returns an error .
1659	prChanges implements config . ChangedFilesProvider .
1660	prune prunes the changedFilesAgent .
1661	dividePool divides a pool into subpools .
1662	AggregateProfiles aggregates a slice of profiles .
1663	countToBoolean converts a slice of profiles to a Boolean slice .
1664	NewStorage creates a new Storage instance .
1665	AddResource adds a resource to the storage .
1666	DeleteResource deletes a resource .
1667	UpdateResource updates a resource .
1668	GetResource returns a resource by name .
1669	GetResources returns a list of resources .
1670	SyncResources synchronizes a set of resources .
1671	ParseConfig parses a Boskos config file .
1672	problemsInFiles returns a map of problems in the given files .
1673	NewPodLogArtifact creates a new pod log artifact .
1674	CanonicalLink returns the canonical link for the pod log artifact
1675	ReadAt implements io . ReaderAt interface .
1676	ReadAll reads all the pod logs .
1677	ReadAtMost reads the pod log at most n bytes .
1678	ReadTail reads the pod log tail .
1679	newProblems creates a new problem map from a list of review comments .
1680	problemsInFiles returns a map of problems in the given files .
1681	undoPreset undoes a preset .
1682	undoPresubmitPresets undoes a set of presets .
1683	yamlBytesStripNulls yamlBytes
1684	monitorDiskAndEvict monitors disk usage and evicts blocks until eviction occurs .
1685	difference returns the difference between the two orgRepoConfigs .
1686	union returns a new orgRepoConfig containing the union of c and c2 .
1687	clearStaleComments removes all stale comments .
1688	determineReleaseNoteLabel determines the label needed for a release note .
1689	getReleaseNote returns the release note in the given body .
1690	NewClient creates a new Boskos client .
1691	Acquire acquires a resource .
1692	ReleaseOne releases a resource .
1693	UpdateAll updates all the data in the current state .
1694	GetGitHubClient returns a github client for the given access token .
1695	GetUsername returns the username of the user .
1696	CreateTokenHandler creates a new token handler .
1697	CreateTokenHandlers creates a list of token handlers .
1698	String returns the string representation of a jobIndentifier .
1699	TerminateOlderPresubmitJobs terminates older presubmit jobs .
1700	PushMetrics pushes metrics to endpoint .
1701	RateLimiter returns a Workqueue . RateLimitingInterface .
1702	checkExistingStatus checks if there is an existing status for a pull request .
1703	checkExistingLabels checks if there are any labels in a pull request .
1704	handle runs the DCO check against the commits in PR .
1705	MarkdownSHAList Marks down a list of commits in Markdown format .
1706	PathForSpec returns the path for the given spec .
1707	AliasForSpec returns the alias for the job spec .
1708	RootForSpec returns the root path for the given job spec .
1709	NewSingleDefaultRepoPathBuilder creates a new single default repo path builder .
1710	NewExplicitRepoPathBuilder returns a RepoPathBuilder .
1711	RegisterSourceOrDie registers an IssueSource or dies .
1712	CreateAndSync creates and synchronizes IssueCreator .
1713	loadCache loads IssueCreator from the cache .
1714	setIntersect sets the intersection of two strings .
1715	sync creates a new issue .
1716	GetAWSCreds returns the AWS credentials for the given resource .
1717	stopper returns a channel that will be closed when the interrupt is received .
1718	newPipelineConfig creates a new pipeline config .
1719	KubeClient returns the Kubernetes client
1720	ProwJobClient returns the kube . ProwJobClient
1721	resolveSymLink reads a symLink from the bucket and replaces it with a prefix .
1722	readJSON reads a JSON object from a storage bucket .
1723	listSubDirs lists all subdirectories of a bucket .
1724	listAll lists all objects in a bucket .
1725	listBuildIDs returns a list of GCS directory ids .
1726	FilterProfilePaths takes a slice of profiles and a slice of paths and returns a slice of profiles that match the include flag .
1727	LoadSecrets loads secrets from a list of paths .
1728	LoadSingleSecret loads a single secret from a file
1729	Set sets the value of a Bool .
1730	NewOpener creates a new Opener .
1731	IsNotExist returns true if the error is a storage . ErrObjectNotExist
1732	LogClose closes the io . Closer .
1733	Writer returns an io . WriteCloser for the given path .
1734	InitGitHubOAuthConfig initializes GitHub OAuth config
1735	deltaDisplayed returns a string representing the delta of a coverage change .
1736	makeTable creates a table from a base and new CovList .
1737	ContentForGitHubPost returns the code coverage report for a GitHub post .
1738	AddFlags adds flags to the command
1739	CheckFlags checks if the organization and project flags are set .
1740	getGitHubClient returns a github client .
1741	limitsCheckAndWait checks and waits for the rate limits to be reached .
1742	FetchIssues fetches issues from the given channel .
1743	hasID returns true if the given issue event has the given id .
1744	FetchIssueEvents fetches all issues events from github .
1745	isPRChanged returns true if a pull request action has changed .
1746	NewFetcher creates a new Fetcher .
1747	fetchRecentIssues fetches issues that have been updated since the last update .
1748	fetchRecentEventsAndComments fetches recent events and comments from the database .
1749	Fetch fetches the latest events and comments from the database .
1750	Issues implements the FlakyJobReporter interface .
1751	Title returns the title of the flaky job .
1752	Labels returns the labels for the FlakyJob .
1753	ReadHTTP reads the HTTP response from the given URL .
1754	String returns a string representation of the linesByTimestamp .
1755	NewJobSpec creates a new JobSpec .
1756	ResolveSpecFromEnv resolves the job spec from the environment .
1757	EnvForSpec returns a map of environment variables for a given job spec
1758	EnvForType returns the environment variables for the given job type .
1759	getRevisionFromRef returns the revision from the given refs .
1760	GetRevisionFromSpec returns the revision from the job spec .
1761	helpProvider returns a pluginhelp . PluginHelp object that provides help for plugins that block merge commits .
1762	load reads the contents of the given io . Reader .
1763	loadPaths loads the paths from r .
1764	Match returns true if the given path is in the group .
1765	CreateDatabase creates a new InfluxDB .
1766	mergeTags merges the default and extra tags into a single map .
1767	tagsToWhere converts a map of tags to where .
1768	Push adds a measurement to the database .
1769	artifact returns a pod log artifact .
1770	serve implements the promhttp . Handler interface
1771	gather gathers metrics from the controller .
1772	makeRequest creates a github . BranchProtectionRequest from the given policy .
1773	makeReviews returns a github . RequiredPullRequestReviews object .
1774	Header returns a string representation of a lens header .
1775	Callback implements lens . Lens interface .
1776	logLinesAll reads all lines from artifact and returns them as a slice .
1777	executeTemplate executes a template . html file .
1778	DeepCopyObject returns a deep copy of the resource object .
1779	FromItem converts a common . Item to a ResourceObject
1780	SetItems sets the items of the resource collection .
1781	DeepCopyObject returns a deep copy of the resource collection .
1782	useContext runs kubectl use - context command
1783	currentContext returns the current kubectl context .
1784	command executes a command and returns its stderr .
1785	describeCluster returns a description of the cluster .
1786	Set appends a value to the slice .
1787	parseXML parses XML into a gcsDir .
1788	Render renders the gcsDir .
1789	Render renders a record .
1790	Render renders the prefix .
1791	Printf implements the Logger interface .
1792	NewClient creates a new gerrit client
1793	SetReview sets the review for the given instance .
1794	GetBranchRevision returns the revision of the given branch for the given instance .
1795	queryAllChanges returns a slice of changes for each given project .
1796	NewTypeFilterWrapperPlugin creates a new TypeFilterWrapperPlugin
1797	AddFlags adds flags for TypeFilterWrapperPlugin
1798	CheckFlags implements TypeFilterWrapperPlugin .
1799	AddFlags adds flags related to KubernetesClient to the specified FlagSet .
1800	Validate validates kubeconfig
1801	Client implements KubernetesClientInterface .
1802	newCRDClient creates a new REST client for the given type .
1803	createRESTConfig creates a RESTConfig from a kubeconfig string .
1804	registerResource registers a new resource .
1805	newDummyClient creates a new dummy client .
1806	Update updates a dummy object
1807	TrustedPullRequest returns a list of github . Labels for a pull request .
1808	buildAll builds all changes from a pull request .
1809	Run implements the options . Options interface .
1810	AddConfig adds a resource config to the storage .
1811	DeleteConfig deletes a config .
1812	UpdateConfig updates the storage config .
1813	GetConfig returns a resource config by name .
1814	GetConfigs returns a list of resources configs .
1815	SyncConfigs updates the current set of configs .
1816	addKnownTypes adds known types to a scheme .
1817	NewController returns a new kubeProwJob controller
1818	Run runs the controller .
1819	addedBlockingPresubmits creates a map of config . Presubmits from a map of old and new .
1820	removedBlockingPresubmits returns a map of config . Presubmits that have been removed from old and new .
1821	migratedBlockingPresubmits returns a map of old and new presubmits .
1822	Load loads config from json config .
1823	canExecuteConcurrently returns true if a job can be executed concurrently .
1824	getJenkinsJobs returns a list of jenkins jobs .
1825	terminateDupes terminates a set of build duplicates .
1826	Throttle is used to throttle a request .
1827	NewClientWithFields creates a new github client .
1828	NewClient creates a new graphql client .
1829	NewDryRunClient returns a new instance of DryRunClient .
1830	NewFakeClient creates a new github client
1831	request makes a request and unmarshals the response into ret .
1832	requestRaw reads the body of a request and returns the number of bytes read .
1833	getUserData retrieves the user data .
1834	readPaginatedResultsWithValues returns a paged result with the given values .
1835	UpdatePullRequest updates a pull request .
1836	getLabels returns a list of labels for the given path .
1837	stateCannotBeChangedOrOriginalError converts an error to a StateCannotBeChanged .
1838	IsMergeable checks if a pull request is mergeable .
1839	Token returns an oauth2 . Token .
1840	ListArtifacts lists all artifacts in src .
1841	KeyToJob converts src to a Spyglass job .
1842	prowToGCS returns the GCS URL for the given prow job .
1843	FetchArtifacts returns a slice of artifacts from src .
1844	DeepCopy is an autogenerated deepcopy function copying the receiver creating a new DecorationConfig .
1845	DeepCopy is an autogenerated deepcopy function copying the receiver creating a new GCSConfiguration .
1846	DeepCopy is an autogenerated deepcopy function copying the receiver creating a new JenkinsSpec .
1847	DeepCopy is an autogenerated deepcopy function copying the receiver creating a new ProwJob .
1848	DeepCopy is an autogenerated deepcopy function copying the receiver creating a new ProwJobList .
1849	DeepCopy is an autogenerated deepcopy function copying the receiver creating a new ProwJobSpec .
1850	DeepCopy is an autogenerated deepcopy function copying the receiver creating a new ProwJobStatus .
1851	DeepCopy is an autogenerated deepcopy function copying the receiver creating a new Pull .
1852	DeepCopy is an autogenerated deepcopy function copying the receiver creating a new Refs .
1853	DeepCopy is an autogenerated deepcopy function copying the receiver creating a new UtilityImages .
1854	upload uploads a test to the resultstore .
1855	ApplyDefault returns a new DecorationConfig with the default values applied .
1856	Validate validates the DecorationConfig .
1857	ApplyDefault applies default values to UtilityImages .
1858	ApplyDefault returns a new GCSConfiguration with the default values applied . If g is nil the default values will be used .
1859	Validate validates the GCS configuration .
1860	ClusterAlias returns the alias for the cluster .
1861	NewResource creates a new resource .
1862	NewResourcesFromConfig creates a new Resource from a ResourceEntry .
1863	UserDataFromMap converts a UserDataMap to a UserData object .
1864	Set sets the CommaSeparatedStrings flag .
1865	UnmarshalJSON deserializes into a UserData instance
1866	Extract extracts user data from yaml .
1867	Set stores the user data as a YAML object .
1868	Update updates the user data .
1869	ToMap converts UserData to a UserDataMap .
1870	FromMap creates a UserData from a UserDataMap .
1871	ItemToResource converts an Item to a Resource .
1872	Run runs the options .
1873	addSSHKeys adds the SSH keys to the given paths .
1874	Issues returns a slice of issue creators .
1875	loadClusters loads the clusters from json .
1876	parseTriageData parses a JSON - encoded triageData .
1877	topClusters returns a slice of clusters with the top count of clusters .
1878	topJobsFailed returns a slice of all failed jobs .
1879	Title returns the title of the failed cluster .
1880	Labels returns the labels for the cluster .
1881	New creates a new cron .
1882	QueuedJobs returns the list of queued jobs .
1883	HasJob returns true if the job with the given name exists .
1884	addJob adds a job to the cron agent .
1885	removeJob removes a job from the cron agent .
1886	UpdateComments updates the comments for an issue .
1887	GatherProwJobMetrics takes a slice of ProwJobs and returns a map of metric values .
1888	optionOrDefault returns option or default value if option is 0 .
1889	newGCSJobSource creates a new GCS job source .
1890	artifacts returns the list of artifacts associated with the given key .
1891	canonicalLink returns the canonical link of the job source .
1892	jobPath returns the job path of the job source .
1893	targetURL returns the target URL for a pull request .
1894	newBuildConfig creates a new buildConfig .
1895	NewClient creates a new github client
1896	retry is used to retry a request .
1897	depaginate recursively depaginates a list of items .
1898	NewHelpAgent creates a new HelpAgent .
1899	GeneratePluginHelp generates plugin help .
1900	getPullCommitHash returns the commit hash of a pull .
1901	listJobBuilds lists all jobs in a bucket .
1902	getPRBuildData returns the build data for all the build jobs in the given bucket .
1903	getGCSDirsForPR returns a map of GCSDirs for a given repo .
1904	imageDeleteFromDisk removes an image file from disk .
1905	doNetworksCreate creates a network
1906	networkLoadByName loads a network by name .
1907	Transaction implements the Node interface .
1908	ForLocalInspectionWithPreparedStmts is like ForLocalInspection but uses PrepareStmts instead .
1909	SetDefaultTimeout sets the default timeout
1910	Transaction implements the Cluster interface .
1911	EnterExclusive gets an exclusive lock on the cluster db .
1912	ExitExclusive is part of the Cluster interface .
1913	Close closes the database .
1914	TxCommit commits a transaction .
1915	ParseRemote parses a remote config .
1916	GetContainerServer returns a container server for a given name .
1917	GetImageServer returns the lxd . ImageServer with the given name .
1918	initAppArmor initializes AppArmor .
1919	appArmorCanStack returns true if the app armor can stack .
1920	containerDeviceAdd adds a device to a container
1921	profileDeviceAdd adds a new device to the profile .
1922	ensureImageAliases returns nil if there are no aliases .
1923	GetExistingAliases returns a list of existing aliases .
1924	String returns a string representation of a StatusCode .
1925	ImagesGetExpired returns a list of images that have expired .
1926	ImageSourceInsert inserts an image into the database .
1927	ImageSourceGet returns the id server protocol and alias of the given image .
1928	ImageExists returns true if an image exists for the given project and fingerprint .
1929	ImageGet returns the image associated with the given project .
1930	ImageGetFromAnyProject returns the image with the given fingerprint from any project .
1931	imageFill uploads an image to the cluster .
1932	ImageLocate removes an image from the cluster .
1933	ImageAssociateNode creates an associate node for an image .
1934	ImageDelete deletes an image .
1935	ImageAliasesGet returns the aliases for the given project .
1936	ImageAliasGet returns the id of the image alias associated with the given project and name .
1937	ImageAliasRename renames an image alias .
1938	ImageAliasDelete deletes an image alias .
1939	ImageAliasesMove moves the image aliases from source to destination .
1940	ImageAliasAdd adds an image alias to a project .
1941	ImageAliasUpdate updates an image alias .
1942	ImageLastAccessUpdate updates the last_use_date field of an image .
1943	ImageLastAccessInit initializes the image with the given fingerprint .
1944	ImageUpdate updates an existing image .
1945	ImageInsert inserts an image into the cluster .
1946	ImageGetPools returns a list of pool ids for the given image fingerprint .
1947	ImageGetPoolNamesFromIDs returns a list of pool names from the given ids .
1948	ImageUploadedAt is part of the Cluster interface .
1949	ImagesGetOnCurrentNode returns the images on the current node .
1950	ImagesGetByNodeID returns a map of images by node id .
1951	ImageGetNodesWithImage returns the nodes with the given image fingerprint .
1952	ImageGetNodesWithoutImage returns the nodes with the given image fingerprint .
1953	Add adds a task to the group .
1954	Start starts the group .
1955	zfsIsEnabled returns true if zfs is enabled
1956	zfsToolVersionGet returns the zfs tool version .
1957	Get the ZFS module version .
1958	Create zfs pool volume
1959	zfsPoolVolumeExists returns true if a zfs pool volume exists
1960	NetworkIDsNotPending returns a map of network IDs that are not pending .
1961	NetworkConfigAdd is part of the Transaction interface .
1962	NetworkNodeJoin is used to join a network node
1963	NetworkCreatePending creates a new network with the given name .
1964	NetworkCreated is part of the Cluster interface .
1965	NetworkErrored implements the Transaction interface for ClusterTx .
1966	NetworkGet retrieves a network from the database .
1967	networkNodes returns a list of nodes with the given network id .
1968	NetworkGetInterface returns the interface for the given node .
1969	NetworkConfigGet returns the network config for the given node id .
1970	NetworkCreate creates a new network .
1971	NetworkUpdate updates a network .
1972	NetworkUpdateDescription updates a network description .
1973	NetworkConfigClear clears the network config .
1974	NetworkDelete deletes a network .
1975	NetworkRename renames a network .
1976	GetContainers returns a list of containers
1977	GetContainersFull returns a list of containers .
1978	GetContainer retrieves a container by name
1979	CreateContainerFromBackup creates a container from a backup
1980	CreateContainer creates a new container
1981	CreateContainerFromImage creates a container from an image
1982	UpdateContainer updates a container .
1983	RenameContainer renames a container .
1984	ExecContainer executes a container .
1985	GetContainerFile retrieves a file from a container .
1986	CreateContainerFile creates a new container file .
1987	DeleteContainerFile deletes a file in a container
1988	GetContainerSnapshotNames returns a list of snapshot names for a container .
1989	GetContainerSnapshots returns a list of snapshots for the specified container .
1990	GetContainerSnapshot returns a snapshot of a container
1991	CreateContainerSnapshot creates a container snapshot .
1992	MigrateContainerSnapshot is used to migrate a container snapshot
1993	UpdateContainerSnapshot updates a container snapshot .
1994	GetContainerState returns the current state of a container .
1995	UpdateContainerState updates the state of a container
1996	GetContainerLogfiles returns the logfiles for a container .
1997	GetContainerLogfile retrieves a container s log file .
1998	GetContainerMetadata returns the metadata for a container .
1999	SetContainerMetadata sets metadata for a container .
2000	GetContainerTemplateFiles returns a list of templates for the given container .
2001	CreateContainerTemplateFile creates a new container template file
2002	DeleteContainerTemplateFile deletes a container template file
2003	ConsoleContainer implements the Protocol interface for ProtocolLXD .
2004	GetContainerConsoleLog returns a io . ReadCloser that can be used to read the console log .
2005	DeleteContainerConsoleLog deletes the console log for a container
2006	GetContainerBackups returns a list of container backups .
2007	GetContainerBackup returns the container backup for the given container name .
2008	CreateContainerBackup creates a container backup .
2009	RenameContainerBackup renames a container backup .
2010	DeleteContainerBackup deletes a container backup .
2011	GetContainerBackupFile returns a backup file for a container .
2012	RsyncSend rsync send command
2013	patchesGetNames returns the names of all patches .
2014	patchRenameCustomVolumeLVs renames a custom volume .
2015	patchLvmNodeSpecificConfigKeys patch lvm node specific config keys
2016	GetHTTPClient returns the HTTP client .
2017	do adds macaroon headers to the request .
2018	RawQuery implements the Query interface for ProtocolLXD .
2019	RawWebsocket returns a websocket connection for the given path .
2020	RawOperation implements the Protocol interface for ProtocolLXD .
2021	ProfileToAPI converts a profile to an api . Profile
2022	Profiles returns the names of the profiles associated with the specified project .
2023	ProfileGet returns the profile associated with the specified project and name .
2024	ProfilesGet returns a list of profiles for a given project .
2025	ProfileConfig returns the profile config for the specified project .
2026	ProfileConfigClear clears a profile config .
2027	ProfileConfigAdd adds a profile config to the database .
2028	ProfileContainersGet returns the list of containers with the given profile .
2029	ProfileCleanupLeftover removes a profile from the cluster .
2030	ProfilesExpandConfig returns a map of profiles to expanded config .
2031	ProfilesExpandDevices returns a new set of devices .
2032	GetServer returns the server associated with the protocol .
2033	UpdateServer updates a server .
2034	HasExtension returns true if the protocol has an extension .
2035	GetServerResources returns the server s resources .
2036	UseProject creates a new container server with the given name .
2037	sqliteOpen opens a sqlite database at the given path .
2038	Rebalance rebalances a raft cluster .
2039	Promote promotes a node to a database node .
2040	Purge removes a node from the database .
2041	List lists all raft nodes in the cluster .
2042	Count returns the number of nodes in the cluster .
2043	Enabled returns true if the node is enabled .
2044	membershipCheckNodeStateForBootstrapOrJoin checks if a node is in bootstrap or join state .
2045	membershipCheckClusterStateForBootstrapOrJoin returns an error if the membership check fails .
2046	membershipCheckClusterStateForAccept returns an error if the cluster does not have a node with the given name and address .
2047	membershipCheckClusterStateForLeave returns an error if the node is the only node in the cluster .
2048	membershipCheckNoLeftoverClusterCert returns an error if there is no leftover cluster certificate .
2049	ConfigLoad loads the config from the database .
2050	Replace replaces a set of values .
2051	Patch adds a patch to the config .
2052	HTTPSAddress returns the HTTPSAddress for the given node .
2053	CertificatesGet returns the list of certificates in the cluster .
2054	CertificateGet retrieves a certificate by fingerprint .
2055	CertSave saves a certificate to the cluster .
2056	CertDelete deletes a certificate by fingerprint .
2057	CertUpdate updates a certificate .
2058	createDevLxdlListener creates a new socket unix socket listener .
2059	Servers implements raft . Instance .
2060	Shutdown shuts down the raft instance .
2061	raftNetworkTransport creates a new raft network transport .
2062	raftConfig returns a raft . Config based on the given latency .
2063	raftMaybeBootstrap checks if raft has an existing state .
2064	CPUResource returns the resources for a CPU .
2065	MemoryResource returns api . ResourcesMemory .
2066	GetOperationUUIDs returns a list of UUIDs associated with an operation .
2067	GetOperations returns a list of operations .
2068	GetOperation returns the operation with the given UUID .
2069	GetOperationWebsocket returns a websocket connection for an operation .
2070	tryMount mounts a filesystem to a filesystem .
2071	lxdUsesPool returns true if lxd uses a pool
2072	ProjectURIs returns a list of URIs that match the given filter .
2073	ProjectList lists all projects in the cluster .
2074	ProjectGet returns a project by name .
2075	ProjectExists returns true if the project with the given name exists .
2076	ProjectCreate creates a project .
2077	ProjectUsedByRef returns the list of objects that are used by a given reference .
2078	ProjectRename renames a project .
2079	ProjectDelete deletes a project .
2080	PasswordCheck checks if a password is set .
2081	LoadCert loads a TLS certificate from the given directory .
2082	WriteCert writes a certificate to the given directory .
2083	NewDaemon creates a new Daemon .
2084	DefaultDaemon creates a default daemon .
2085	AllowProjectPermission returns a function that allows a user to run a project with the given permission .
2086	checkTrustedClient returns an error if the client is not authorized .
2087	Authenticate checks if the request is authenticated .
2088	State returns the state of the daemon .
2089	UnixSocket returns the path to the Unix socket .
2090	Stop stops the daemon .
2091	setupExternalAuthentication sets up external authentication .
2092	initializeDbObject initializes the local database object .
2093	WriteJSON writes a JSON response to the given http . ResponseWriter .
2094	EtagHash returns the hash of an etag .
2095	EtagCheck returns an error if the etag doesn t match the data .
2096	HTTPClient creates an http . Client from a certificate and a proxyFunc .
2097	IsRecursionRequest returns true if the request is a recursion request .
2098	GetListeners returns a list of net . Listeners for a given start .
2099	internalSQLGet fetches a sql database from a daemon .
2100	internalSQLPost posts an internal SQL query .
2101	PublicKey returns the public key of the certificate .
2102	PrivateKey returns the private key associated with the certificate .
2103	Fingerprint returns the fingerprint of the certificate .
2104	GenerateMemCert generates a new cert based on the given certf and keyf .
2105	PrintServerInfo prints information about the container server .
2106	LaunchContainers starts a batch of containers .
2107	CreateContainers creates containers .
2108	GetContainers returns a list of containers .
2109	StartContainers starts a batch of containers .
2110	setQueryParam sets a query parameter with the given value .
2111	GetImages returns a list of images .
2112	GetImageFile returns the image file associated with the given fingerprint .
2113	GetImageSecret returns the image secret for the given fingerprint .
2114	GetPrivateImage returns a private image with the given fingerprint and secret .
2115	GetPrivateImageFile returns a private image file .
2116	GetImageAliases returns a list of image aliases .
2117	tryCopyImage attempts to copy an image .
2118	CopyImage creates a copy of an image .
2119	UpdateImage updates an image .
2120	DeleteImage deletes an image .
2121	RefreshImage performs a refresh operation on an image .
2122	CreateImageAlias creates an image alias
2123	UpdateImageAlias updates an image alias .
2124	RenameImageAlias renames an image alias
2125	DeleteImageAlias deletes an image alias
2126	Open opens a database at the given directory .
2127	EnsureSchema ensures the LXD database schema is valid .
2128	FilesystemDetect returns the backing filesystem for the given path .
2129	Schema returns a new schema .
2130	updateFromV37 updates the Raft node count from version 37 .
2131	ArchitectureGetLocal returns the local version of the architecture .
2132	NewController creates a new MAAS controller .
2133	CreateContainer creates a container
2134	DefinedContainer returns true if the container is defined .
2135	UpdateContainer updates a container .
2136	RenameContainer renames a container
2137	DeleteContainer deletes a container
2138	Add adds an update to the schema .
2139	ensureSchemaTableExists checks if the schema table exists .
2140	queryCurrentVersion returns the current schema version .
2141	ensureUpdatesAreApplied ensures that the given updates are applied .
2142	Check if the schema versions have no holes .
2143	checkAllUpdatesAreApplied checks if all the given updates are applied .
2144	formatSQL converts a SQL statement into a string .
2145	GetAllXattr returns all xattrs for a given path .
2146	GetErrno returns the syscall . Errno of err . If err is a syscall . Errno the syscall . Errno is returned .
2147	Uname returns a utsname .
2148	RegisterStmt registers a statement .
2149	PrepareStmts prepares a list of sql . Stmts .
2150	NewGateway creates a new gateway .
2151	DialFunc implements dqlite . DialFunc for Gateway .
2152	Shutdown shuts down the gateway .
2153	Sync synchronizes the database .
2154	Reset resets the gateway .
2155	LeaderAddress returns the leader s address .
2156	waitLeadership waits for the raft leader to be selected .
2157	currentRaftNodes returns the current list of RaftNodes .
2158	cachedRaftNodes returns the cached raft nodes .
2159	dqliteMemoryDial creates a dqlite . DialFunc that connects to the given unix address .
2160	DqliteLog implements the dqlite . Logger interface .
2161	MetadataAsMap returns the metadata as a map .
2162	MetadataAsOperation returns the response metadata as an operation .
2163	MetadataAsStringSlice returns the metadata as a string slice .
2164	MetadataAsStruct unmarshals the response into a struct .
2165	Load loads a CSVReport from a file .
2166	Write writes the report to a file .
2167	AddRecord adds a record to the report .
2168	LoadConfig loads the configuration from a YAML file .
2169	SaveConfig saves the configuration to the given path .
2170	Get returns an io . Reader for the given path .
2171	ConfigPath returns the path to the config file
2172	ServerCertPath returns the path to the server certificate for the given remote .
2173	NewConfig creates a new Config .
2174	checkForPreDumpSupport checks if the container supports pre - dump .
2175	preDumpLoop implements the migrationSource interface for SourceWs .
2176	newRoot creates a new lxd - generate command
2177	APIExtensionsCount returns the number of API extensions .
2178	SelectURIs takes a sql . Stmt and a function to select URIs .
2179	SelectStrings takes a query string and args and returns a slice of strings .
2180	scanSingleColumn scans a single column .
2181	LazyHandler creates a handler that evaluates a Lazy record .
2182	Callers returns a trace of all the callers .
2183	name returns the name of the call .
2184	TrimBelow returns a trace that is below the given call .
2185	TrimAbove removes a call from the trace .
2186	TrimBelowName returns the trace with the given name removed .
2187	TrimAboveName returns the trace with the given name removed .
2188	TrimRuntime returns a trace with the runtime removed .
2189	GetCaps returns the security . capability value for a given path .
2190	SetCaps sets the caps for a given path .
2191	Read implements io . Reader .
2192	Supported returns true if the given path is supported .
2193	GetProject returns the project ID for a given path .
2194	SetProject sets the project id on the given path .
2195	DeleteProject deletes a project .
2196	GetProjectUsage returns the project usage for the given id .
2197	SetProjectQuota sets the quota for a project .
2198	backupLoadByName loads a backup by name .
2199	backupCreate creates a new backup object .
2200	Rename renames a backup .
2201	Delete deletes the backup .
2202	backupFixStoragePool creates a new backup for a storage pool .
2203	Count returns the number of rows in the given table .
2204	CountAll counts all tables in a transaction .
2205	InitTLSConfig initializes TLS config
2206	copyContainerThinpool copies a container into a thinpool .
2207	copyContainerLv copies a container lv from source to target .
2208	copyContainer copies a container from source to target .
2209	copyVolume copies the volume from sourcePool to sourcePool .
2210	GetPrivateImage implements the SimpleStreams interface .
2211	GetPrivateImageFile is not supported by the simplestreams protocol
2212	GetImageAliasNames returns a list of image aliases
2213	ProtoRecv reads the next binary message from the websocket and unmarshals it .
2214	ProtoSend sends a proto message to the websocket .
2215	ProtoSendControl sends a migration control message to the websocket .
2216	Read implements the io . Reader interface .
2217	doContainersGetFromNode fetches containers from a node .
2218	Retry retries a function .
2219	IsRetriableError returns true if the error is a retriable error .
2220	AppArmorProfile returns the current app armor profile .
2221	Create a BTRFS storage volume
2222	ContainerStorageReady returns true if the container is ready for storage .
2223	ContainerCreateFromImage creates a BTRFS container from an image
2224	ContainerSnapshotRename renames a BTRFS storage volume .
2225	ContainerSnapshotCreateEmpty creates an empty BTRFS storage volume
2226	btrfsSubVolumesDelete deletes a subvol
2227	isBtrfsSubVolume checks if the given subVolPath is a btrfs subvolume .
2228	SelectConfig returns a map of config values for a given table .
2229	UpdateConfig updates the config for a given table .
2230	deleteConfig deletes a config from a table .
2231	FormatSection converts a header and content into a string .
2232	GetProjects returns a list of projects .
2233	GetProject returns the project with the given name .
2234	CreateProject creates a new project .
2235	UpdateProject updates a project .
2236	RenameProject renames a project .
2237	Read implements io . Reader .
2238	Write implements io . Writer .
2239	NewCanceler creates a new Canceler .
2240	Cancelable returns true if the canceller is cancelable .
2241	Cancel cancels an operation .
2242	CancelableDownload cancels a download .
2243	clusterGet returns information about a cluster .
2244	clusterGetMemberConfig fetches the members config for the cluster .
2245	clusterPutDisable disables the cluster .
2246	tryClusterRebalance attempts to rebalance a cluster .
2247	internalClusterPostRebalance redirects the cluster rebalance request to the local node .
2248	internalClusterPostPromote is used to promote a cluster
2249	Filters returns a sorted list of objects for the given package and entity .
2250	Parse parses a package into a Mapping .
2251	findStruct looks up a struct type by name .
2252	parseStruct parses a struct .
2253	GetProfileNames returns a list of profiles .
2254	GetProfiles returns a list of profiles .
2255	GetProfile returns a profile by name .
2256	CreateProfile creates a new profile .
2257	UpdateProfile updates a profile .
2258	RenameProfile renames a profile .
2259	Load loads a map of values from a given schema .
2260	Dump returns a copy of the map .
2261	GetRaw returns the value associated with the given name as a string .
2262	GetString returns a string representation of the map .
2263	GetBool returns a boolean value from the map .
2264	GetInt64 returns an int64 value from the map .
2265	update updates the map with the given values .
2266	set sets the value of a key in the map .
2267	DoesSchemaTableExist returns true if the schema table exists .
2268	selectSchemaVersions is a helper function that returns a slice of ints based on the version of the schema .
2269	selectTablesSQL takes a sql . Tx and returns a list of table names .
2270	createSchemaTable creates a new schema table .
2271	insertSchemaVersion inserts a new version into the schema .
2272	NewState creates a new state .
2273	containerLXCUnload loads a containerLXC .
2274	containerLXCInstantiate creates a containerLXC .
2275	initStorage initializes the storage pool .
2276	OnNetworkUp is called when the container network is up .
2277	setupHostVethDevice sets up the host side veth device .
2278	getLxcState returns the current state of the container .
2279	StorageStartSensitive implements the Container interface for containerLXC .
2280	deviceExistsInDevicesFolder returns true if a device exists in the given path .
2281	createDiskDevice creates a new disk device .
2282	setNetworkRoutes sets the network routes for the given device .
2283	Path returns the path to the container .
2284	maasInterfaces returns the maas . ContainerInterfaces for this containerLXC .
2285	getSystemHandler returns a log . Handler for the given syslog .
2286	findNvidiaMinor returns the nvidia minor information for pci .
2287	GetLogger returns a logger for the given syslog and logfile
2288	SetLogger sets a new logger .
2289	WaitRecord waits for a log record to be sent to the given channel .
2290	AddContext adds a context to a logger
2291	NewDottedVersion creates a new DottedVersion .
2292	Parse parses a string into a DottedVersion .
2293	String returns the string representation of a DottedVersion .
2294	Compare compares two DottedVersions .
2295	projectCreateDefaultProfile creates the default profile for the given project .
2296	projectChange changes the features of the default project .
2297	projectIsEmpty returns true if the given project is empty .
2298	GetCertificateFingerprints returns the fingerprints of all certificates .
2299	GetCertificates returns a list of certificates .
2300	GetCertificate returns the certificate associated with the given fingerprint .
2301	CreateCertificate creates a new certificate .
2302	UpdateCertificate updates a certificate .
2303	DeleteCertificate deletes a certificate
2304	containerMetadataTemplatesGet returns the metadata templates for a container .
2305	containerMetadataTemplatesPostPut creates metadata templates for a container .
2306	containerMetadataTemplatesDelete deletes container metadata templates
2307	getContainerTemplatePath returns the path to the template file for a container .
2308	Error returns a string representation of the error .
2309	Error returns a string representation of the error list .
2310	add adds an error to the list .
2311	UpdateSchema updates the cluster database schema .
2312	doProfileUpdateCluster updates a profile in a cluster .
2313	doProfileUpdateContainer updates a profile in a container .
2314	getProfileContainersInfo retrieves the list of containers with the given profile .
2315	GetNetworkNames returns a list of network names .
2316	GetNetworks returns a list of networks .
2317	GetNetwork returns the network with the given name .
2318	GetNetworkLeases returns a list of network leases .
2319	GetNetworkState returns the network state for the given name .
2320	CreateNetwork creates a new network .
2321	UpdateNetwork updates a network .
2322	RenameNetwork renames a network .
2323	Open opens a dqlite cluster database .
2324	URLEncode encodes a URL into a string .
2325	IsUnixSocket returns true if path is a unix socket
2326	HostPath returns the host path for the given path .
2327	FileMove moves a file from oldPath to newPath
2328	DirCopy copies the source directory to the destination directory .
2329	StringMapHasStringKey checks if a map has a string key
2330	TextEditor returns the text editor for the given path and content .
2331	WriteTempFile writes a temporary file to disk .
2332	RenderTemplate renders a pongo2 template .
2333	Every creates a schedule that runs every interval .
2334	StoragePoolMount returns true if the storage pool is mounted .
2335	Dump dumps the given schema into the database .
2336	dumpTable dumps a table from the database .
2337	ProjectHasProfiles implements the Transaction interface for ClusterTx .
2338	ProjectNames returns a list of project names .
2339	ProjectMap returns a map of project id to project name .
2340	ProjectHasImages returns true if the given project has images enabled .
2341	ProjectUpdate updates a project .
2342	GetCluster retrieves a cluster .
2343	UpdateCluster updates a cluster .
2344	GetClusterMemberNames returns the names of the cluster members .
2345	GetClusterMembers returns a list of cluster members .
2346	GetClusterMember returns the cluster member with the given name .
2347	RenameClusterMember renames a cluster member
2348	Disconnect disconnects the event listener .
2349	CompareVersions compares two versions .
2350	HasClientCertificate returns true if the config contains a client certificate .
2351	GenerateClientCertificate generates a client certificate .
2352	LoadModule loads a module from disk .
2353	Parse parses a package name into an ast . Package .
2354	PprofAddress returns the pprof address .
2355	PprofUpdateAddress updates a pprof address .
2356	NewMethod creates a new method .
2357	Generate generates a new method .
2358	fillSliceReferenceField fills a field in a slice .
2359	StoragePoolID returns the ID of a storage pool .
2360	StoragePoolIDsNotPending returns a map of storage pool IDs that are not pending .
2361	StoragePoolNodeJoin adds a node to a storage pool
2362	StoragePoolNodeJoinCeph joins a node with the ceph pool .
2363	StoragePoolConfigAdd implements the StoragePool interface for ClusterTx .
2364	StoragePoolCreatePending creates a new pending storage pool .
2365	StoragePoolCreated creates a new storage pool .
2366	StoragePoolErrored implements the Transaction interface for ClusterTx .
2367	StoragePoolNodeConfigs returns the node configs for the specified storage pool .
2368	StoragePoolsGetDrivers returns the list of drivers in the cluster .
2369	StoragePoolGetID returns the id of a storage pool .
2370	StoragePoolGet retrieves a storage pool by name .
2371	storagePoolNodes returns a list of nodes associated with the specified storage pool .
2372	StoragePoolConfigGet retrieves the config for a storage pool .
2373	Create a new storage pool
2374	storagePoolConfigAdd adds a storage pool config to the database .
2375	StoragePoolUpdate updates the storage pool .
2376	Clear a storage pool config .
2377	Delete a storage pool
2378	StoragePoolVolumesGetNames returns the names of the volumes in the specified storage pool .
2379	StoragePoolVolumesGet returns a list of volumes associated with the specified storage pool .
2380	StoragePoolNodeVolumesGet returns the node s storage volumes .
2381	storagePoolVolumesGet returns a list of volumes in a pool .
2382	StoragePoolVolumesGetType returns the type of a storage pool volume .
2383	StoragePoolVolumeSnapshotsGetType retrieves the type of a volume snapshot .
2384	StoragePoolNodeVolumesGetType returns a list of volumes associated with a node s storage pool .
2385	StoragePoolVolumeGetType returns the storage volume for a given volume name and type .
2386	StoragePoolNodeVolumeGetType returns the storage volume for a pool node .
2387	StoragePoolNodeVolumeGetTypeByProject returns the type of a storage volume for a node .
2388	StoragePoolVolumeUpdate updates a storage pool volume
2389	StoragePoolVolumeDelete deletes a volume from a storage pool
2390	StoragePoolVolumeRename renames a storage pool volume .
2391	storagePoolVolumeReplicateIfCeph returns a copy of the given volume if the given driver is a ceph .
2392	Create a new volume in a storage pool
2393	StoragePoolVolumeGetTypeID returns the id of a storage pool volume .
2394	StoragePoolNodeVolumeGetTypeID implements StoragePoolNodeVolumeGetTypeID
2395	StoragePoolVolumeTypeToName converts a storage volume type to a name
2396	DevicesAdd adds a device to the specified transaction .
2397	Devices returns a list of devices associated with the specified project .
2398	Patches returns the name of the patches for the node .
2399	PatchesMarkApplied marks a patch as applied on the node .
2400	entityType returns the type of an entity .
2401	entityPost returns the post code for a given entity .
2402	stmtCodeVar returns a code variable for a given entity kind and filters .
2403	destFunc returns a string representation of a dest function .
2404	CompareConfigs compares two configurations .
2405	CopyConfig returns a copy of config .
2406	NewNotifier creates a new Notifier .
2407	Events executes the given function on the given endpoints and returns an update function and a schedule .
2408	eventsConnect creates a new lxd . EventListener .
2409	StoragePoolInit initializes the storage pool .
2410	getAAProfileContent returns the AA_PROFILE_BASE of the container .
2411	AALoadProfile loads a profile from a container .
2412	AADestroy removes the apparmor namespace .
2413	AAParseProfile parses a profile .
2414	getSystemHandler returns nil if syslog is nil .
2415	NotifyUpgradeCompleted sends a notification when a cert upgrade is completed .
2416	KeepUpdated returns a task . Func and a task . Schedule that is updated every 5 minutes .
2417	maybeUpdate checks if clustering is enabled and if it should be updated .
2418	NewServer creates a new server .
2419	StartStatusCheck starts a goroutine that checks the status of the server .
2420	SyncProjects syncs all rbac projects .
2421	AddProject adds a project to the server .
2422	DeleteProject deletes a project .
2423	RenameProject renames a project .
2424	IsAdmin returns true if the given username is an admin .
2425	HasPermission returns true if the user has the given permission .
2426	rsyncSend sends a rsync message to the specified path .
2427	rsyncSendSetup sends a rsync command to the specified path .
2428	tlsClientConfig returns a tls . Config for the client .
2429	tlsCheckCert checks if the given certificate is trusted .
2430	internalClusterContainerMovedPost creates a new container post .
2431	containerPostCreateContainerMountPoint is used to post - create a container mount point
2432	Contains returns true if d is in the list k .
2433	Update updates a list of devices .
2434	DeviceNames returns the names of all devices in the list .
2435	Infof logs a formatted message .
2436	Debugf logs a message using Log . Debug .
2437	Warnf logs a message with severity Warn .
2438	Errorf logs a formatted error message .
2439	Critf logs a formatted string with the given arguments .
2440	eventForward forwards an event to the given node .
2441	StorageProgressReader returns an io . ReadCloser that wraps an io . ProgressReader .
2442	StorageProgressWriter returns an io . WriteCloser that wraps an io . ProgressWriter .
2443	GetLSBRelease returns a map of os - release .
2444	Reset resets a set of imports .
2445	Append appends a code snippet to the given path .
2446	ContainerToArgs converts a container to args .
2447	ContainerNames returns the names of the containers associated with the specified project .
2448	ContainerNodeAddress returns the node address for a given project and name .
2449	ContainersListByNodeAddress returns a list of containers for a given node .
2450	ContainerListExpanded returns an expanded list of containers .
2451	ContainersByNodeName returns a map of containers by node name .
2452	SnapshotIDsAndNames returns a map of snapshot IDs and names .
2453	ContainerNodeList returns a list of all registered containers .
2454	ContainerNodeProjectList returns a list of all containers associated with the specified project .
2455	ContainerRemove removes a container from the cluster .
2456	ContainerProjectAndName returns the project and name for the given container id .
2457	ContainerConfigClear clears a container config .
2458	ContainerConfigGet returns the value of a container s config .
2459	ContainerConfigRemove removes a container s config .
2460	ContainerSetStateful sets a container s stateful value .
2461	ContainerProfilesInsert inserts a list of profiles into a container .
2462	ContainerProfiles returns a list of profiles for a given container .
2463	ContainerConfig returns the container config for the given id .
2464	ContainerSetState sets the state of a container .
2465	ContainerUpdate updates a container .
2466	ContainerLastUsedUpdate updates the last_use_date field of a container .
2467	ContainerGetSnapshots returns a list of snapshots for a given container .
2468	ContainerGetSnapshotsFull is part of the Transaction interface .
2469	ContainerNextSnapshot returns the next snapshot of a container .
2470	ContainerPool returns the name of a container pool .
2471	ContainerGetBackup returns a backup for a container .
2472	ContainerGetBackups returns a list of backups for a container .
2473	ContainerBackupCreate creates a new container backup .
2474	ContainerBackupRemove removes a container backup .
2475	ContainerBackupRename renames a container backup .
2476	ContainerBackupsGetExpired returns the list of expired containers backups .
2477	DefaultOS returns the default OS .
2478	Init initializes the OS .
2479	GetWebsocket returns the websocket connection associated with the operation .
2480	Refresh refreshes the operation .
2481	CancelTarget cancels the target operation .
2482	GetTarget returns the target operation .
2483	up initializes the endpoints .
2484	Down closes the endpoints .
2485	serveHTTP serves the endpoints with the given kind .
2486	closeListener closes the given listener .
2487	activatedListeners returns a map of net . Listeners that have been activated .
2488	CandidServer returns the candid server .
2489	RBACServer returns the RBAC server .
2490	AutoUpdateInterval returns the auto_update_interval .
2491	MAASController returns the url and key of the MAAS controller .
2492	OfflineThreshold returns the current offline threshold .
2493	ConfigGetString returns the config for a given key .
2494	ConfigGetBool gets a boolean value from a config .
2495	ConfigGetInt64 gets the int64 value for a given key .
2496	ClusterAddress returns the cluster address .
2497	Debug logs a debug message .
2498	RestServer creates a new http . Server for the given Daemon .
2499	projectParam returns the project parameter of the request .
2500	queryParam returns the query parameter for the given key .
2501	newDb creates a new database - related command
2502	Description returns the description of the operation .
2503	Permission returns the permission to run the operation .
2504	OperationsUUIDs returns the uuids of the operations in the transaction .
2505	OperationNodes returns a list of nodes associated with the specified project .
2506	OperationByUUID returns an Operation for a given UUID .
2507	OperationAdd adds an operation to the cluster .
2508	OperationRemove removes a row from the query .
2509	operations returns a slice of operations for the given node .
2510	expireLogsTask creates a task that expires log files .
2511	absPath returns the root directory of the LXD tree .
2512	Keys returns a sorted list of keys in the schema .
2513	Defaults returns the default values for the schema .
2514	mustGetKey returns the key with the given name . Panics if the key doesn t exist .
2515	assertKeyType asserts that the given key is of the given type . Panics if the key does not exist .
2516	validate validates a key .
2517	GetStoragePoolVolumes returns the volumes in the specified storage pool .
2518	GetStoragePoolVolume retrieves a volume from a storage pool
2519	Creates a new storage pool volume .
2520	CreateStoragePoolVolumeSnapshot creates a new snapshot of a storage pool
2521	GetStoragePoolVolumeSnapshots returns a list of snapshots for the specified volume .
2522	GetStoragePoolVolumeSnapshot returns a snapshot of a storage pool
2523	Updates a storage snapshot in a storage pool .
2524	MigrateStoragePoolVolume is used to migrate a storage pool volume .
2525	MoveStoragePoolVolume moves a storage volume between remotes .
2526	UpdateStoragePoolVolume updates a storage volume
2527	DeleteStoragePoolVolume deletes a storage pool volume
2528	RenameStoragePoolVolume renames a storage pool volume
2529	doStoragePoolCreateInternal creates a storage pool .
2530	containerGetParentAndSnapshotName returns the parent and snapshot name of the container .
2531	containerLoadFromAllProjects loads all containers from all projects .
2532	containerLoadNodeAll loads all container nodes in the cluster .
2533	containerLoadNodeProjectAll loads all containers for a given project .
2534	heartbeatNode sends a heartbeat request to a raft node .
2535	dotPrefixMatch compares two dot prefixes .
2536	ContainerMount is part of the StorageZfs interface .
2537	ContainerStorageReady returns true if a container is ready for storage .
2538	AskChoice asks a question and returns the answer .
2539	AskInt asks a question and returns the answer as int64 .
2540	AskString asks a question using the defaultAnswer . If the defaultAnswer is nil the defaultAnswer is used .
2541	AskPassword asks the user for a password
2542	AskPasswordOnce asks the user for a password once
2543	askQuestion asks a question and returns the answer .
2544	readAnswer reads the defaultAnswer from stdin .
2545	profilePost returns a response for a profile post .
2546	profileDelete deletes a profile .
2547	IsRootDiskDevice checks if the given device is a root disk device .
2548	GetRootDiskDevice returns the name and map of the root disk device .
2549	ForwardedResponse returns a ForwardedResponse .
2550	ForwardedResponseIfTargetIsRemote returns a ForwardedResponse if target is remote .
2551	ForwardedResponseIfContainerIsRemote returns a ForwardedResponse if the container is remote .
2552	ForwardedOperationResponse returns a Response for a forwarded operation .
2553	Done prints msg if msg is longer than maxLength
2554	Update updates the status of the progress renderer .
2555	Warn prints a warning message .
2556	UpdateProgress updates the progress of the renderer .
2557	UpdateOp updates the progress of an operation .
2558	updateFromV6 updates storage_pools_config from version 6 .
2559	localCreateListener creates a new listener at the given path .
2560	NewStmt creates a new statement .
2561	Generate generates a new statement .
2562	register registers a statement .
2563	httpsLXD creates a container server for HTTPS protocol lxd .
2564	IsActive returns true if the container is active .
2565	RaftNodeAddress returns the address of a raft node .
2566	RaftNodeFirst sets the first raft node ID in the transaction .
2567	RaftNodeAdd adds a raft node to the database .
2568	RaftNodeDelete deletes a raft node .
2569	RaftNodesReplace replaces a list of RaftNodes .
2570	initCGroup initializes the cgroup controllers
2571	sqliteDirectAccess connects to a SQLiteConn .
2572	ContainerGet returns a single container .
2573	ContainerID returns the ID of a container .
2574	ContainerExists returns true if the given container exists in the cluster .
2575	ContainsFields returns true if the mapping contains the given fields .
2576	FieldByName returns the field with the given name .
2577	FieldColumnName returns the name of the field .
2578	FilterFieldByName returns a field matching the given filter name .
2579	ColumnFields returns a slice of Fields that are part of the Mapping .
2580	ScalarFields returns the scalar fields of the mapping .
2581	RefFields returns the fields referenced by this mapping .
2582	Column returns the column name of the field .
2583	ZeroValue returns the zero value of a field .
2584	FieldColumns returns a string representation of the fields .
2585	FieldArgs returns a string representation of a list of fields .
2586	FieldParams returns a string representation of a list of fields .
2587	FieldCriteria returns a string representation of a set of fields .
2588	initDataClusterApply creates a new data cluster .
2589	JsonFormatEx converts a record to a JSON format .
2590	formatLogfmtValue formats a logfmt value .
2591	ResolveTarget resolves a target node .
2592	Write implements io . Writer .
2593	updateNodeVersion updates a node s version .
2594	selectNodesVersions selects nodes based on their versions .
2595	GetArchitectures returns a list of architectures .
2596	RuntimeLiblxcVersionAtLeast returns true if golxc version is at least major minor and micro .
2597	GetExecPath returns the exec path
2598	Connect connects to an LXD container server .
2599	ConnectIfContainerIsRemote connects to the container server if the container is remote .
2600	ConnectIfVolumeIsRemote connects to a volume if it is a remote volume .
2601	SetupTrust establishes a trust connection to the target cluster .
2602	GetStoragePools returns all storage pools
2603	GetStoragePool returns a storage pool
2604	CreateStoragePool creates a new storage pool
2605	Updates a storage pool
2606	DeleteStoragePool deletes storage pool
2607	GetStoragePoolResources returns the resources for a storage pool .
2608	initDirs initializes VarDir .
2609	Config returns the config of the node .
2610	UpdateConfig is part of the Transaction interface .
2611	Config returns a map of config values in the transaction .
2612	UpdateConfig is part of the Transaction interface .
2613	storagePoolClusterConfigForEtag returns a copy of the storage pool cluster config for the given etag .
2614	GetEvents returns a new EventListener .
2615	LogfmtFormat returns a format for logging .
2616	StorageVolumeNodeAddresses returns the node addresses associated with a storage volume .
2617	StorageVolumeNodeGet returns the name of a storage volume node .
2618	StorageVolumeConfigGet returns the config for a given volume .
2619	StorageVolumeDescriptionGet returns the description of a storage volume .
2620	StorageVolumeIsAvailable returns true if the given volume is available in the cluster .
2621	StorageVolumeDescriptionUpdate updates the storage_volumes description
2622	StorageVolumeConfigAdd adds a volume config to the database .
2623	StorageVolumeConfigClear clears the storage volume config .
2624	storageVolumeIDsGet returns a slice of storage volume IDs .
2625	StorageVolumeCleanupImages cleans up images for storage volumes .
2626	Move storage volume to LVMThinPoolNameKey
2627	L writes a string to the Buffer .
2628	code returns the source code of the buffer .
2629	Pretty marshals the input into a pretty string .
2630	NetworkPublicKey returns the public key for the network endpoints .
2631	NetworkPrivateKey returns the private key for the network endpoints .
2632	NetworkCert returns the endpoints s network certificate .
2633	NetworkAddress returns the endpoints network address .
2634	NetworkUpdateAddress updates the network address .
2635	NetworkUpdateCert updates the endpoints certificate .
2636	networkCreateListener creates a TLS listener for the given address .
2637	Accept accepts a connection from the listener .
2638	Config sets the config for the listener .
2639	IsOffline returns true if the node is offline .
2640	NodeByAddress returns the node with the given address .
2641	NodePendingByAddress returns the NodeInfo for the given address .
2642	NodeByName returns information about the node with the given name .
2643	NodeName returns the name of the node .
2644	NodeAddress returns the address of the node .
2645	NodeIsOutdated returns true if a node is out of date .
2646	NodesCount returns the number of nodes in the cluster .
2647	NodeRename renames a node .
2648	nodes returns the list of nodes in the cluster .
2649	NodeAdd adds a node to the cluster .
2650	NodePending implements the Cluster interface for ClusterTx .
2651	NodeUpdate updates a node .
2652	NodeRemove removes a node by id .
2653	NodeHeartbeat updates the heartbeat of a node .
2654	NodeIsEmpty returns the fingerprint of the node with the given id .
2655	NodeClear clears a node .
2656	NodeOfflineThreshold returns the offline threshold for a node .
2657	NodeUpdateVersion updates a node s version .
2658	Transaction starts a new transaction .
2659	rollback is used to rollback a transaction .
2660	ProfileURIs returns a list of URIs that match a profile filter .
2661	ProfileGet returns a profile by name .
2662	ProfileExists returns true if the profile with the given name exists in the cluster .
2663	ProfileConfigRef returns a map of profile config references .
2664	ProfileUsedByRef returns the list of objects that are used by a given reference .
2665	ProfileCreate creates a new profile .
2666	ProfileRename renames a profile .
2667	ProfileDelete deletes a profile .
2668	ServerTLSConfig returns a tls . Config for the server .
2669	NetworkInterfaceAddress returns the network interface address .
2670	IsAddressCovered returns true if address1 and address2 are covered .
2671	SelectObjects takes a sql . Stmt and a list of args and selects them .
2672	DeleteObject deletes an object .
2673	loop loops until ctx is done .
2674	IsTerminal returns true if fd is a terminal .
2675	socketUnixListen listens on a unix socket .
2676	socketUnixRemoveStale removes a stale unix socket .
2677	socketUnixSetPermissions sets the permissions on the local socket .
2678	socketUnixSetOwnership changes the ownership on the local socket .
2679	cephOSDPoolExists returns true if cephOSDPool exists
2680	cephOSDPoolDestroy deletes a ceph osd pool
2681	cephRBDVolumeExists returns true if a ceph rbd volume exists
2682	cephRBDSnapshotProtect protects a ceph RBD snapshot .
2683	cephRBDCloneCreate creates a clone of a ceph RBD cluster
2684	cephRBDSnapshotListClones returns a list of clones of a ceph RBD snapshot .
2685	cephRBDVolumeMarkDeleted marks a volume as deleted .
2686	cephRBDVolumeUnmarkDeleted unmarshals a volume .
2687	cephRBDVolumeRename renames a volume
2688	cephRBDVolumeSnapshotRename renames a ceph RBD snapshot
2689	cephRBDSnapshotDelete deletes a ceph RBD snapshot
2690	cephRBDVolumeCopy copies a ceph rbd volume .
2691	cephRBDVolumeListSnapshots returns a list of snapshots of a ceph RBD volume .
2692	getRBDSize returns the RBD size of the volume .
2693	getRBDFilesystem returns the block . filesystem config .
2694	copyWithoutSnapshotsFull creates a copy of a container with no snapshots .
2695	copyWithoutSnapshotsSparse creates a sparse copy of a container with no snapshots .
2696	GetConfigCmd returns the Pachyderm auth configuration .
2697	SetConfigCmd returns a new instance of the Pachyderm SetConfig command
2698	NewSharder creates a new Sharder .
2699	NewRouter creates a new router .
2700	renewUserCredentials renews user credentials .
2701	NewLocalClient creates a new local client .
2702	AddSpanToAnyExisting adds a span to any existing context .
2703	InstallJaegerTracerFromEnv installs the jaeger tracer from the environment .
2704	UnaryClientInterceptor returns a unary client interceptor .
2705	StreamClientInterceptor returns a gRPC StreamClientInterceptor .
2706	UnaryServerInterceptor returns a unary server interceptor .
2707	StreamServerInterceptor returns a gRPC StreamServerInterceptor .
2708	CloseAndReportTraces closes the tracer .
2709	newWriter creates a new Writer .
2710	For sets the MaxElapsedTime .
2711	Log implements the Logger interface .
2712	Format implements Logrus . Formatter .
2713	NewGRPCLogWriter creates a new GRPCLogWriter
2714	Read reads a config file from disk .
2715	Write marshals the config to JSON .
2716	Read implements the io . Reader interface .
2717	Write implements the Writer interface .
2718	NewReadWriter returns a new ReadWriter .
2719	RunGitHookServer runs a git hook server .
2720	newLoggingPipe returns a new loggingPipe .
2721	Read implements the io . Reader interface .
2722	Write implements io . Writer interface .
2723	Accept implements net . Listener . Accept .
2724	Close closes the listener .
2725	errorf returns a hashTreeError with the given code and fmtStr .
2726	InitWithKube initializes the Kubernetes service environment .
2727	GetEtcdClient returns the etcd client
2728	GetKubeClient returns the Kubernetes client
2729	NewHasher creates a new Hasher .
2730	HashJob returns the checksum of a job .
2731	HashPipeline returns the hash of a pipeline .
2732	Status returns a list of worker statuses for the pipeline .
2733	Cancel cancels a job .
2734	Conns returns a list of gRPC connections .
2735	Clients returns a list of clients for the pipeline .
2736	NewClient creates a new client for the given address .
2737	RunFixedArgs runs a function with numArgs .
2738	RunBoundedArgs runs a bounded command with the given arguments .
2739	Run creates a new cobra . Command with the given arguments .
2740	ErrorAndExit prints an error and exits .
2741	ParseCommit parses a commit string .
2742	ParseBranch parses a commit into a branch .
2743	ParseFile parses an arg into a pfs . File
2744	Set appends a string to the string argument .
2745	SetDocsUsage sets the usage of the given commands .
2746	makeCronCommits is used to make cron commits
2747	Writer implements the io . WriterCloser interface for tracing .
2748	Reader is part of the tracing . Client interface .
2749	Delete is part of the tracing . Client interface .
2750	Walk is part of the tracing . Client interface .
2751	Exists checks if a span exists
2752	GetBlock returns a block with the given hash .
2753	Health implements Server . Health .
2754	split splits a path into a path and a base path .
2755	ValidatePath validates a path
2756	MatchDatum returns true if the given data matches the given filter .
2757	NewCacheServer creates a new CacheServer .
2758	authorizePipelineOp authorizes a pipeline operation
2759	sudo executes the given function .
2760	setPipelineDefaults sets default values for the pipeline .
2761	incrementGCGeneration increments the GC generation .
2762	NewDebugServer creates a new debug server .
2763	Health is part of the Client interface .
2764	newObjBlockAPIServer creates a new instance of objBlockAPIServer .
2765	watchGC starts a watcher for GC generation .
2766	splitKey splits a key into two parts .
2767	NewWriter creates a new tab writer .
2768	Write implements io . Writer .
2769	PrintRepoHeader prints a RepoHeader to w .
2770	PrintRepoInfo prints repo info to w .
2771	PrintDetailedRepoInfo prints detailed repo info .
2772	PrintBranch prints the name of the branch .
2773	PrintCommitInfo prints the commit info to w .
2774	PrintDetailedCommitInfo prints detailed commit info .
2775	PrintFileInfo prints the file info to w .
2776	PrintDetailedFileInfo prints detailed file info .
2777	Add adds ancestors to a string .
2778	RetryNotify retries an operation until the next backoff . If notify is nil the operation is retried .
2779	Get implements the Get method of the MergeCache interface .
2780	Delete removes a value from the cache .
2781	PrintJobInfo prints job info to w .
2782	PrintPipelineInfo prints pipeline info to w .
2783	PrintWorkerStatus prints the status of a worker .
2784	PrintDetailedJobInfo prints detailed job info
2785	PrintDetailedPipelineInfo prints detailed pipeline information .
2786	PrintDatumInfo prints datum info to w .
2787	PrintDetailedDatumInfo prints detailed datum info
2788	PrintFile prints a file to w .
2789	ShorthandInput returns a shorthand representation of an input .
2790	Retrieve retrieves credentials from vault
2791	IsExpired returns true if the lease is expired .
2792	NewBranch creates a new pfs . Branch
2793	NewCommit creates a new pfs . Commit
2794	NewCommitProvenance returns a new CommitProvenance .
2795	NewFile creates a new pfs . File .
2796	CreateRepo creates a new repository .
2797	InspectRepo returns information about a repository .
2798	ListRepo lists all repositories .
2799	DeleteRepo deletes a repository
2800	BuildCommit creates a new commit for a given repository .
2801	StartCommitParent starts a parent commit .
2802	FinishCommit is part of the APIClient interface
2803	InspectCommit inspects a commit .
2804	BlockCommit inspects a commit .
2805	ListCommit lists commits in a repository .
2806	ListCommitF implements the ListCommit interface for PFS .
2807	ListCommitByRepo lists commits for a repository .
2808	CreateBranch creates a new branch .
2809	InspectBranch inspects a branch .
2810	ListBranch lists all branches in a repository .
2811	SetBranch creates a new branch .
2812	DeleteBranch deletes a branch .
2813	DeleteCommit deletes a commit
2814	FlushCommit implements the FlushCommit interface for APIClient .
2815	FlushCommitF implements the FlushCommit interface for APIClient .
2816	FlushCommitAll is part of the pfs . Client interface .
2817	SubscribeCommit is part of the pfs . CommitClient interface
2818	SubscribeCommitF implements the pfs . CommitClient interface .
2819	PutObjectAsync returns an instance of PutObjectWriteCloserAsync
2820	PutObject writes an object to the given io . Reader .
2821	PutObjectSplit returns a slice of pfs . Objects from the given io . Reader
2822	GetObject is part of the ObjectClient interface .
2823	GetObjectReader returns an io . ReadCloser for the given hash .
2824	GetObjects is part of the ObjectAPIClient interface .
2825	TagObject tags an object with the given hash .
2826	ListObject implements the ListObjectClient interface .
2827	InspectObject returns the object with the given hash .
2828	GetTag retrieves a tag from the API .
2829	GetTagReader returns an io . ReadCloser for the given tag
2830	ListTag implements the ListTagClient interface .
2831	Compact implements ObjectAPIClient .
2832	NewPutFileClient returns a new PutFileClient .
2833	PutFileOverwrite implements the PutFileClient interface .
2834	Close closes the putFileClient .
2835	CopyFile is part of the APIClient interface
2836	GetFile retrieves a file from a repository .
2837	GetFileReader returns an io . Reader for a given file .
2838	GetFileReadSeeker returns an io . ReadSeeker for a given commit .
2839	InspectFile is part of the pfs . FileInfo interface .
2840	ListFile lists all files in a repository .
2841	ListFileHistory lists a repository s file history .
2842	ListFileF implements the ListFile interface for APIClient .
2843	Walk implements the Walk interface for APIClient .
2844	DeleteFile deletes a file
2845	Write implements the WriteCloser interface .
2846	Close is part of the WriteCloser interface .
2847	PrettyPrintVersionNoAdditional returns a string representation of a print version .
2848	recursiveBlockQuoteExamples creates a recursive block quote example .
2849	errMissingField returns a logical . ErrorResponse indicating that the given field is missing .
2850	validateFields validates a request s fields .
2851	putConfig writes the given configuration to the given storage .
2852	getConfig retrieves a configuration from storage .
2853	Serve implements the grpc . Server interface .
2854	NewPuller creates a new Puller .
2855	PullTree pulls a tree from a root .
2856	Push pushes a commit to the given root .
2857	PushObj pushes a commit to obj .
2858	PushFile pushes a file .
2859	Dump writes the contents of the APIClient to w .
2860	Profile sends a profile request to gRPC .
2861	Binary writes a binary representation of APIClient to w .
2862	RegisterCacheStats registers a new prometheus metric .
2863	wait waits n seconds for the counter to complete .
2864	RunWorkload runs a job .
2865	createRepo creates a new repository .
2866	advanceCommit is used to advance a commit .
2867	RandString returns a random string of n bytes .
2868	NewReader returns a new io . Reader .
2869	iterDir returns an error if the given path is not a directory .
2870	FSSize returns the size of the hash tree .
2871	Diff implements the HashTree interface for DatabaseHashTree .
2872	Serialize serializes the dbHashTree to a writer .
2873	Deserialize deserializes the dbHashTree from a reader .
2874	Copy returns a copy of the hash tree .
2875	Destroy removes the hash tree .
2876	PutFileOverwrite implements the Hash interface for dbHashTree .
2877	PutDirHeaderFooter adds a header and footer to a directory .
2878	PutFileHeaderFooter implements the HashTree interface .
2879	deleteDir deletes a directory .
2880	NewReader creates a new Reader .
2881	Read reads a MergeNode from the reader .
2882	NewWriter returns a new Writer that writes to w .
2883	Write writes a MergeNode to the writer .
2884	Copy writes the contents of r to w .
2885	Index returns the index of a file .
2886	GetRangeFromIndex reads a range from an index .
2887	NewFilter creates a new filter .
2888	PathToTree converts a path to a tree .
2889	Merge merges rs into w .
2890	Hash implements the dbHashTree interface .
2891	IsGlob returns true if the pattern is a glob
2892	GlobLiteralPrefix returns the literal prefix of a string .
2893	GetHashTreeObject returns the hash tree for the given storageRoot and treeRef .
2894	GetHashTreeTag returns the hash tree for the given tag .
2895	PutHashTree puts a hash tree into a pfs . Object .
2896	NewChildCursor creates a new child cursor .
2897	Next returns the next key and value from the cursor .
2898	NewOrdered creates a new Ordered node .
2899	MkdirAll mkdirs all paths in order .
2900	PutDir implements the Directory interface for Ordered .
2901	Serialize serializes the Ordered to w .
2902	NewUnordered creates a new Unordered object .
2903	Ordered returns a new Ordered object .
2904	revokeUserCredentials revokes user credentials .
2905	NewAPIServer creates a new APIServer .
2906	String returns a string representation of pb . Version .
2907	getPipelineInfo returns information about a pipeline .
2908	removeStr removes s from ss .
2909	PublicCertToPEM converts a TLS . Certificate to a PEM - encoded byte array .
2910	GenerateSelfSignedCert generates a self signed certificate .
2911	ActivateCmd returns a command to activate Pachyderm .
2912	DeactivateCmd implements the Pachyderm DeactivateCmd interface .
2913	LoginCmd returns a command to login to Pachyderm .
2914	LogoutCmd returns a command to log out of Pachyderm .
2915	WhoamiCmd returns a cobra command for Whoami .
2916	CheckCmd returns a cobra command for checking repositories .
2917	GetCmd returns the cobra command
2918	SetScopeCmd returns a command to set the scope of a repository
2919	ListAdminsCmd implements the ListAdminsCmd interface .
2920	ModifyAdminsCmd returns a command to modify the current cluster admins .
2921	GetAuthTokenCmd returns a command to get an auth token
2922	UseAuthTokenCmd returns a command to use an auth token .
2923	Cmds returns cobra commands for noMetrics and noPortForwarding .
2924	ParseScope parses a scope string .
2925	IsErrNotActivated returns true if the given error is an ErrNotActivated error .
2926	IsErrPartiallyActivated returns true if the given error is an ErrPartiallyActivated .
2927	IsErrNotSignedIn returns true if the given error is an ErrNotSignedIn .
2928	IsErrBadToken returns true if the error is an ErrBadToken .
2929	IsErrNotAuthorized returns true if err is a non - nil error .
2930	IsErrInvalidPrincipal returns true if the error indicates that the principal is invalid .
2931	IsErrTooShortTTL returns true if the error indicates that the provided TTL is too short .
2932	NewDatumFactory creates a DatumFactory .
2933	NewCollection creates a new collection .
2934	Path returns the path for a given key .
2935	getIndexPath returns the path to the given value at the given index .
2936	getMultiIndexPaths returns a list of multi - index paths for the given value .
2937	Upsert inserts a new value into the collection .
2938	get implements etcd . Get interface .
2939	List is part of the Collection interface .
2940	Watch returns a watch . Watcher for the readonly collection .
2941	WatchByIndex creates a watcher for the given index and value .
2942	WatchOne returns a watch . Watcher for the given key .
2943	WatchOneF is part of the collection . Collection interface .
2944	Get returns an io . ReadCloser for the given key .
2945	Keys returns a sorted list of keys in the cache .
2946	Clear clears the cache .
2947	NewHTTPServer creates a new HTTP server .
2948	NewDeployServer creates a deploy . APIServer
2949	Export writes the assets . AssetOpts to out .
2950	Import imports the given assets . AssetOpts into io . Reader
2951	DatumTagPrefix returns a hex - encoded hex - encoded string of the given salt .
2952	NewPFSInput creates a new PFSInput .
2953	NewPFSInputOpts creates a new PFSInput .
2954	NewJobInput returns a new JobInput .
2955	NewPipelineInput returns a new PipelineInput .
2956	CreateJob creates a new job .
2957	ListJob lists all jobs in the pipeline .
2958	ListJobF implements the ListJob interface for APIClient .
2959	FlushJob is part of the pfs . Client interface .
2960	FlushJobAll is part of the pfs . Client interface .
2961	DeleteJob deletes a job
2962	StopJob stops a job .
2963	RestartDatum restarts a datum for a job .
2964	ListDatum lists a datum .
2965	ListDatumF implements the ListDatum interface for APIClient .
2966	InspectDatum inspects a datum for a job .
2967	Next moves the iterator to the next log message .
2968	InspectPipeline inspects a pipeline .
2969	ListPipeline lists all pipelines .
2970	DeletePipeline deletes a pipeline
2971	StartPipeline starts a new pipeline .
2972	StopPipeline stops a pipeline .
2973	RerunPipeline reruns a pipeline .
2974	CreatePipelineService creates a new pipeline service .
2975	GetDatumTotalTime returns the total duration of a process .
2976	Mount mounts the node at the specified mount point .
2977	NewBufPool creates a new BufPool
2978	StorageRootFromEnv returns the storage root of the environment .
2979	BlockPathFromEnv returns the path to a block from the environment .
2980	NewGoogleClient creates a new Google client .
2981	NewGoogleClientFromSecret creates a Google client from a Google bucket .
2982	NewGoogleClientFromEnv creates a new Google client from the environment .
2983	NewMicrosoftClientFromSecret creates a new Microsoft client from the given secret .
2984	NewMicrosoftClientFromEnv creates a new Microsoft client from the environment .
2985	NewMinioClientFromSecret creates a new minio client from a secret .
2986	NewMinioClientFromEnv creates a new Minio client from the environment .
2987	NewAmazonClientFromSecret creates a new Amazon client from a secret .
2988	NewAmazonClientFromEnv creates a new Amazon client from the environment .
2989	NewClientFromURLAndSecret creates a new client from a url and a secret .
2990	ParseURL parses a URL string into a ObjectStoreURL .
2991	NewClientFromEnv creates a new client from an environment variable .
2992	NewExponentialBackOffConfig returns a new ExponentialBackOff config .
2993	Close closes the backoff reader .
2994	Close closes the backoff writer .
2995	IsRetryable returns true if the given error is a retryable error .
2996	RunStdin runs stdin .
2997	RunIODirPath runs an io command at the specified path .
2998	NewAuthServer returns a new authclient . APIServer
2999	expiredClusterAdminCheck checks if a Pachyderm Enterprise token has expired .
3000	getOneTimePassword gets a one - time password .
3001	hashToken returns the hash of the given token .
3002	getAuthToken returns the authentication token for the given context .
3003	canonicalizeSubjects canonicalizes the given subjects .
3004	Matches checks if the given string matches the actual string .
3005	OneOfMatches tests if a string matches one of the actuals .
3006	Equal tests if two values are equal .
3007	NotEqual returns a fatal error if the two tests are not equal .
3008	oneOfEquals returns true if the given slice is equal to the given elem .
3009	NoneEquals tests if two objects are equal .
3010	NoError is a helper function for testing . NoError .
3011	NoErrorWithinT is the same as NoError but takes a time . Duration .
3012	NoErrorWithinTRetry is the same as NoErrorWithin but with a timeout .
3013	YesError is a helper function for testing . YesError .
3014	NotNil tests if object is nil .
3015	Nil returns a fatal error if the object is nil .
3016	False tests if a value is false .
3017	NewSTM creates a new STM transaction .
3018	NewDryrunSTM creates a new dryrun STM instance .
3019	newSTMRepeatable creates a new STMRepeatable transaction .
3020	newSTMSerializable creates a new stmSerializable .
3021	newSTMReadCommitted creates a new STMReadCommitted .
3022	commit implements the v3 . TxnResponse interface .
3023	Pipelines returns a collection of pipelines .
3024	Jobs returns a col . Collection of Jobs for the given etcd client .
3025	NewTicker creates a new Ticker .
3026	nodeToMap converts a etcd . Node to a map .
3027	ServiceAccount returns a ServiceAccount object .
3028	ClusterRole returns a ClusterRole object
3029	RoleBinding returns a RoleBinding object .
3030	GetSecretEnvVars returns a list of environment variables that match the given storage backend .
3031	PachdService creates a new v1 . Service with the given AssetOpts .
3032	GithookService returns a githook service .
3033	EtcdDeployment creates a etcd deployment
3034	EtcdStorageClass returns the etcd storage class .
3035	EtcdVolume creates a etcd volume
3036	EtcdNodePortService returns a service for etcd node port
3037	EtcdHeadlessService creates an etcd headless service
3038	EtcdStatefulSet creates a new etcd stateful set
3039	DashDeployment returns a dashed deployment .
3040	DashService creates a dash service .
3041	WriteSecret writes a secret to the given encoder .
3042	GoogleSecret returns the Google secret for a given bucket and cred .
3043	WriteDashboardAssets writes dashboard assets to the given encoder .
3044	WriteLocalAssets writes assets to the local backend .
3045	WriteCustomAssets writes custom assets to the given encoder .
3046	WriteAmazonAssets writes a set of Amazon assets to the specified encoder .
3047	WriteGoogleAssets writes Google assets to the given encoder .
3048	WriteMicrosoftAssets writes the given assets to the given container .
3049	Images returns a list of images for a given asset .
3050	AddRegistry adds a registry to an image .
3051	withCanonicalRandomizationFactor sets the canonical RandomizationFactor .
3052	Reset resets the ExponentialBackOff .
3053	incrementCurrentInterval increments the current interval .
3054	NewBlockAPIServer creates a new BlockAPIServer .
3055	LocalStorage returns an obj . Client and a new Storage object .
3056	deleteJob deletes a job .
3057	writeXML writes an xml response .
3058	clean1_7HashtreePath cleans a 1 - 7 hastree path .
3059	NewFromAddress creates a new APIClient from the given address .
3060	getUserMachineAddrAndOpts returns the user machine address and options .
3061	NewInCluster returns a new PACHD_SERVICE_HOST and PACHD_SERVICE_PORT API client .
3062	Close closes the API connection .
3063	DeleteAll deletes all credentials associated with the client .
3064	SetMaxConcurrentStreams sets the maximum number of concurrent streams .
3065	WithCtx adds a context to the APIClient
3066	NewDLock creates a new DLock .
3067	DatumID returns a hex - encoded identifier for the given inputs .
3068	Runs user error handling code .
3069	HashDatum generates a hash of the given data .
3070	HashDatum15 hashes data into a hash .
3071	Status implements the APIServer interface .
3072	Cancel cancels a job .
3073	mergeStats merges x and y process stats .
3074	mergeChunk merges a chunk into a single chunk .
3075	IsCommitNotFoundErr returns true if err is a commit not found error .
3076	IsCommitDeletedErr returns true if err is a commit deleted error .
3077	IsCommitFinishedErr returns true if err is a commit finished error .
3078	IsRepoNotFoundErr returns true if err is a repo not found error .
3079	IsBranchNotFoundErr returns true if the error is a branch not found error .
3080	IsFileNotFoundErr returns true if err is a file not found error .
3081	Version returns the version of the gRPC client
3082	validateRepoName checks if the given repository name is valid .
3083	newDriver creates a new etcd driver .
3084	inspectCommit is used to inspect a commit
3085	scratchCommitPrefix returns the prefix of a commit .
3086	scratchFilePrefix returns the prefix of the given file .
3087	getTreeForFile returns the hash tree for the given file .
3088	provenantOnInput returns true if there are any commits in the given list of commits .
3089	nodeToFileInfo converts a node to a pfs . FileInfo
3090	fileHistory returns the history of a file .
3091	upsertPutFileRecords upserts PutFileRecords .
3092	ReadRow reads a single row from the pgdump .
3093	NewReporter creates a new Reporter .
3094	ReportUserAction reports a user action .
3095	FinishReportAndFlushUserAction finishes a report and flushes the user action .
3096	Read implements io . Reader .
3097	ActivateCmd returns a command to activate the enterprise features of Pachyderm
3098	GetStateCmd returns the state of the Pachyderm cluster .
3099	Cmds returns cobra . Commands that enable Pachyderm Enterprise features .
3100	NewConfiguration returns a new instance of Configuration .
3101	Repos creates a new collection of repos .
3102	PutFileRecords creates a new col . Collection with the putFileRecords prefix .
3103	Commits returns a collection of commits for a given repository .
3104	Branches returns a collection of branches for the given repository .
3105	OpenCommits creates a new etcd collection .
3106	NewDAG creates a new DAG .
3107	NewNode creates a new node .
3108	Sorted returns the sorted list of DAGs .
3109	Leaves returns the list of leaves in the DAG .
3110	Ancestors returns the descendants of the given id .
3111	Descendants returns the descendants of the given id .
3112	Ghosts returns the list of ghosts of the DAG .
3113	NewPortForwarder creates a new PortForwarder
3114	Run runs the PortForwarder .
3115	RunForDaemon is part of the PortForwarder interface .
3116	RunForSAMLACS is part of the PortForwarder interface .
3117	RunForDashUI runs the port forwarder for the dash UI .
3118	RunForDashWebSocket is part of the Forwarder interface .
3119	RunForPFS is part of the Forwarder interface .
3120	RunForS3Gateway is part of the GatewayForwarder interface .
3121	Lock locks the port - forwarder .
3122	Close shuts down the port forwarder .
3123	Unmarshal implements proto . Unmarshaler .
3124	UnmarshalPrev implements proto . UnmarshalPrev .
3125	MakeWatcher returns a watcher that sends events to the given channel .
3126	CheckType returns an error if the given value is not of the given type .
3127	NewPool creates a new gRPC pool
3128	Do is part of the grpc . Pool interface .
3129	Close closes all connections in the pool .
3130	buildImage builds a docker image .
3131	pushImage pushes a docker image .
3132	newMinioClient creates a new minio client .
3133	newMinioClientV2 creates a new minioClient .
3134	newMinioWriter creates a new minioWriter .
3135	Close closes the minioWriter .
3136	PipelineRepo returns a repo for the pipeline .
3137	PipelineRcName returns the pipeline - rc name .
3138	GetRequestsResourceListFromPipeline returns a ResourceList from a pipeline .
3139	GetLimitsResourceListFromPipeline returns a resource list containing the resource limits for a given pipeline .
3140	getNumNodes returns the number of k8s nodes .
3141	GetExpectedNumWorkers returns the expected number of workers .
3142	GetExpectedNumHashtrees returns the number of expected hashtrees .
3143	FailPipeline fails an Etcd pipeline .
3144	JobInput returns a pps . Input for a job .
3145	PipelineReqFromInfo creates a CreatePipelineRequest from a PipelineInfo
3146	NewPipelineManifestReader returns a new PipelineManifestReader .
3147	NextCreatePipelineRequest implements the PipelineManifestReader interface .
3148	DescribeSyntaxError describes a SyntaxError .
3149	UpdateJobState updates the job state of a pipeline .
3150	New returns a new UUID string .
3151	Code returns the HTTP error code .
3152	NewHTTPError creates a new HTTPError .
3153	NewStorage creates a new Storage object .
3154	DeleteAll implements Storage . DeleteAll .
3155	Chunk converts a slice of bytes into a slice of bytes .
3156	ChunkReader implements io . ChunkReader .
3157	NewStreamingBytesReader creates a new streamingBytesReader .
3158	WriteToStreamingBytesServer writes a stream to a streamingBytesServer
3159	WriteFromStreamingBytesClient writes a StreamingBytesClient to the given writer .
3160	NewSidecarAPIServer creates a new sidecar api server
3161	NewEnterpriseServer returns a new instance of EnterpriseServer .
3162	validateActivationCode validates the activation code .
3163	Activate implements the ec . Server interface .
3164	Deactivate implements ec . Server .
3165	lookExtensions returns the extension of the given path .
3166	Start starts the command .
3167	CombinedOutput returns the combined output of the command .
3168	StdinPipe returns an io . WriteCloser that wraps the command s Stdin .
3169	StdoutPipe returns an io . ReadCloser for the command s stdout .
3170	dedupEnvCase dedups a set of environment variables .
3171	InputName returns the name of the input .
3172	SortInput sorts an input .
3173	InputBranches returns a slice of pfs . Branch objects for the given input .
3174	ValidateGitCloneURL validates a git clone URL
3175	containsEmpty returns true if a slice contains empty values .
3176	NewAPIServer creates a new APIServer .
3177	Ago converts a timestamp to a human - readable string .
3178	TimeDifference returns the difference between two timestamps .
3179	Duration returns a human - readable string representation of a duration .
3180	InspectCluster inspects a cluster
3181	Extract executes f on the APIClient .
3182	ExtractAll returns a slice of admin . Ops that can be used to extract the given objects .
3183	ExtractWriter returns an io . Writer that writes to the given writer .
3184	ExtractURL extracts a URL from the API .
3185	ExtractPipeline extracts a pipeline
3186	Restore implements the AdminAPIClient interface .
3187	RestoreReader restores an io . Reader .
3188	RestoreFrom creates a new instance of AdminAPIClient .
3189	RestoreURL restores a URL .
3190	IgnoreTypes returns an option to ignore the given types .
3191	AppendEllipsis appends an Ellipsis to the list .
3192	IsType returns true if t is the type of ft .
3193	NameOf returns the name of a reflect . Value
3194	PointerOf returns a pointer for a reflect . Value .
3195	String returns a string representation of the EditScript .
3196	stats returns the stats of the EditScript .
3197	connect connects dst to dst using EqualFunc .
3198	EquateNaNs returns a cmp . Option that compares NaNs values .
3199	Index returns the path step at index i .
3200	Key returns the key of the slice .
3201	String returns a string representation of the defaultReporter .
3202	FormatType converts a textNode to a textNode .
3203	formatMapKey returns a string representation of a map key .
3204	formatString converts a string into a formatted string .
3205	formatHex converts a uint64 to a hex string
3206	formatPointer returns a string representation of a pointer .
3207	Visit returns true if v is a pointer to v .
3208	retrieveUnexportedField retrieves an unexported field from a struct field .
3209	insert adds a new field to the tree .
3210	matchPrefix returns true if the fieldTree matches the given path .
3211	canonicalName returns the canonical name of a type .
3212	FilterPath creates a path filter function .
3213	normalizeOption normalizes an Option .
3214	flattenOptions flattens src to dst .
3215	CanFormatDiffSlice returns true if v can be formatted as a slice .
3216	formatASCII converts a string to an ASCII string .
3217	coalesceAdjacentEdits coalesces a diff . EditScript into a list of diffStats .
3218	SortKeys sorts a slice of reflect . Values .
3219	FormatDiff converts a valueNode to a textNode .
3220	coalesceAdjacentRecords coalesces a list of reportRecords into a list of diffStats .
3221	Diff returns the difference between x and y .
3222	statelessCompare returns a diff . Result from a stateless comparison .
3223	sanitizeValue sanitizes a reflect . Value .
3224	Check checks if p is a Transform .
3225	makeAddressable converts a reflect . Value to a reflect . Value .
3226	Marshal encodes a Field to visitor .
3227	String returns a string representation of a Field .
3228	Set sets the value of a tag .
3229	Inject injects the given carrier into the TextMapPropagator .
3230	Extract extracts a span from a carrier .
3231	ToLogRecord converts LogData to a LogRecord .
3232	New creates a new MockTracer .
3233	StartSpan mocks base method
3234	RegisterInjector registers a new injector .
3235	RegisterExtractor registers a new extractor .
3236	Inject injects the given format into the given span context .
3237	Extract mocks base method
3238	ContextWithSpan returns a context with the given span .
3239	Set sets the value of a tag .
3240	Set sets the value of a tag .
3241	Set sets the value of a tag .
3242	SetString sets the value of a span as a string .
3243	EmitString mocks base method
3244	EmitLazyLogger mocks base method
3245	RunAPIChecks runs the APIChecks suite .
3246	CheckBaggageValues is a functional option for CheckBaggageValues .
3247	CheckExtract is a functional option on APICheckSuite used to set the value of check extract .
3248	CheckInject is a functional option on APICheckSuite used to set the check inject flag .
3249	CheckEverything returns an APICheckOption that sets everything to be checked .
3250	UseProbe specifies the APICheckProbe to use .
3251	WithBaggageItem returns a new MockSpanContext with the given key and value set .
3252	Tags returns the tags for this span .
3253	Tag mocks base method
3254	Logs returns a copy of the span s logs .
3255	Context returns a mock SpanContext
3256	SetTag implements opentracing . Span .
3257	SetBaggageItem mocks base method
3258	BaggageItem returns the bagage item associated with the given key .
3259	Finish marks the span as finished .
3260	FinishWithOptions implements opentracing . MockSpan
3261	String returns a string representation of the MockSpan .
3262	LogFields mocks base method
3263	logFieldsWithTimestamp mocks base method
3264	LogKV mocks base method
3265	LogEvent mocks base method
3266	LogEventWithPayload mocks base method
3267	SetOperationName sets the operation name of the span .
3268	registriesDirPath returns the path to the registries directory .
3269	loadAndMergeConfig loads and merges a docker registry configuration .
3270	ParseReference parses an image reference .
3271	NewReference creates a new openshift image reference
3272	CheckAuth checks if a user is authorized to access the registry .
3273	doHTTP sends an http . Request to docker .
3274	detectPropertiesHelper returns an error if a property is not found .
3275	detectProperties implements docker . Client detectProperties .
3276	getExtensionsSignatures returns a list of extensions signatures .
3277	NewTransport creates a new http . Transport .
3278	readRegistryConf reads the registry configuration file .
3279	GetRegistries returns a list of registered registries .
3280	GetInsecureRegistries returns a list of insecure registries .
3281	RegistriesConfPath returns the path to the system registries configuration file .
3282	NewOptionalBool creates a new OptionalBool
3283	changeState changes the state of the policy context .
3284	Destroy is part of the PolicyContext interface .
3285	policyIdentityLogName returns the log name of the image reference .
3286	requirementsForImageRef returns the policy requirements for the given image reference .
3287	ParseImageName parses an image name .
3288	BlobInfoFromOCI1Descriptor converts OCI1 descriptor to types . BlobInfo
3289	OCI1FromManifest creates an OCI1 from a JSON - encoded manifest .
3290	OCI1FromComponents creates an OCI1 from the given components .
3291	newReference creates a new Docker reference .
3292	tagOrDigest returns the tag or digest of the reference .
3293	updateEmbeddedDockerReference copies a schema1 image with an embedded Docker reference .
3294	isTTY returns true if the given writer is a TTY file .
3295	copyUpdatedConfigAndManifest copies an updated config and manifest from src to src .
3296	createProgressBar creates a new progress bar .
3297	copyConfig copies the config from src to c .
3298	diffIDComputationGoroutine runs the diffID computation goroutine .
3299	computeDiffID computes the diff ID of a stream .
3300	compressGoroutine compresses src into dest .
3301	newDockerClient creates a new docker client .
3302	defaultPolicyPath returns the default policy path for the system .
3303	NewPolicyFromFile creates a new policy from a file .
3304	NewPolicyFromBytes creates a new policy from a byte array
3305	newPolicyRequirementFromJSON creates a new PolicyRequirement from JSON .
3306	newPRSignedBy creates a new PRSignedBy object .
3307	newPRSignedByKeyPath creates a new PRSignedBy object .
3308	NewPRSignedByKeyPath creates a new PolicyRequirement .
3309	newPRSignedByKeyData creates a new PRSignedBy object .
3310	NewPRSignedByKeyData creates a new PRSignedByKeyData PolicyRequirement .
3311	IsValid returns true if the sbKeyType is valid .
3312	newPRSignedBaseLayer creates a new signed base layer .
3313	newPolicyReferenceMatchFromJSON creates a new PolicyReferenceMatch from JSON .
3314	newPRMExactReference creates a new PrmExactReference .
3315	newPRMExactRepository creates a new PrmExactRepository .
3316	newImageSource creates a new image source .
3317	getBlobAndLayerID returns the blob and layer ID .
3318	computeID computes the diffID for the given manifest .
3319	PutManifest implements StorageImageDestination .
3320	PutSignatures adds signatures to the storage image .
3321	newImage creates a new ImageCloser from a storageReference .
3322	newImageSource creates a new image source .
3323	LoadManifestDescriptor loads a manifest descriptor from an image reference .
3324	Close closes the image source .
3325	append appends a string to the set .
3326	isMultiImage returns true if the given image is a multi image .
3327	lockPath locks the given path .
3328	unlockPath unlocks the lock for the given path .
3329	view implements the bolt . Cache interface .
3330	update updates the cache with the passed function .
3331	uncompressedDigest returns the uncompressed digest of the transaction .
3332	appendReplacementCandidates appends a list of candidate with the given digest to the cache .
3333	indexExists returns true if the given ociReference exists .
3334	createSignature creates a signature for the given manifest .
3335	ParseReference parses a reference string into an ImageReference .
3336	NewReference creates a new ociReference .
3337	getIndex returns the index of the ociReference
3338	LoadManifestDescriptor loads a manifest descriptor from an image reference .
3339	blobPath returns the blob path for the given digest .
3340	SignDockerManifest signs a docker manifest .
3341	VerifyDockerManifestSignature verifies the signature of a Docker manifest .
3342	newOpenshiftClient creates a new OpenShift client .
3343	doRequest sends a request to OpenShift .
3344	getImage retrieves an image stream image .
3345	convertDockerImageReference converts a docker image reference to a docker image reference
3346	ensureImageIsResolved ensures that the image stream is resolved
3347	newImageDestination creates a new image destination .
3348	newUntrustedSignature creates a new untrusted signature .
3349	MarshalJSON implements json . Marshaler for untrustedSignature .
3350	UnmarshalJSON implements the json . Unmarshaler interface .
3351	verifyAndExtractSignature verifies and extracts a signature .
3352	RewriteReference rewrites a reference from a name to a prefix
3353	getV1Registries returns a list of Registry objects that match the given config .
3354	getConfigPath returns the path to the system config file .
3355	GetRegistries returns a list of registries .
3356	readRegistryConf reads the config file at the given path .
3357	Manifest implements the Manifester interface for sourcedImage .
3358	ConfigUpdate updates the tarball config .
3359	parseImageAndDockerReference parses an image and a Docker reference .
3360	parseDockerReferences parses two Docker references .
3361	ListNames returns a sorted list of transport names .
3362	NewReference creates a new OSTree image reference .
3363	signaturePath returns the path to the signature file at the given index .
3364	ValidateImageName validates the image name .
3365	SplitPathAndImage splits a path and image .
3366	ValidateOCIPath validates the OCI path
3367	ValidateScope validates the given scope .
3368	BlobInfoFromSchema2Descriptor converts Schema2Descriptor to types . BlobInfo
3369	Schema2FromManifest creates a Schema2 from a manifest .
3370	Schema2FromComponents creates a new Schema2 from the given components .
3371	SetAuthentication sets the authentication configuration for the given user and password .
3372	RemoveAuthentication removes authentication from the registry .
3373	RemoveAllAuthentication removes all authentication configs .
3374	readJSONFile reads a docker config file from a JSON file .
3375	modifyJSON is used to modify a docker config file
3376	findAuthentication returns the Authentication field of the given registry and path . If legacyFormat is true the Authentication field is returned .
3377	NewDestination creates a new Destination .
3378	AddRepoTags adds repo tags to the destination .
3379	writeLegacyLayerMetadata writes the layer metadata to the destination .
3380	sendSymlink sends a symlink to the given path .
3381	sendBytes sends a byte slice to the destination .
3382	sendFile sends a tar file to the destination .
3383	Commit is part of the Destination interface .
3384	imageMatchesRepo returns true if the given image matches the given repo .
3385	resolveImage resolves a reference to an image .
3386	Transport returns the image transport for this storage reference .
3387	StringWithinTransport returns a string representation of the transport .
3388	PolicyConfigurationNamespaces returns the namespaces for the policy configuration .
3389	GzipDecompressor returns an io . ReadCloser that decompresses data from the given io . Reader .
3390	Bzip2Decompressor returns an io . ReadCloser that decompresses bzip2 .
3391	XzDecompressor returns an io . ReadCloser for the given io . Reader .
3392	DetectCompression returns a DecompressorFunc and an io . Reader for the given input .
3393	newImageDestination creates a new docker image destination .
3394	mountBlob mounts a blob .
3395	bicTransportScope creates a BICTransportScope from a dockerReference .
3396	newBICLocationReference returns a new BICLocationReference .
3397	parseBICLocationReference parses a BICLocationReference .
3398	NewSourceFromStream creates a new Source from a stream .
3399	readTarComponent reads a tar component from the given path .
3400	ensureCachedDataIsPresent ensures that the cached data is present .
3401	loadTarManifest loads the tar manifest from the source .
3402	Close closes the source .
3403	newImageDestination creates a new image destination .
3404	imageLoadGoroutine sends an image to the docker daemon .
3405	NewReference creates a new ociArchiveReference .
3406	createOCIRef creates a temporary directory for the given image .
3407	createUntarTempDir creates a temporary directory from an ociArchiveReference .
3408	destructivelyPrioritizeReplacementCandidatesWithMax takes a slice of CandidateWithTime and a slice of uncompressedDigest and a slice of candidates and returns a slice of CandidateWithTime .
3409	newImageDestination creates a new ostree image directory .
3410	resolveExistingPathToFullyExplicit resolves an existing path to a fully explicit string .
3411	newImageDestination creates a new ImageDestination .
3412	isDirEmpty returns true if the given path is empty .
3413	removeDirContents removes the contents of a directory .
3414	GetRepositoryTags returns the tags for the given image reference .
3415	DefaultCache creates a default blobInfoCache .
3416	uncompressedDigestLocked returns the uncompressed digest for the given digest .
3417	Close closes the temporary directory .
3418	PutManifest implements ociArchiveImageDestination .
3419	Commit is part of the Archive interface .
3420	tarDirectory creates a tar file from src .
3421	ParseStoreReference parses a store reference .
3422	chooseDigestFromManifestList chooses a digest from a manifest list
3423	ChooseManifestInstanceFromManifestList selects an image from the manifest list .
3424	manifestSchema1FromComponents constructs a manifest . Schema1 from the given components .
3425	manifestDigest returns the manifest digest for the given instance digest .
3426	deleteImage deletes a docker image .
3427	Schema1FromComponents creates a new Schema1 from the given components .
3428	initialize initializes Schema1 .
3429	ToSchema2Config converts Schema1 to Schema2V1Image
3430	Digest returns the digest of the given manifest .
3431	MatchesDigest returns true if the manifest matches the expected digest .
3432	NormalizedMIMEType returns the normalized MIME type for the given string .
3433	FromBlob creates a manifest from a blob .
3434	NewReference creates a new ImageReference .
3435	layerPath returns the path of the given digest .
3436	signaturePath returns the path to the signature file at the given index .
3437	New creates a new pool .
3438	NewFunc creates a new pool .
3439	ProcessTimed waits for the given payload to be processed and returns the result .
3440	SetSize sets the number of workers in the pool .
3441	GetSize returns the number of workers in the pool
3442	TL returns the truncated point of the rectangle .
3443	BR returns the BR of the rectangle .
3444	CVBox returns the box as a CvBox2D .
3445	Points returns a slice of Point2D32f .
3446	FOURCC returns a uint32 representation of c1 c2 c3 and c4
3447	Merge merges two ipl images .
3448	Split splits src into imgBlue and imgGreen .
3449	AddWeighted adds a weighted image .
3450	And creates a And with the given src1 src2 and dst .
3451	AndWithMask is a convenience wrapper around And .
3452	AndScalar adds a Scalar to an IplImage .
3453	AndScalarWithMask adds a Scalar to an IplImage .
3454	Or is a convenience wrapper around OrWithMask .
3455	OrWithMask is like Or but uses a mask .
3456	OrScalar is a convenience function for OrScalarWithMask .
3457	OrScalarWithMask adds a Scalar to an IplImage .
3458	AddWithMask adds src1 src2 dst to dst with the given mask .
3459	AddScalar adds a Scalar to an IplImage .
3460	AddScalarWithMask adds a Scalar to src with the given mask .
3461	Subtract subtracts dst from src1 and src2 .
3462	SubtractWithMask subtracts dst from src1 and src2 using the given mask .
3463	SubScalar adds a Scalar to an IplImage .
3464	SubScalarWithMask creates a sub - scaler with the given mask .
3465	SubScalarRev is a convenience function for SubScalarWithMaskRev .
3466	SubScalarWithMaskRev creates a new Scalar with the given value and mask .
3467	AbsDiff performs a diff between two images .
3468	AbsDiffScalar computes the difference between two scalers .
3469	MeanStdDevWithMask returns the mean and scaler of src with the given mask .
3470	CreateSeq creates a new sequence .
3471	Push adds a pointer to the sequence .
3472	Pop removes an element from the sequence .
3473	PushFront pushes the element to the front of the sequence .
3474	PopFront pops the element at the front of the sequence .
3475	GetElemAt returns the sequence element at the given index .
3476	RemoveAt removes the sequence at the given index .
3477	Delay is an Option to set the delay .
3478	BackOffDelay returns a time . Duration for a backoff delay .
3479	Error returns a string representation of the error .
3480	Arguments adds arguments to the request .
3481	BodyString returns the request body as a string .
3482	BodyBytes returns the request body as a byte slice .
3483	Body sets the body of the request .
3484	Option adds an option to a request .
3485	Header adds a header to the request .
3486	Send creates a new request and sends it .
3487	Exec executes a request .
3488	Next returns the next message in the subscription .
3489	Cancel cancels the subscription .
3490	FileList returns a list of all files at the given path .
3491	Cat returns an io . ReadCloser for the given path .
3492	List returns a list of links for a given path .
3493	Pin adds a file to the shell .
3494	Pins returns a map of pins .
3495	Version returns the version and commit of the shell .
3496	SwarmPeers returns a list of swarm peers .
3497	SwarmConnect connects to a swarm .
3498	DagPutOptions creates a DagPutSettings with the given options .
3499	Pin specifies the pin to put .
3500	Kind specifies the kind of the dag to put .
3501	Hash specifies the hash of the DagPutSettings
3502	AddDir adds a directory
3503	Publish publishes a value to a node .
3504	PublishWithDetails publishes a given key with specified lifetime and ttl .
3505	ResolveValue resolves a PlanValue .
3506	GenerateQuery generates a new query .
3507	EncodeValue encodes a value into buf .
3508	Lex converts a yySymType into a token .
3509	skipStatement skips a statement .
3510	reset resets the tokenizer .
3511	Preview returns a preview of a SQL statement .
3512	NewPlanValue creates a new PlanValue from an Expr .
3513	StringIn returns true if the string contains any of the given values .
3514	NewTrackedBuffer creates a new TrackedBuffer .
3515	NewStringArena creates a new StringArena .
3516	NewString creates a string from a byte slice .
3517	SpaceLeft returns the space left of the array .
3518	ParseStrictDDL parses a strict DDL statement .
3519	ParseNext parses the next statement from a Tokenizer .
3520	Append appends a SQLNode to buf .
3521	ExprFromValue converts a sqltypes . Value to an Expr .
3522	Backtick returns the backtick of a string .
3523	NewValue creates a new Value .
3524	String returns a string representation of a Value .
3525	EncodeSQL encodes Value to BinWriter .
3526	EncodeSQL serializes the InsertValues into buf .
3527	EncodeSQL encodes the TupleEqualityList .
3528	WalkStatement walks a statement .
3529	WalkSelect walks a SQLNode and returns true if it is a valid SQLNode .
3530	BindVariablesEqual returns true if x and y are equal .
3531	New creates a new JWTMiddleware .
3532	HandlerWithNext implements the http . Handler interface .
3533	FromAuthHeader converts an authorization header to a string .
3534	FromParameter returns a TokenExtractor that extracts tokens from the given parameter .
3535	FromFirst returns a TokenExtractor that extracts tokens from the first request .
3536	getHelloPacket returns the RPC for the hello packet .
3537	NewFloodsubWithProtocols creates a new FloodSubRouter .
3538	NewFloodSub creates a new FloodSub .
3539	NewLRUBlacklist creates a new LRUBlacklist .
3540	NewRandomSub creates a new RandomSubRouter .
3541	NewGossipSub creates a new GossipSubRouter
3542	NewPubSub creates a new PubSub instance .
3543	WithValidateThrottle sets the threshold for validation .
3544	WithBlacklist is a functional option for PubSub that sets the blacklist .
3545	handleRemoveSubscription handles the removal of a subscription .
3546	handleAddSubscription handles a request to add a subscription .
3547	announce sends an announce message to all peers .
3548	notifySubs sends a message to all subscribed topics .
3549	seenMessage returns true if the message with the given id has been seen .
3550	subscribedToMsg returns true if msg is a subscribed message .
3551	msgID returns the id of the message .
3552	pushMsg pushes a message from src to the peer .
3553	validate validates a message .
3554	validateSingleTopic validates a single topic .
3555	getValidators returns the validators for the given message .
3556	Subscribe creates a subscription for a given topic .
3557	SubscribeByTopicDescriptor returns a subscription for a given topic descriptor .
3558	GetTopics returns a list of topics .
3559	Publish publishes a message to the given topic .
3560	ListPeers returns the list of peers for the given topic .
3561	WithValidatorTimeout sets the timeout for validation .
3562	WithValidatorConcurrency is a ValidatorOpt that sets the throttle on the addValReq .
3563	RegisterTopicValidator registers a validator for a given topic .
3564	UnregisterTopicValidator unregisters a validator for a given topic
3565	DefaultMetricPrefix returns the default prefix for a metric .
3566	MetricWithPrefix returns a string representation of a metric .
3567	NewClient creates a new Client .
3568	Call is part of the Client interface .
3569	CallPeer makes a call to a peer .
3570	CallSC starts a call on the given SubChannel .
3571	ReadResponse reads an http . Response from the given argument .
3572	writeHeaders writes the response headers .
3573	ResponseWriter creates a new http . ResponseWriter based on the given ArgWritable .
3574	ReadHeaders reads headers from r .
3575	NewTCPRawRelay creates a new TCPrawRelay .
3576	NewClient creates a new client .
3577	Advertise advertises other services to the client .
3578	Handle handles an inbound call .
3579	Start starts the tchannel server
3580	Port returns the port of the server .
3581	SetStrategy sets the score calculation strategy for the peer list .
3582	Add adds a peer to the peer list .
3583	GetNew returns a new peer from the peer list .
3584	Get returns a peer from the PeerList .
3585	Remove removes a peer from the peer list .
3586	Copy returns a copy of the PeerList .
3587	Len returns the number of peers in the peer list
3588	exists returns whether a peer with the given hostPort exists in the peer list .
3589	getPeerScore returns the peer score for the given host port .
3590	onPeerChange is called when a peer is changed .
3591	updatePeer updates the peer s score .
3592	getConn returns the connection at index i .
3593	GetConnection returns a connection to the peer .
3594	getConnectionRelay returns a connection to the peer .
3595	canRemove returns true if the peer can be removed .
3596	addConnection adds a new connection to the peer .
3597	removeConnection removes a connection from the peer s list .
3598	connectionCloseStateChange is called when a connection is closed .
3599	Connect creates a new connection to the peer .
3600	BeginCall is part of the OutboundCall interface .
3601	NumConnections returns the number of inbound and outbound connections .
3602	NumPendingOutbound returns the number of pending outbound connections .
3603	isEphemeralHostPort returns true if the given host port is ephemeral .
3604	Get returns the value associated with the given key .
3605	Set implements thrift . Handler .
3606	ClearAll implements thrift . Handler .
3607	NewChannel creates a new channel .
3608	Serve implements net . Listener .
3609	ListenAndServe listens on the given host port and serves the channel .
3610	Register registers a new handler for this channel .
3611	PeerInfo returns the local peer information for the channel .
3612	GetSubChannel returns a new SubChannel .
3613	serve accepts connections and waits for them to finish .
3614	Ping is part of the Channel interface .
3615	StatsTags returns a map of common stats tags .
3616	Connect creates a new connection to the given host .
3617	exchangeUpdated is called when a new peer is added to the channel .
3618	updatePeer updates a peer in the channel .
3619	addConnection adds a connection to the channel . Returns true if the connection was added .
3620	removeClosedConn removes a connection from the channel .
3621	connectionCloseStateChange is called when a connection is closed .
3622	State returns the current channel state .
3623	NewReader creates a new Reader .
3624	ReadUint16 reads a uint16 from the reader .
3625	ReadString reads a string from the reader .
3626	ReadLen16String reads a 16 - bit length string .
3627	Register registers a channel with the Behavior .
3628	Run runs the behavior .
3629	Get returns a relayTimer from the pool .
3630	Put adds rt to the pool .
3631	Start starts the relay timer .
3632	Release releases the timer .
3633	NewLogger creates a new logger .
3634	NewTCPFrameRelay creates a new TCP frame relay .
3635	tallyTags returns a map of known tags .
3636	Isolated creates a new isolated peer .
3637	Isolated returns true if the subchannel is isolated .
3638	Register registers a method for a sub channel .
3639	GetHandlers returns a map of all registered handlers .
3640	StatsTags returns the stats tags for this channel .
3641	registerNewSubChannel creates a new SubChannel .
3642	get returns a SubChannel with the given service name .
3643	getOrAdd returns a SubChannel or registers a new SubChannel .
3644	Discover discovers a service by name .
3645	Start starts the HTTP server .
3646	listen implements net . Listener .
3647	WriteRequest writes an http . Request to the given ArgWritable .
3648	ReadRequest reads an http . Request from the given argument .
3649	NewReadBufferWithSize returns a new ReadBuffer with the given size .
3650	ReadByte reads a single byte from the buffer .
3651	ReadBytes reads n bytes from the buffer .
3652	ReadString reads n bytes from the buffer .
3653	ReadUint16 reads a uint16 from the buffer
3654	ReadUint32 reads a uint32 from the buffer
3655	ReadUint64 reads a uint64 from the buffer
3656	ReadUvarint reads a uvarint from the buffer .
3657	ReadLen8String returns the length of the buffer as a string .
3658	ReadLen16String returns the length of the buffer as a string .
3659	FillFrom implements io . ReaderFrom interface . It reads n bytes from the given io . Reader .
3660	Wrap wraps a byte slice into the buffer .
3661	WriteSingleByte writes n bytes to the buffer .
3662	WriteBytes writes a byte slice to the buffer .
3663	WriteUint16 writes a uint16 to the buffer .
3664	WriteUint32 writes a uint32 to the buffer .
3665	WriteUint64 writes an uint64 to the buffer .
3666	WriteUvarint writes a uvarint to the buffer .
3667	WriteString writes a string to the buffer .
3668	WriteLen8String writes an 8 - byte string to the buffer .
3669	WriteLen16String writes a string to the buffer .
3670	DeferByte returns a ByteRef for the buffer . If the buffer is full ErrBufferFull is returned .
3671	DeferBytes returns the number of bytes that should be deferred .
3672	FlushTo implements io . WriterTo interface .
3673	Reset resets the buffer .
3674	Wrap wraps a byte slice into the buffer .
3675	Update updates a uint16 .
3676	Update updates a uint32 .
3677	Update updates a uint64 .
3678	Update updates a BytesRef .
3679	UpdateString updates a string .
3680	ArgReader returns a new ArgReader .
3681	finish finishes the writable fragment .
3682	newWritableChunk creates a new writable chunk .
3683	writeAsFits writes the chunk as a fit .
3684	newFragmentingWriter creates a new fragmentingWriter .
3685	ArgWriter implements the Writer interface .
3686	BeginArgument implements the Writer interface .
3687	Write implements the Writer interface .
3688	Flush flushes the fragmenting chunk .
3689	Close closes the fragmenting writer .
3690	handleCallRes is used to handle a call res .
3691	Arg2Reader implements the OutboundCall interface for OutboundCallResponse
3692	handleError parses an error frame and returns true if the error occurred .
3693	doneReading waits for the response to finish reading .
3694	newFragment creates a new writableFragment .
3695	flushFragment flushes the fragment .
3696	failed implements the reqResWriter interface .
3697	arg1Reader implements the arg1Reader interface .
3698	arg2Reader returns a new argReader .
3699	arg3Reader implements the arg3Reader interface .
3700	argReader returns a new arg reader .
3701	recvNextFragment reads the next fragment from the reqResReader .
3702	releasePreviousFragment releases the previous fragment .
3703	failed implements the reqResReader interface .
3704	parseInboundFragment parses a frame into a readableFragment .
3705	NewContext creates a new context .
3706	WithHeaders wraps the given context with the given headers .
3707	healthCheck performs a health check on the connection .
3708	SetTimeout sets the context s timeout .
3709	AddHeader adds a header to the context .
3710	SetHeaders sets the headers for the context .
3711	SetConnectTimeout sets the connection timeout .
3712	SetRetryOptions sets the RetryOptions field .
3713	SetTimeoutPerAttempt sets the timeout per Attempt .
3714	SetParentContext sets the parent context .
3715	Build creates a new context .
3716	overrideHeaders overrides the transport headers .
3717	Read implements the ArgReadHelper interface .
3718	ReadJSON implements the json . ReadHelper interface .
3719	NewArgWriter creates a new ArgWriter .
3720	Write implements io . Writer .
3721	WriteJSON writes a JSON struct to the writer .
3722	Register registers a new inbound call to the given registrar .
3723	Count returns the number of relay items .
3724	Get returns the relay item with the given id .
3725	Add adds a relay item to the list .
3726	Entomb deletes the relay item with the given id .
3727	NewRelayer creates a new Relayer .
3728	Relay relays a frame to a peer .
3729	Receive receives a frame from the relay .
3730	handleNonCallReq handles a non - call request .
3731	addRelayItem adds a relay item to the relay .
3732	failRelayItem fails a relay item .
3733	WriteStruct writes a struct to the given writer .
3734	ReadStruct reads a struct from io . Reader .
3735	EnsureEmpty ensures that the given io . Reader is empty .
3736	NewServer creates a new server .
3737	Advertise advertises a list of hyperbahn hosts .
3738	handleCallReqContinue handles an inbound call request .
3739	dispatchInbound dispatches an inbound call to the remote peer .
3740	CallOptions returns a CallOptions for the call .
3741	Response returns the InboundCall response .
3742	SendSystemError is part of the InboundCall interface .
3743	SetApplicationError sets the application error .
3744	Arg2Writer returns a new ArgWriter for the InboundCallResponse .
3745	doneSending waits for the response to be sent .
3746	newState creates a new State from a Thrift .
3747	rootType returns the root type of the given type .
3748	checkInclude checks if the given type is included in the state .
3749	isResultPointer returns true if the given type is a result pointer .
3750	goType returns the go type prefix for the given type .
3751	goTypePrefix returns the state s go type prefix .
3752	NewContext creates a new context .
3753	newIncomingContext creates a new IncomingContext .
3754	CurrentCall returns the current call or nil .
3755	New creates a new random source .
3756	Health implements meta . HealthHandler .
3757	Headers returns the headers for the request .
3758	ResponseHeaders returns the response headers .
3759	SetResponseHeaders sets the response headers
3760	Child returns a ContextWithHeaders for the given headerCtx .
3761	Wrap wraps a context with the given headers .
3762	WrapWithHeaders wraps a context with the given headers .
3763	WithoutHeaders returns a new context without headers .
3764	Notify is part of the Notifier interface .
3765	forwardPeerFrame forwards a frame to a peer .
3766	recvPeerFrame returns the peer s frame .
3767	recvPeerFrameOfType returns the peer frame of the given message type .
3768	shutdown shuts down the exchange .
3769	newMessageExchangeSet creates a new message exchange set .
3770	addExchange adds a message exchange to the set .
3771	newExchange creates a new message exchange .
3772	deleteExchange removes an exchange from the set .
3773	removeExchange removes an exchange from the set .
3774	expireExchange removes a message exchange from the set .
3775	forwardPeerFrame forwards a frame to a peer .
3776	copyExchanges creates a copy of the exchanges .
3777	stopExchanges stops all exchanges .
3778	NewFrame creates a new Frame .
3779	ReadBody reads the body of the frame from r .
3780	WriteOut writes the frame to w .
3781	CanRetry returns true if the given error can be retried .
3782	HasRetries returns true if err is a retry error .
3783	SinceStart returns the duration since the start of the request .
3784	AddSelectedPeer adds a new selected peer
3785	RunWithRetry runs the given function with retry .
3786	ChecksumSize returns the checksum size of the checksum type .
3787	New returns a new checksum .
3788	parseTemplates parses a list of templates .
3789	NewStringSliceFlag returns a new string slice flag .
3790	withStateFuncs adds state functions to the template .
3791	IntrospectOthers returns a map of channels to channel infos .
3792	ReportInfo returns information about the channel .
3793	IntrospectState returns a map of IntrospectionOptions to the PeerRuntimeState .
3794	IntrospectState returns a map of IntrospectOptions to SubChannelRuntimeState .
3795	IntrospectState returns the PeerRuntimeState .
3796	IntrospectState returns the connection runtime state .
3797	IntrospectState returns the introspect state .
3798	IntrospectState creates a RelayItemSetState from the provided IntrospectionOptions .
3799	IntrospectState creates an ExchangeSetRuntimeState from the given IntrospectionOptions .
3800	NewContext creates a new context .
3801	WriteResponse writes a response to the channel .
3802	Wrap wraps a handler into a tchannel . Handler .
3803	initFromOpenTracing injects a span from an opentracing . Span
3804	startOutboundSpan starts an outbound span .
3805	intToIP4 converts an ip to a net . IP .
3806	servicePeerToHostPort converts a hyperbahn . ServicePeer to a host port .
3807	NewStatsdReporter returns a new StatsReporter .
3808	UnmarshalText implements the encoding . TextUnmarshaler interface .
3809	Push adds an item to the heap .
3810	Pop removes a peer from the heap .
3811	updatePeer updates the peer score .
3812	removePeer removes a peer from the heap .
3813	pushPeer pushes a peer to the heap .
3814	addPeer adds a peer to the heap .
3815	NewClient returns a new TChanClient .
3816	Add adds a new peer to the list .
3817	Get returns a peer with the given host port .
3818	WithTimeout sets the timeout .
3819	Methods returns a sorted list of methods for the service .
3820	InheritedMethods returns the inherited methods for the service .
3821	Arguments returns the arguments for the method .
3822	ArgList returns the list of arguments for the method .
3823	CallList returns a list of ctx arguments .
3824	RetType returns the return type of the method .
3825	WrapResult wraps a return into a string . If there is no return mode it panics .
3826	ReturnWith implements Method .
3827	Declaration returns a string representation of the field .
3828	Starts an idle sweep .
3829	start starts the idle connection poller .
3830	Stop stops the idleSweep .
3831	ResolveWithGoPath resolves a file with GOPATH .
3832	setExtends sets the extends in the state map .
3833	register registers a new handler for the given method .
3834	NewClient creates a new client .
3835	ListenIP returns a net . IP that can be used to listen for incoming connections .
3836	Close closes the listener .
3837	ReadArgsV2 reads arg2 and arg3 from r .
3838	WriteArgs writes arg2 and arg3 to tchannel . OutboundCall
3839	Call initiates a call on the given channel .
3840	CallSC executes the given method on the given SubChannel .
3841	CallV2 implements the Call interface for CallV2 .
3842	NewRealRelay creates a new Relay .
3843	NewServer creates a new server .
3844	RegisterHealthHandler registers a health handler .
3845	Handle handles an inbound call .
3846	MetricsKey returns the metric key for the system error .
3847	NewSystemError creates a new SystemError .
3848	NewWrappedSystemError creates a new SystemError .
3849	Error implements the error interface for SystemError .
3850	GetContextError returns an error if err is a context . DeadlineExceeded or context . Canceled .
3851	GetSystemErrorCode returns a SystemErrCode if the error is a SystemError .
3852	ping sends a ping message to the exchange .
3853	handlePingRes handles a ping response .
3854	handlePingReq handles a ping request .
3855	SendSystemError sends an error to the remote peer .
3856	connectionError logs a connection error .
3857	withStateLock locks the connection s state .
3858	withStateRLock returns an error if f returns nil .
3859	readFrames reads frames from the connection .
3860	writeFrames writes frames to the connection .
3861	hasPendingCalls returns true if the connection has any pending calls .
3862	checkExchanges checks if there are any exchanges in the connection .
3863	closeNetwork closes the underlying network connection .
3864	getLastActivityTime returns the last activity time .
3865	Validate validates a service
3866	logFailedRegistrationRetry logs a retry if the registration failed .
3867	initialAdvertise sends an advertise to the Hyperbahn server .
3868	Service returns the name of the service .
3869	TTL returns the TTL of the call .
3870	SetTTL sets the TTL of the call .
3871	finishesCall returns true if the frame is finished .
3872	Flat returns a flat representation of PlatformStrings .
3873	Map implements the PlatformStrings interface .
3874	MapSlice implements the PlatformStrings interface .
3875	GetProtoConfig returns the proto config .
3876	MapExprStrings maps a string to a bzl . Expr .
3877	FlattenExpr flattens an expression into a bzl . Expr
3878	makePlatformStringsExpr creates a platformStrings expression .
3879	String returns a string representation of the platform .
3880	Find returns the path to the workspace file in the given directory .
3881	runGazelle runs a gazelle command .
3882	restoreBuildFilesInRepo restores the build files in the given repo .
3883	FixLoads updates a rule . LoadInfo with knownLoads .
3884	fixLoad creates a new rule . Load from a rule . Load .
3885	newLoadIndex creates a new index for a rule file .
3886	removeLegacyGoRepository removes the go_repository from the given rule file .
3887	Compare compares two versions .
3888	ParseVersion parses a version string .
3889	EmptyFile creates a new empty file .
3890	LoadWorkspaceFile loads a workspace file from the given path .
3891	LoadMacroFile loads a macro file from the given path .
3892	EmptyMacroFile returns an empty macro file .
3893	LoadData loads a bzl file from pkg .
3894	LoadWorkspaceData loads a workspace from bzl .
3895	LoadMacroData loads a macro file from bzl .
3896	ScanAST scans an AST package .
3897	ScanASTBody scans the body of a AST statement .
3898	MatchBuildFileName matches a list of filenames in a directory .
3899	SyncMacroFile synchronizes a macro file .
3900	MacroName returns the macro name of the file .
3901	Sync syncs the contents of the file .
3902	Format returns the bzl format of the file .
3903	Save saves the file to disk .
3904	HasDefaultVisibility returns true if the file has default visibility .
3905	NewLoad creates a new load statement .
3906	Symbols returns a sorted list of symbols .
3907	Has returns true if the given symbol is present in the load .
3908	Add adds a symbol to the load .
3909	Remove removes a symbol from the load .
3910	Insert inserts a file at the given index .
3911	NewRule creates a new Rule .
3912	SetKind sets the rule s kind
3913	AttrKeys returns a slice of all the attribute keys in the rule .
3914	Attr returns the rule attr for the given key .
3915	AttrString returns the value associated with the given key as a string .
3916	AttrStrings returns a list of string expressions for a given key .
3917	DelAttr removes an attribute from the rule .
3918	SetAttr sets an attribute for a rule .
3919	PrivateAttrKeys returns a sorted list of private attributes .
3920	SetPrivateAttr sets a private attribute .
3921	Insert inserts a rule into the given file .
3922	IsEmpty returns true if the rule is empty .
3923	CheckInternalVisibility returns the visibility of a subpackage .
3924	New creates a new label .
3925	Rel returns the label relative to the given repo and pkg .
3926	Equal returns true if two labels are equal .
3927	Contains returns true if the label contains the other label .
3928	generateFromPath generates a file from the given path .
3929	shouldCall returns true if the given path should be called .
3930	shouldUpdate returns true if the given rel should be updated .
3931	shouldVisit returns true if a directory should be visited .
3932	SquashRules squashes the rules in src into dst .
3933	runClient connects to the unix server .
3934	UpdateRepo updates a repository .
3935	NewRemoteCache creates a new RemoteCache .
3936	Remote returns the remote and vcs for the given root .
3937	get retrieves the value associated with the given key from the cache .
3938	ensure adds a new entry to the cache if it exists .
3939	RelBaseName returns the base name for a given path prefix and root .
3940	Clone returns a copy of the config .
3941	IsValidBuildFileName returns true if the given name is a valid build file name .
3942	check returns true if the tag line is valid .
3943	fileNameInfo returns the file info for a given path .
3944	otherFileInfo returns the fileInfo for the other file at the given path .
3945	protoFileInfo returns the proto . FileInfo for the given path .
3946	AddRule adds a rule to the index .
3947	Finish collects the embedded rules and builds the import index .
3948	buildImportIndex builds the import index .
3949	IsSelfImport returns true if the given label is a self import .
3950	applyKindMappings returns a copy of the mappedKinds .
3951	appendOrMergeKindMapping appends a mapped kind to a slice of LoadInfo .
3952	RuleName returns the rule name for the given rules .
3953	buildPackages builds a list of packages based on the proto config .
3954	selectPackage selects a package from a list of packages .
3955	generateProto generates a proto rule .
3956	generateEmpty generates an empty rule from a rule . File .
3957	ImportRepoRules imports rules from a repository .
3958	MergeRules merges genRules into existingRules .
3959	GenerateRule generates a rule for a given repository .
3960	FindExternalRepo finds an external repository .
3961	ListRepositories lists all repositories in the specified workspace .
3962	migrateLibraryEmbed is a helper function to migrate a library embed rule .
3963	migrateGrpcCompilers migrates gRPC compilers to a rule file .
3964	squashCgoLibrary squashes a cgo_library rule .
3965	removeLegacyProto removes a legacy proto from the given file .
3966	removeLegacyGazelle removes a gazel rule file .
3967	selectPackage selects a package from a list of buildable packages .
3968	AddBuiltin adds a built - in resolver to the metaResolver
3969	MappedKind adds a mapped kind to the metaResolver .
3970	Resolver implements the resolve . Resolver interface for metaResolver .
3971	sortExprLabels sorts the labels of a ListExpr .
3972	checkRulesGoVersion ensures that rules_go is compatible with the version specified in the config . RulesGoRepo .
3973	preprocessTags sets gc . genericTags .
3974	setBuildTags sets the build tags .
3975	splitValue splits a string into a slice of values .
3976	copyGoModToTemp copies the go . mod file to a temporary directory .
3977	findGoTool returns the path to the go tool .
3978	isBuildable returns true if the package is buildable .
3979	startServer starts the server .
3980	watchDir starts a goroutine to watch for changes to a directory .
3981	listDirs lists all directories in a directory .
3982	shouldIgnore returns true if p should be ignored .
3983	recordWrite records a write to the given path .
3984	getAndClearWrittenDirs returns a list of all written directories .
3985	CombineHandlers creates a new http . HandlerFunc with the given handlers .
3986	VerifyContentType returns an http . HandlerFunc that verifies the given content - type .
3987	VerifyMimeType returns an http . HandlerFunc that verifies the given mime type .
3988	VerifyBasicAuth returns an http . HandlerFunc that verifies that the given username and password are valid .
3989	VerifyJSONRepresenting implements http . HandlerFunc .
3990	VerifyFormKV implements the http . Handler interface for VerifyForm .
3991	RespondWithProto responds to a request with a protobuf message .
3992	RegisterFailHandlerWithT registers a GomegaFailHandler with a TWithHelper .
3993	EventuallyWithOffset creates an AsyncAssertion with the given offset .
3994	ConsistentlyWithOffset creates an AsyncAssertion with the specified offset .
3995	Expect returns an Assertion that satisfies the WithT interface .
3996	Eventually returns an AsyncAssertion for the given actual and intervals .
3997	Consistently creates an AsyncAssertion based on the assertion type Consistently .
3998	TimeoutCloser returns a TimeoutReaderWriterCloser .
3999	TimeoutReader returns an io . Reader that reads from r with a given timeout .
4000	TimeoutWriter returns an io . Writer that writes to the given io . Writer with the given timeout .
4001	Nest nests an AggregateError into a path .
4002	SetMockService sets the mock service
4003	FindMachineByIdOrAddress finds a machine by ID or address .
4004	Write implements the Writer interface .
4005	Hijack implements the http . Hijacker interface for FlushingWriter .
4006	ListDeploys returns a list of deploys that match the given filter .
4007	AddAll adds a route to the route with the given version and path .
4008	samlRequestTimeout returns the request timeout .
4009	RegisterHandler registers a new http . Handler .
4010	RegisterHandlerVersion registers a Tsuru handler .
4011	Check returns a list of Result from a list of checkers .
4012	DiscoverRepositoryPath discovers the path to a repository .
4013	OpenRepository opens a repository .
4014	RemoteURL returns the remote URL of the repository .
4015	List lists all Apps in the indexer .
4016	Apps returns an object that can list and get Apps .
4017	List lists all Apps in the indexer for a given namespace .
4018	StreamJSONResponse streams a JSON response to w .
4019	DropDatabase drops a database .
4020	Collection returns a new collection with the given name .
4021	SetLogger sets the target s logger .
4022	Error implements the Target interface .
4023	Errorf logs a formatted error message .
4024	Fatal implements the logger . Target interface .
4025	Debugf implements the logger . Target interface .
4026	GetStdLogger returns the logger associated with the target .
4027	Namespace returns the namespace of the cluster .
4028	recreateContainers ensures that containers have started .
4029	checkProvisioner checks if a provisioner is set .
4030	checkDocker checks if docker is configured correctly .
4031	checkScheduler checks if the scheduler is configured correctly .
4032	checkRouter checks if the default router is set .
4033	Available returns true if the unit is available .
4034	Get returns a provisioner by name .
4035	Registry returns a list of provisioners .
4036	Error returns the string representation of the error .
4037	validateVersion returns true if the supported version matches the current version .
4038	ReadTarget reads a TSURU target from the environment .
4039	WriteTarget writes t to the target file .
4040	WriteOnTargetList writes the target list to the given label .
4041	Conn creates a connection to a database .
4042	Apps returns a collection of apps .
4043	PoolsConstraints returns the pool_constraints collection .
4044	Users returns a collection of users .
4045	SAMLRequests returns a collection of SAML requests .
4046	AppLogCollection returns the LogStorage s AppLogCollection .
4047	CreateAppLogCollection creates a new app log collection .
4048	LogsCollections returns a list of all log collections .
4049	ArchiveBuildCmds returns the command lines used to build an archive .
4050	ArchiveDeployCmds returns command line commands to deploy an archive .
4051	DeployCmds returns a list of command names used to deploy an application .
4052	runWithAgentCmds runs a tsuru unit agent command .
4053	newApps returns a new apps
4054	Commit commits a container
4055	processTags takes a slice of strings and returns a slice of tags .
4056	aggregateContainersBy returns a map of containers that match a matcher .
4057	chooseNodeToAdd selects a node to add to the cluster .
4058	chooseContainerToRemove selects a node from a list of nodes to remove from the cluster .
4059	Get returns a router by name .
4060	Default returns the name of the default router .
4061	Store stores a router entry for an app .
4062	TsuruV1 retrieves the TsuruV1Client
4063	Tsuru retrieves the TsuruV1Client
4064	NewAppInformer constructs a new informer for App type . Always prefer using an informer factory to get a shared informer instead of getting an independent one . This reduces memory footprint and number of connections to the server .
4065	NewFilteredAppInformer constructs a new informer for App type . Always prefer using an informer factory to get a shared informer instead of getting an independent one . This reduces memory footprint and number of connections to the server .
4066	Watch returns a watch . Interface that watches the requested apps .
4067	Patch applies the patch and returns the patched app .
4068	NewSharedInformerFactory creates a new shared informer factory .
4069	NewFilteredSharedInformerFactory creates a new sharedInformerFactory .
4070	Proxy is not available for broker services .
4071	UnbindUnit unbinds a unit .
4072	Create creates a new plan .
4073	Remove removes a plan .
4074	ensureDefault ensures that all plans are autogenerated .
4075	DeleteInstance deletes a service instance .
4076	ToInfo converts a ServiceInstance to a ServiceInstanceWithInfo
4077	Update updates a ServiceInstance .
4078	BindApp implements ServiceInstance . BindApp .
4079	BindUnit binds a unit to an app .
4080	UnbindApp unbinds an app .
4081	Status returns the status of a service instance .
4082	ProxyInstance creates a new instance of a Tsuru service .
4083	Inc increments the quota for an app .
4084	SetLimit is part of the quota . Service interface .
4085	Set sets the quota for an app .
4086	Get returns the quota for the specified app .
4087	RemoveImage removes an image from the registry .
4088	RemoveAppImages removes the app images from the registry .
4089	Create creates a platform image .
4090	List returns all platforms .
4091	FindByName finds a platform by its name .
4092	Update updates the given platform options .
4093	Remove removes a platform from the builder
4094	Rollback is used to rollback an existing platform image .
4095	GetPoolByName returns a pool by name .
4096	Manager returns the repository manager .
4097	Register registers a repository manager with the given name .
4098	start starts the bindSyncer .
4099	Shutdown shuts down the bindSyncer .
4100	GetForProvisioner returns a builder for a provisioner .
4101	get returns the builder with the given name .
4102	Registry returns a slice of Builders .
4103	RegisterQueueTask registers a task to the queue .
4104	Apps returns a AppInformer .
4105	DeepCopy is an autogenerated deepcopy function copying the receiver creating a new App .
4106	DeepCopy is an autogenerated deepcopy function copying the receiver creating a new AppList .
4107	DeepCopy is an autogenerated deepcopy function copying the receiver creating a new AppSpec .
4108	Write implements the Writer interface .
4109	ResetPassword resets the password of a user .
4110	addKnownTypes adds known types to the given scheme .
4111	Register registers a Shutdownable .
4112	Do sends a shutdown message to the given writer .
4113	ListImagesOrDefault returns a list of images or an error if the image is not found .
4114	MigrateAppsCRDs migrates apps to CRDs .
4115	Register registers a MigrateFunc with the given name .
4116	RegisterOptional registers a MigrateFunc with the given name .
4117	Run runs the command with the given arguments .
4118	Units returns all units in the app .
4119	MarshalJSON implements json . Marshaler .
4120	AcquireApplicationLockWait waits for an app lock to be acquired .
4121	ReleaseApplicationLock releases the application lock .
4122	GetByName retrieves an app by its name .
4123	AddUnits adds n units to the app .
4124	SetUnitStatus sets the status of a unit .
4125	UpdateNodeStatus updates the node status .
4126	available returns true if the app is available .
4127	Grant adds a user to a team .
4128	Revoke removes a team from the database .
4129	GetTeams returns a list of teams .
4130	setEnv sets the app s environment variable .
4131	getEnv returns the environment variable with the given name .
4132	validateNew validates a new app .
4133	validate validates the app .
4134	InstanceEnvs returns the environment variables for the specified service and instance .
4135	Run runs a command .
4136	GetUnits returns the app s units .
4137	GetUUID returns the app s UUID .
4138	Envs returns a map of environment variables for the app .
4139	SetEnvs sets the environment variables for the app .
4140	UnsetEnvs unsets all environment variables .
4141	AddCName adds a new CName to the app .
4142	Log logs a message to the database .
4143	LastLogs returns the last logs for the app .
4144	List returns a list of all apps matching the given filter .
4145	Swap swaps two apps .
4146	Start starts a process .
4147	GetDbDriver returns a DbDriver with the given name .
4148	GetCurrentDbDriver returns the current database driver .
4149	NewForConfig creates a new Tsuru client for the given config .
4150	GetAppFromUnitID returns a provision . App for the given unit ID .
4151	NewPipeline creates a new Pipeline .
4152	Result returns the pipeline s result .
4153	DecodeJsonPayload decodes the request body into v .
4154	UrlFor returns a url . URL for a given path .
4155	GetCorsInfo returns the CorsInfo for the request .
4156	MiddlewareFunc adds a middleware function to the middleware .
4157	MiddlewareFunc returns a HandlerFunc that implements the Recorder interface .
4158	WriteHeader implements the ResponseWriter interface .
4159	MakeRouter creates a new router .
4160	AppFunc returns a HandlerFunc that implements the Router interface .
4161	escapedPath returns the escaped path of a request URI .
4162	escapedPathExp returns the escaped path exp .
4163	start initializes the router .
4164	ofFirstDefinedRoute returns the first route that matches .
4165	findRouteFromURL finds a route from a URL .
4166	MiddlewareFunc returns a HandlerFunc that implements the ContentTypeChecker interface .
4167	CloseNotify sends a CloseNotify message to the response writer .
4168	MiddlewareFunc implements the Middleware interface for AccessLogApacheMiddleware .
4169	executeTextTemplate executes a text template .
4170	RemoteUser returns the remote user .
4171	ApacheQueryString returns the Apache query string .
4172	StartTime returns the start time of the log .
4173	ApacheRemoteAddr returns the Apache remote address .
4174	ResponseTime returns the response time .
4175	MiddlewareFunc implements the Middleware interface for JsonIndentMiddleware .
4176	EncodeJson encodes v to JSON .
4177	WriteHeader writes a header to the response writer .
4178	MakePath creates a path from a map of path parameters .
4179	MiddlewareFunc returns a HandlerFunc that implements the Recover middleware interface .
4180	WrapMiddlewares wraps a list of middlewares into a handler .
4181	MiddlewareFunc returns a HandlerFunc that implements the middleware interface .
4182	WriteHeader writes a gzip header .
4183	Hijack implements the http . Hijacker interface .
4184	Write implements the http . ResponseWriter interface .
4185	MiddlewareFunc implements the Middleware interface for AuthBasicMiddleware .
4186	printDebug prints a debug message at the given level .
4187	AddRoute adds a route to the trie .
4188	printDebug prints a debug message .
4189	FindRoutes returns a list of matching routes for the given http method and path .
4190	FindRoutesAndPathMatched returns a list of matches and a boolean indicating if a match was found .
4191	FindRoutesForPath returns a list of matching routes for the given path .
4192	Use adds middlewares to the stack .
4193	MakeHandler creates a new http . Handler .
4194	MiddlewareFunc returns a HandlerFunc that adds an X - Powered - By header to the request .
4195	MiddlewareFunc returns a HandlerFunc that wraps a status middleware .
4196	GetStatus returns the status of the middleware .
4197	MiddlewareFunc returns a HandlerFunc that implements the middleware interface .
4198	Flush implements the http . Flusher interface .
4199	MiddlewareFunc implements the Middleware interface for AccessLogJsonMiddleware .
4200	Fetch returns an io . Reader from the S3 .
4201	sanityCheck checks if the environment is sane .
4202	release releases the listener after the given timeout .
4203	fetchLoop runs in a goroutine .
4204	forkLoop forks the master .
4205	Init initializes the file .
4206	Fetch returns an io . Reader containing the contents of the file .
4207	Fetch returns an io . Reader for the HTTP request .
4208	NewConfig creates a new Sarama Config .
4209	Validate validates the configuration .
4210	NewClient creates a new Sarama client .
4211	AsyncClose closes the partition consumer .
4212	Close closes the partition consumer .
4213	MarkOffset marks the given offset and metadata as Dirty .
4214	NewConsumer creates a new consumer .
4215	MarkOffsets marks the given offsets as marked .
4216	ResetOffset resets the offset of a consumer message .
4217	Close closes the consumer .
4218	hbLoop listens for heartbeats and sends them to the given channel .
4219	twLoop runs in a goroutine .
4220	cmLoop runs in a goroutine .
4221	fetchOffsets fetches the offsets for the given subs .
4222	MarkOffset is part of the Sarama interface .
4223	ResetOffset is part of the Sarama interface .
4224	Offsets returns a map of offsets .
4225	Actual implements InstanceGroup .
4226	Expected implements InstanceGroup . Expected .
4227	Delete deletes an InstanceGroup .
4228	GetReconciler returns a reconciler for the given cluster .
4229	GetVersion returns the Kubicorn version .
4230	GetVersionJSON returns the version in JSON format .
4231	Actual returns the actual resource group and the cloud . Resource .
4232	Expected returns the expected resource group and cloud . Resource .
4233	CreateCmd returns a command to create a Kubicorn API model .
4234	NewUbuntuCluster creates a new ubuntu cluster
4235	ProviderConfig returns the provider configuration for the cluster .
4236	SetProviderConfig sets the provider config
4237	MachineProviderConfigs returns a slice of machine provider configs .
4238	SetMachineProviderConfigs sets the machine provider configs
4239	NewCluster creates a new Cluster .
4240	DeployControllerCmd returns a command to deploy a controller .
4241	NewRetrier creates a new Retrier .
4242	RunRetry starts a goroutine that retries every 10 seconds .
4243	MustGenerateRandomBytes is like GenerateRandomBytes but panics on error .
4244	ExplainCmd returns a command to explain the cluster .
4245	TimeOrderedUUID returns a random time order UUID .
4246	GetConfigCmd returns the cobra command for getting kubeconfig .
4247	RunAnnotated runs an annotated task .
4248	ListCmd returns a cobra command for list
4249	NewUbuntuCluster creates a new Kubernetes cluster
4250	EditCmd returns a command to edit a cluster state .
4251	RemoveKey removes a public key from the keyring
4252	RemoveKeyUsingFile removes a key from the keyring .
4253	Actual returns the actual firewall .
4254	Expected returns the expected cluster and cloud . Resource for the firewall .
4255	Apply applies the firewall to the given actual and expected resources .
4256	Delete deletes a firewall resource .
4257	DeleteCmd returns the cobra command for delete
4258	NewStateStore creates a new state store .
4259	Commit commits a cluster to the repository .
4260	ApplyCmd returns a command to apply a cluster resource to a cloud .
4261	ExpandPath expands the given path .
4262	CompletionCmd returns a command to generate completion code for bash and zsh shells .
4263	AdoptCmd returns the cobra command for Adopt
4264	StrEnvDef returns a string representation of an environment variable .
4265	IntEnvDef returns an int value from env or def if env is empty .
4266	BoolEnvDef returns a bool value from an environment variable .
4267	readFromFS reads a file from sourcePath .
4268	VersionCmd returns a command to check the version of Kubicorn
4269	NewSignalHandler creates a new signal handler .
4270	Register registers the handler .
4271	NewUbuntuCluster creates a new ubuntu cluster
4272	BeginningOfHour returns the beginning of a given hour .
4273	BeginningOfDay returns the beginning of a day .
4274	BeginningOfWeek returns the beginning of a given week .
4275	BeginningOfMonth returns the beginning of a month .
4276	BeginningOfQuarter returns the beginning of a quarter .
4277	BeginningOfYear returns the beginning of a year .
4278	EndOfMinute returns the end of a minute .
4279	EndOfHour returns the end of a given hour .
4280	EndOfDay returns the end of a day .
4281	EndOfWeek returns the end of the week .
4282	EndOfMonth returns the end of a month .
4283	EndOfQuarter returns the end of a quarter .
4284	EndOfYear returns the end of a year .
4285	MustParse is like Parse but panics on error .
4286	Between returns true if the current time is between begin and end .
4287	ParseInLocation converts a time . Location to a time . Time .
4288	MustParse parses a string into a time . Time .
4289	MustParseInLocation converts a time . Location to a time . Time . MustParse
4290	Between returns true if time1 and time2 are equal .
4291	NewChannelMemoryBackend creates a new channel memory backend .
4292	Start starts the channel memory backend .
4293	Flush implements the Backend interface .
4294	Stop stops the channel memory backend .
4295	Formatted returns the formatted string .
4296	Message returns a string representation of the record .
4297	SetBackend sets the logger s backend .
4298	MustGetLogger is like GetLogger but panics on error .
4299	Reset resets the log backend .
4300	IsEnabledFor returns true if the logger is enabled for the given level .
4301	Criticalf logs with CRITICAL format .
4302	Warningf logs a WARNING message .
4303	Noticef logs a message with NOTICE format .
4304	Infof logs an INFO message .
4305	SetFormatter sets the default formatter .
4306	MustStringFormatter is like NewStringFormatter but panics on error .
4307	formatFuncName returns the name of a function .
4308	Log implements BackendFormatter .
4309	LogLevel returns the log level for a given string .
4310	AddModuleLevel creates a new LeveledBackend .
4311	GetLevel returns the level for the given module .
4312	SetLevel sets the module level .
4313	IsEnabledFor returns true if the given module is enabled for the given level .
4314	MultiLogger creates a LeveledBackend from a list of Backends .
4315	Log logs a record at the given level and calldepth .
4316	GetLevel returns the level of the given module .
4317	SetLevel sets the log level for the given module .
4318	IsEnabledFor returns true if the given module is enabled for the given level .
4319	ConvertColors converts a slice of colors to a slice of strings .
4320	NewSyslogBackend creates a new syslog backend .
4321	NewSyslogBackendPriority creates a new syslog . Backend .
4322	SetBackend returns a LeveledBackend based on the given backends .
4323	NewCommander creates a new Commander .
4324	Execute executes a command .
4325	explain writes a description of the command to w .
4326	explainGroup writes an explanation of a command group to the given writer .
4327	explain writes a command explanation to w .
4328	dealias dealiases a command .
4329	Execute implements the DefaultCommander interface .
4330	LoadFromData loads a ConfigFile from a byte slice .
4331	LoadFromReader loads config file from io . Reader .
4332	ReloadData reloads the configuration file from an io . Reader .
4333	AppendFiles appends the given files to the ConfigFile .
4334	GetKeyList returns the list of keys in the given section .
4335	SaveConfigData writes config data to out .
4336	SaveConfigFile saves a config file
4337	Find appends a single selector to the current selection .
4338	FindByXPath returns a new Selection object with the given XPath .
4339	FindByLink returns a new Selection object containing the given link .
4340	FindByLabel returns a new Selection object with the given label .
4341	FindByName returns a new Selection object with the given name .
4342	FindByClass returns a new Selection object for a given class .
4343	FindByID returns a new Selection object with the given id .
4344	First creates a new Selection with the first element in the set of selectors .
4345	FirstByXPath returns the first element in the set of XPaths that matches the given selector .
4346	FirstByLink returns a new Selection object containing the first element matching the given link .
4347	FirstByLabel returns a new Selection object containing the first element matching the given label .
4348	FirstByName returns a new Selection object containing the first element matching the given name .
4349	All creates a new MultiSelection with the given selector .
4350	AllByXPath creates a new MultiSelection .
4351	AllByLink adds a link to the list of links in the session .
4352	AllByLabel returns a new MultiSelection with all the elements matching the given label .
4353	AllByName creates a new MultiSelection .
4354	AllByClass creates a new MultiSelection .
4355	AllByID creates a new MultiSelection .
4356	FindForAppium returns a new Selection object for the given appium selector type and text .
4357	Timeout is an Option to set the timeout .
4358	ChromeOptions is a convenience function for ChromeOptions .
4359	JoinPage creates a new page with the given url and options .
4360	Destroy deletes the current session .
4361	Reset resets the page .
4362	Navigate redirects the user to the given URL .
4363	GetCookies returns a list of cookies associated with the page .
4364	SetCookie sets the cookie on the page .
4365	DeleteCookie deletes a cookie
4366	ClearCookies removes all cookies from the page .
4367	URL returns the URL of the page .
4368	Size sets the size of the page .
4369	Screenshot saves a screenshot to a file
4370	Title returns the title of the page .
4371	HTML returns the HTML of the page .
4372	PopupText returns the popup text of the page .
4373	EnterPopupText enters a popup text
4374	ConfirmPopup is used to confirm a popup .
4375	CancelPopup cancels a popup .
4376	SwitchToParentFrame switches the page to the parent frame .
4377	SwitchToRootFrame switches to the original page frame .
4378	NextWindow moves the page to the next available window .
4379	CloseWindow removes the current window .
4380	WindowCount returns the number of available windows .
4381	LogTypes returns the log types for the page .
4382	MoveMouseBy moves the mouse to the given position .
4383	DoubleClick double clicks the page .
4384	Click adds a button to the page .
4385	Click clicks on each element in the Selection .
4386	DoubleClick moves the mouse to the selected element .
4387	Fill fills the Selection with the given text .
4388	Tap performs a tap on each element in the Selection .
4389	Touch implements the io . Toucher interface for Selection .
4390	FlickFinger moves the cursor to the selected element .
4391	ScrollFinger scrolls the element with the given x and y offsets .
4392	NewCapabilities creates a new Capabilities object .
4393	JSON returns the JSON representation of the capabilities .
4394	HaveTitle returns a GomegaMatcher that matches the given title .
4395	HaveURL returns a GomegaMatcher that matches the given URL .
4396	HavePopupText returns a GomegaMatcher that matches the given popup text
4397	HaveLoggedError returns a GomegaMatcher that matches the given log messages .
4398	Text returns the text of the selected element .
4399	Active returns true if the selection is active .
4400	Attribute returns the string representation of an attribute .
4401	CSS returns the CSS property of the element .
4402	Selected returns true if the element has been selected .
4403	Visible returns true if the element is visible .
4404	Enabled returns true if the element is enabled .
4405	HaveCount returns a GomegaMatcher that matches elements with the given count .
4406	HaveAttribute returns a GomegaMatcher that matches attributes with values .
4407	EdgeDriver creates a new EdgeDriver .
4408	Selendroid creates a WebDriver from a jar file .
4409	SwitchToFrame switches the element to a frame .
4410	Count returns the number of elements in the Selection .
4411	EqualsElement returns true if other is equal to this Selection .
4412	MouseToElement moves the mouse to the selected element .
4413	loggingMiddleware returns a http . Handler that logs the request .
4414	chainHandlers returns a middleware that chained handlers .
4415	HTTPReverseProxy starts a reverse proxy server .
4416	CheckInstallation checks if the binary version is within the given range .
4417	CheckVersion checks if the given binary is within the given version range
4418	GetVersionForBinary returns the version for the given binary .
4419	getUser retrieves a user by ID .
4420	login creates a new user with the given username and password .
4421	loginHandler handles the login request .
4422	logoutHandler is the http . Handler for logging out .
4423	viewHandler renders a template .
4424	Run runs the svc client
4425	WithRequest adds a request to the interaction .
4426	WillRespondWith sets the Response field .
4427	isJSONFormattedObject returns true if the given object is a JSON formatted object .
4428	ByUsername returns the user with the given username .
4429	ByID returns the user with the given ID .
4430	UserLogin logs in a user .
4431	newClient returns a new PactClient .
4432	NewClient returns a new PactClient
4433	ListServers returns a list of servers .
4434	UpdateMessagePact updates a pact message .
4435	PublishPacts publishes pacts
4436	getPort returns the port of the given URL .
4437	getAddress returns the address of the given URL .
4438	sanitiseRubyResponse sanitises a response from the Ruby process .
4439	Publish publishes a pact
4440	FindPortInRange finds a port in a given string .
4441	EachLike returns a matcher that matches the given content with the given minRequired .
4442	Term returns a matcher for a regexp term .
4443	UnmarshalJSON deserializes into a MapMatcher instance
4444	objectToString converts an object to a string .
4445	match returns a matcher for the given srcType and params .
4446	AddMessage adds a message to the pact .
4447	AddInteraction adds an interaction to the pact .
4448	Teardown stops the server .
4449	Verify verifies that the pact is valid .
4450	stateHandlerMiddleware returns a proxy . Middleware that implements the http . Handler interface .
4451	VerifyMessageProviderRaw implements the ProviderVerifier interface for Pact .
4452	VerifyMessageConsumerRaw verifies a message .
4453	VerifyProvider mocks base method
4454	NewService creates a new mock service
4455	Setup sets up the service manager .
4456	addServiceMonitor adds a service creation monitor to the service manager
4457	removeServiceMonitor starts a service removal monitor .
4458	List returns the list of services .
4459	Command returns the service manager s command .
4460	call mocks base method
4461	DeleteInteractions mocks base method
4462	AddInteraction mocks base method
4463	WritePact mocks base method
4464	ExpectsToReceive sets the expected message description .
4465	WithMetadata sets the metadata of the message .
4466	AsType sets the message type .
4467	UserLogin logs a user into gin .
4468	Region returns the S3 region .
4469	New creates a new S3 instance .
4470	Bucket creates a new bucket with the given name .
4471	PutWriter creates a new io . WriteCloser for the bucket .
4472	url returns a url . URL for the bucket .
4473	SetLogger creates a new internal logger .
4474	InstanceKeys returns the iam instance keys .
4475	EnvKeys returns the AWS environment keys .
4476	Sign signs a request .
4477	getAWSKeys returns the AWS keys .
4478	homeDir returns the home directory of the current user .
4479	ACL adds an ACL to an http . Header .
4480	putPart adds a part to the putter .
4481	abort aborts a multipart upload .
4482	growPartSize returns true if the given part size is larger than the given size .
4483	CheckDisallowed checks if a prefix is allowed .
4484	Process takes a prefix and a spec and processes it .
4485	MustProcess is like Process but panics if there is an error .
4486	toTypeDescription converts a reflect . Type to a string .
4487	Usage writes the usage spec to stdout using DefaultTableFormat .
4488	Usagef writes a usage spec to out .
4489	Usaget executes a template with the given prefix and spec .
4490	Scan scans a value into a Time struct .
4491	Value implements driver . Valuer .
4492	NewTime creates a new Time .
4493	TimeFromPtr converts a time . Time to a Time .
4494	ValueOrZero returns the value of t or zero if it is not valid .
4495	MarshalJSON implements json . Marshaler .
4496	SetValid sets the time . Valid field .
4497	Ptr returns the current time .
4498	NewBool creates a new Bool .
4499	BoolFromPtr converts a pointer to a bool .
4500	UnmarshalJSON deserializes into a Bool instance
4501	UnmarshalText implements the encoding . TextUnmarshaler interface .
4502	MarshalJSON implements the json . Marshaler interface .
4503	SetValid sets the value of a boolean .
4504	NewString creates a new string .
4505	UnmarshalJSON is defined for proper JSON decoding of a String
4506	MarshalText implements encoding . TextMarshaler .
4507	UnmarshalText implements encoding . TextUnmarshaler .
4508	SetValid sets the Valid field s value .
4509	StringFromPtr converts a pointer to a string .
4510	MarshalJSON implements json . Marshaler .
4511	NewInt creates a new Int .
4512	IntFromPtr converts a pointer to an Int .
4513	UnmarshalJSON deserializes into an Int instance
4514	MarshalText marshals an Int to a string .
4515	SetValid sets the value of n as a valid integer .
4516	UnmarshalText unmarshals a string into an Int .
4517	MarshalText implements encoding . TextMarshaler .
4518	SetValid sets the Valid field .
4519	MarshalJSON implements json . Marshaler .
4520	UnmarshalJSON deserializes into a Float instance
4521	UnmarshalText unmarshals a byte slice into a Float
4522	MarshalJSON marshals a Float to JSON .
4523	newGossipChannel returns a new gossip channel
4524	GossipUnicast sends a unicast message to a peer .
4525	GossipBroadcast broadcasts gossip data .
4526	Send sends gossip data to the channel .
4527	SendDown sends data down the channel .
4528	gobEncode encodes a list of items into a byte slice .
4529	newTokenBucket creates a new token bucket .
4530	wait blocks until the bucket is full .
4531	capacityToken returns the number of tokens in the bucket .
4532	PrefixRangeEnd returns the end of a given prefix .
4533	newLocalPeer creates a new local peer .
4534	getConnections returns a set of connections for the local peer .
4535	createConnection creates a connection to a remote peer .
4536	doAddConnection adds a connection to the local peer .
4537	startLocalConnection starts a local connection .
4538	SendProtocolMsg sends a protocol message
4539	NewStatus returns a new Status object .
4540	makePeerStatusSlice returns a slice of PeerStatus .
4541	makeUnicastRouteStatusSlice returns a slice of unicast routes .
4542	makeBroadcastRouteStatusSlice returns a slice of broadcastRouteStatus for the given routes .
4543	makeLocalConnectionStatusSlice returns a slice of LocalConnectionStatus
4544	makeTrustedSubnetsSlice returns a slice of trusted subnets
4545	Range implements etcdserverpb . Ranger interface .
4546	Put implements etcdserverpb . Store .
4547	DeleteRange implements etcdserverpb . etcdStore .
4548	Txn is part of etcdserverpb . Store interface .
4549	Compact implements etcdserverpb .
4550	proposeInternalRaftRequest implements etcdserverpb . Interface .
4551	applyCompare applies a compare to a key - value pair .
4552	Descriptions returns a slice of PeerDescriptions .
4553	OnGC adds a callback to be called when a peer is GC .
4554	OnInvalidateShortIDs registers a callback for Peers . OnInvalidateShortIDs
4555	chooseShortID chooses a short id from a list of peers .
4556	fetchWithDefault fetches a peer by name and adds it to the list of pending peers .
4557	Fetch returns the peer with the given name .
4558	fetchAndAddRef fetches and adds a reference to a peer .
4559	FetchByShortID returns the peer with the given short ID .
4560	GarbageCollect collects garbage from peers .
4561	newRoutes creates a new route for the given peer .
4562	OnChange adds a callback to be called when a route changes .
4563	Unicast returns the unicast hop for the given peer name .
4564	UnicastAll unicasts all routes to the given peer .
4565	Broadcast returns a list of peers for a given peer name .
4566	BroadcastAll broadcasts all routes to the given peer .
4567	NewPeer creates a new peer .
4568	Register registers a new gossip with the peer .
4569	ReadFrom implements net . Peer . ReadFrom .
4570	WriteTo implements net . Addr . WriteTo .
4571	LocalAddr returns the local address of the peer .
4572	OnGossip implements Peer . OnGossip .
4573	OnGossipBroadcast implements mesh . Peer . OnGossipBroadcast .
4574	OnGossipUnicast is called when a peer receives a gossip unicast .
4575	NewDefaultServer creates a new default server .
4576	PeerNameFromUserInput creates a peer name from a user input .
4577	bytes returns the hexadecimal representation of the peer name .
4578	NewRouter creates a new router .
4579	sendAllGossip sends all gossip to all channels
4580	sendAllGossipDown sends all gossip messages down the router .
4581	broadcastTopologyUpdate broadcasts a topology update to all peers .
4582	OnGossipUnicast is called when a peer receives a gossip unicast .
4583	OnGossipBroadcast is called when a peer receives a gossip broadcast .
4584	Gossip returns a GossipData for the router .
4585	OnGossip applies a topology update to the router .
4586	Encode encodes the topology gossip data .
4587	newState creates a new state .
4588	Merge merges other into st .
4589	mergeReceived merges a set of peers into a single state .
4590	mergeComplete merges a set of peers into a complete state .
4591	OnGossipBroadcast implements the Gossip interface for surrogateGossiper .
4592	OnGossip implements the Gossip interface for surrogateGossiper .
4593	generateKeyPair generates a new key pair .
4594	formSessionKey returns a new session key .
4595	newTCPCryptoState creates a new tcpCryptoState
4596	Send sends a message to the gobTCPSender
4597	Send sends a message with a prefixed length .
4598	Send sends a message to the TCP server
4599	Receive receives a message from the TCP server .
4600	Receive reads a message from the given reader .
4601	Receive implements the Receiver interface .
4602	newPeer creates a new peer .
4603	incr sends an update to the peer .
4604	Gossip returns the peer s GossipData .
4605	OnGossipUnicast calls OnGossipUnicast .
4606	makeRaftPeer creates a new raft peer .
4607	String returns a string representation of the peer .
4608	forEachConnectedPeer calls f for each connected peer .
4609	parsePeerUID parses a string into a peer UID .
4610	Swap swaps two lists of peers .
4611	Less returns true if i is less than j in the list of peers .
4612	doIntro performs a protocol intro .
4613	filterV1Features returns a map of protocolV1 features .
4614	newConnectionMaker creates a new connectionMaker .
4615	connectionAborted returns true if the connection was aborted .
4616	newGossipSender creates a new gossipSender .
4617	Send sends the gossip data to the sender .
4618	Broadcast is part of the Sender interface .
4619	Flush implements the Sender interface .
4620	Sender creates a new gossipSender .
4621	Flush implements the gossip . Sender interface .
4622	findMainPath returns the main path .
4623	Create creates a new channel .
4624	Send sends a message to a channel .
4625	SendJSON sends a JSON value to a client .
4626	remapError remaps an error to an internal . APIError .
4627	NamespacedContext returns a netcontext with the given namespace .
4628	protoToItem converts a MemcacheGetResponse_Item to an Item .
4629	singleError returns a single error .
4630	Get retrieves an item from the cache .
4631	GetMulti retrieves multiple items from the memcache .
4632	Delete deletes a key .
4633	DeleteMulti deletes multiple items from the memcache
4634	Increment increments the value of a key by the given delta .
4635	IncrementExisting increments an existing value .
4636	set sets the value of a memcache request .
4637	Get implements the Codec interface .
4638	Stats returns the statistics for the memcache .
4639	Flush flushes the cache .
4640	RunInBackground executes the given function in background .
4641	List returns a list of modules .
4642	SetNumInstances sets the number of instances for a given module .
4643	Versions returns the versions for a given module .
4644	DefaultVersion returns the default version for the given module .
4645	Start starts a module .
4646	Stop stops a module .
4647	Ancestor sets the query ancestor .
4648	EventualConsistency sets the eventual consistency of the query .
4649	Project appends a list of field names to the query .
4650	Distinct returns a clone of the query .
4651	DistinctOn sets the distinct on field .
4652	KeysOnly sets Query . keysOnly to true .
4653	Limit sets the limit of the query .
4654	Offset sets the offset of the query .
4655	BatchSize sets the batch size of the query .
4656	Start starts the query with the given cursor .
4657	End ends the query with the given cursor .
4658	Count returns the number of items in the query .
4659	Run runs the query .
4660	Next returns the next key in the iterator .
4661	Cursor returns the current cursor of the iterator .
4662	String returns a string representation of the cursor .
4663	DecodeCursor decodes a cursor from a string .
4664	saveEntity saves a struct to a pb . EntityProto
4665	Namespace returns a context that matches the given namespace .
4666	typeof returns the type of the variable with the given name .
4667	dot returns a dot representation of a Type .
4668	joinFunc adds a function to a list of strings .
4669	validPropertyName returns true if name is a valid property name .
4670	getStructCodec returns the struct codec for the given type .
4671	LoadStruct loads a struct from dst .
4672	SaveStruct saves a struct .
4673	ServingURL returns a URL for a given image blob .
4674	DeleteServingURL deletes a service URL .
4675	CurrentOAuth returns the current OAuth user .
4676	OAuthConsumerKey returns the OAuthConsumerKey field .
4677	String returns a string representation of a User .
4678	LoginURL returns the login URL for the given destination .
4679	LoginURLFederated returns the login URL for the given destination .
4680	LogoutURL creates a new logout URL .
4681	insertContext inserts ctx into f .
4682	NewClient creates a new Remote API client .
4683	NewContext creates a new context .
4684	NewRemoteContext creates a new remote context .
4685	Debugf logs a message with format .
4686	guestbookKey returns a new guestbook key .
4687	toRetryParameters converts RetryOptions to TaskQueueRetryParameters .
4688	NewPOSTTask creates a new POST task .
4689	ParseRequestHeaders parses an http . Header into a RequestHeaders struct .
4690	Add adds a task to the task queue .
4691	AddMulti adds multiple tasks to a task queue .
4692	Delete deletes a task from the given queue .
4693	DeleteMulti deletes multiple tasks .
4694	Lease leases a task .
4695	LeaseByTag leases a task by its tag .
4696	Purge purges a task queue .
4697	ModifyLease modifies a task lease .
4698	QueueStats returns stats for the given queues .
4699	IsTimeoutError returns true if the given error is a timeout error .
4700	Func creates a new function .
4701	Task implements the taskqueue . Function interface .
4702	RequestHeaders retrieves the RequestHeaders field from the given context .
4703	WithContext returns a context with the given parent and request .
4704	WithAPICallFunc adds an APICallFunc to the context .
4705	APICall executes an API call .
4706	ModuleHostname returns the hostname of the given module .
4707	AccessToken returns the access token and the expiry time .
4708	PublicCertificates returns a list of public certificates .
4709	ServiceAccount returns the name of the service account .
4710	SignBytes signs an app with the given bytes .
4711	fetch fetches data from the blobstore .
4712	seek returns the first value at the given offset .
4713	multiKeyToProto converts a key slice to a protobuf .
4714	referenceValueToKey converts a PropertyValue_ReferenceValue to a Key
4715	keyToReferenceValue converts a key to a PropertyValue_ReferenceValue .
4716	Put stores a key in src .
4717	PutMulti stores a single key in src .
4718	Delete deletes a key .
4719	DeleteMulti deletes a single key .
4720	deploy deploys a command .
4721	Next returns the next record in the result .
4722	protoToAppLogs converts pb . LogLines to AppLogs .
4723	protoToRecord converts a protobuf request log to a Record .
4724	Run executes the query .
4725	run executes the Result .
4726	Current returns the current user .
4727	IsAdmin returns true if the user is an admin .
4728	isErrFieldMismatch returns true if the error is an ErrFieldMismatch .
4729	Stat returns the blobInfo for the given blob .
4730	Send sends a blob to Google App Engine .
4731	UploadURL creates a new upload URL .
4732	Delete deletes a single blob .
4733	DeleteMulti deletes multiple blobs .
4734	NewReader creates a new blob reader .
4735	Handle handles a chat message .
4736	Send sends a message
4737	Invite invites a user .
4738	Send sends a presence .
4739	GetPresence returns the presence of a given Jid .
4740	GetPresenceMulti returns a list of all presences for a given Jid .
4741	newStructFLS creates a new FieldLoadSaver for a struct .
4742	SaveStruct saves a struct .
4743	Namespaces returns a list of namespaces .
4744	Kinds returns a list of all keys of a given kind .
4745	RunInTransaction runs the given function in a transaction .
4746	imports returns true if a file imports the specified path .
4747	importSpec returns the import spec for the given file or nil if the file does not exist .
4748	declImports returns true if a GenDecl is an import spec .
4749	isPkgDot returns true if the expression is a pkg dot .
4750	isTopName returns true if n is the top name of the expression .
4751	isName returns true if the expression is named name .
4752	isCall returns true if t is a call expression .
4753	refersTo returns true if n is a reference to x .
4754	isEmptyString returns true if n is an empty string .
4755	countUses returns the number of times x is used in scope .
4756	assignsTo returns true if x is assigned to the given scope .
4757	newPkgDot creates a new selector expression for a given package .
4758	renameTop renames a top - level file .
4759	matchLen returns the length of x and y .
4760	deleteImport deletes an import from the given file .
4761	rewriteImport rewrites an import .
4762	DefaultTicket returns the default ticket for the application .
4763	flushLog flushes all pending logs . If force is true all pending logs will be flushed .
4764	withDeadline returns a context with the given deadline .
4765	KeepAlive keeps the connection alive .
4766	applyTransaction applies a transaction to a protobuf message .
4767	analyze creates a new app from a list of tags .
4768	buildContext returns a new build . Context .
4769	synthesizeMain synthesizes app_main . go .
4770	findInGopath finds a package in the given gopath .
4771	copyTree copies a tree from dstDir to srcDir .
4772	copyFile copies the contents of src to tw .
4773	checkMain checks if the app s main package is valid .
4774	isMain returns true if the function is the main function .
4775	readFile reads a file .
4776	initField initializes a reflect . Value at the given index .
4777	loadEntity loads a struct from src into dst .
4778	validIndexNameOrDocID returns true if s is a valid index name or document ID .
4779	Open opens an index with the given name .
4780	Put adds a new entry to the index .
4781	Get retrieves a document from the index .
4782	Delete deletes an item from the index .
4783	DeleteMulti deletes multiple documents .
4784	Search returns an Iterator that searches the index for the given query .
4785	fetchMore fetches more items from the iterator .
4786	Next returns the next document in the iterator .
4787	Facets returns all the facets in the iterator .
4788	DefaultBucketName returns the default bucket name for the app .
4789	valid returns true if the key is valid .
4790	Equal returns true if two keys are equal .
4791	root returns the root of the key .
4792	marshal writes the key to b .
4793	String returns a string representation of a Key .
4794	Encode returns a base64 encoded string representation of the key .
4795	DecodeKey decodes a base64 encoded key .
4796	NewIncompleteKey creates a new incomplete key .
4797	NewKey creates a new Key .
4798	AllocateIDs returns the low and high allocation IDs for the given kind and parent .
4799	IsOverQuota returns true if the error is an internal . CallError .
4800	ClassicContextFromContext converts a netcontext to an appengine . Context .
4801	Send sends a message .
4802	SendToAdmins sends a message to administrators .
4803	Failures returns the number of failed tests .
4804	decodeFieldNumberAndTyp3 decodes the field number and typ3 from bz .
4805	checkTyp3 returns an error if the type is not typWanted .
4806	decodeTyp3 decodes a typ3 from bz .
4807	NewPrefixBytes creates a new PrefixBytes
4808	getLengthStr returns the string representation of a TypeInfo .
4809	collectImplementers_nolock collects Implementers_nolock from concreteInfos .
4810	checkConflictsInPrio_nolock returns an error if iinfo conflicts with other implementations .
4811	constructConcreteType constructs a concrete type from a TypeInfo .
4812	MarshalBinaryLengthPrefixedWriter implements io . Marshaler for Codec .
4813	MarshalBinaryBare implements the encoding . BinaryMarshaler interface
4814	UnmarshalBinaryLengthPrefixed implements the Unmarshaler interface for Codec .
4815	UnmarshalBinaryBare implements the encoding . BinaryUnmarshaler interface .
4816	MustMarshalJSON implements the json . Marshaler interface .
4817	MustUnmarshalJSON implements the json . Unmarshaler interface for Codec .
4818	MarshalJSONIndent implements the json . Marshaler interface .
4819	newDataReader creates a new internalDataReader .
4820	Read reads data from the reader .
4821	ListenAndServeTLS listens on a tcp server and serves TLS certificates .
4822	Produce implements the Producer interface for ProducerFunc .
4823	PromoteHandlerFunc creates a new handler that implements the PromoteHandler interface .
4824	Serve registers a handler for the given listener .
4825	Serve accepts connections from a listener and handles them .
4826	Fail prints the error message to stderr and exits .
4827	WriteUsage writes usage information to w .
4828	WriteHelp writes help to w .
4829	MustParse creates a new Parser .
4830	Parse parses config into dest .
4831	walkFields walks all fields of a struct .
4832	Parse parses the given args .
4833	setSlice sets a slice of values to dest .
4834	canParse returns the parseable boolean and multiple booleans of a type .
4835	isBoolean returns true if the type is a boolean .
4836	NewFromMap creates a new Tree from a map .
4837	Insert inserts a new value into the tree .
4838	Delete deletes a node from the tree .
4839	DeletePrefix removes a prefix from the tree .
4840	deletePrefix removes the node with the given prefix from the tree .
4841	Get returns the value for s . If s is not a leaf it returns nil false .
4842	LongestPrefix returns the longest prefix in the tree .
4843	Minimum returns the minimum node in the tree .
4844	WalkPrefix walks the tree based on the given prefix .
4845	recursiveWalk performs a recursive walk .
4846	ToMap converts the Tree to a map .
4847	checkip returns iptype ipnum and ipindex .
4848	readuint32 reads a uint32 from disk .
4849	readuint128 reads a uint32 from disk .
4850	loadmessage returns a copy of the given message .
4851	Printrecord prints an IP2Locationrecord
4852	Main draws a Gopher .
4853	SaveToPdfFile saves a document to a file
4854	CubicCurveTo appends the CubicCurveToCmp to the path .
4855	ArcTo moves the path from startAngle to startAngle .
4856	String returns a string representation of the path .
4857	VerticalFlip rotates the path vertically .
4858	NewGlyphCache creates a new GlyphCacheImp
4859	Fetch retrieves a Glyph from the cache .
4860	renderGlyph renders a Glyph .
4861	Copy returns a copy of g .
4862	Fill fills the Glyph with the given values .
4863	Main is the main draw function .
4864	Draw draws a line from x to y .
4865	Paint paints a raster . Span .
4866	SetColor sets the color of the painter .
4867	NewPainter creates a new Painter .
4868	GetStringBounds returns the bounds of a string .
4869	recalc recalculates the current font size .
4870	SetFont sets the current font .
4871	ClearRect clears the rectangle .
4872	drawString draws a string .
4873	newGroup creates a new Group based on the drawType .
4874	newMask creates a new mask .
4875	embedSvgFont embeds a font into the context .
4876	TraceQuad takes a Liner and a quad and a flattening threshold .
4877	GetFontName returns the name of the font .
4878	NewStackGraphicContext creates a new StackGraphicContext
4879	NewFolderFontCache creates a new FolderFontCache .
4880	NewSyncFolderFontCache creates a new SyncFolderFontCache .
4881	Main renders a Gopher2 image .
4882	NewPdf creates a new gofpdf . Fpdf .
4883	clearRect clears the rectangle .
4884	NewGraphicContext creates a new GraphicContext .
4885	Clear clears the current page .
4886	GetStringBounds returns the bounds of a string .
4887	CreateStringPath creates a new path for a string .
4888	FillStringAt fills a string at the given x and y coordinates .
4889	SetStrokeColor sets the stroke color .
4890	SetFillColor sets the fill color .
4891	SetLineDash is part of the context . GraphicContext interface .
4892	SetLineWidth sets the width of a line .
4893	Main returns a human - readable description of the world .
4894	Draw draws a text .
4895	SaveToPngFile saves m to a png file .
4896	LoadFromPngFile loads an image from a png file .
4897	Resource returns a string representation of a resource .
4898	Output returns a string describing the output of a file .
4899	Main renders a tiger . ps image .
4900	Draw draws a file .
4901	Main returns the geometry of ext .
4902	Bubble draws a bubble .
4903	Dash draws a dashed image .
4904	CubicCurve draws a CubicCurve .
4905	FillStroke fills a stroke .
4906	FillStyle fills x and y with the given style .
4907	PathTransform performs a path transformation .
4908	Star draws a star .
4909	Draw draws a rectangle with the given width and height .
4910	ConvertPath converts a path to a pdf .
4911	Main draws a linecapjoin .
4912	Draw draws a line with the given cap and join .
4913	DrawContour draws a contour from ps .
4914	Flatten flattens a path using the given flattener .
4915	Clear clears the graphic context .
4916	ClearRect clears the rectangle .
4917	DrawImage draws an image from src to dest .
4918	Main draws a png image .
4919	Draw draws a line from a png file .
4920	Draw draws the given coordinates .
4921	ChecksumString32S returns the checksum of a string .
4922	ChecksumString64S returns the checksum of a string .
4923	NewS32 creates a new XXHash32 with the given seed .
4924	NewS64 creates a new XXHash64 with the given seed .
4925	round64 rounds a 64 - bit integer to a given value .
4926	Checksum32S computes the checksum of a 32 - bit integer .
4927	Checksum64S returns the checksum of a byte slice .
4928	getStage returns the current state of the daemon s stage .
4929	New creates a new Glg .
4930	Get returns a new Glg instance .
4931	SetMode sets the logger mode .
4932	SetPrefix adds a prefix to g .
4933	GetCurrentMode returns the current mode .
4934	InitWriter initializes g . Writer .
4935	SetWriter sets the writer of the logger .
4936	SetLevelColor sets the color of the log level .
4937	SetLevelWriter sets the writer to the given level .
4938	AddStdLevel adds a level to the stdout .
4939	EnableColor sets g . logger . Range to LEVEL .
4940	EnableLevelColor sets the LEVEL color .
4941	DisableLevelColor disables the color at LEVEL .
4942	RawString returns a string representation of the data .
4943	TagStringToLevel converts a string to LEVEL
4944	Println prints the given value to glg . Out .
4945	Fatal exits the Glg and panics if there is an error .
4946	Fatalf is like Fatal but panics if there is an error .
4947	isModeEnable returns true if the current mode is enabled .
4948	CaptureMetrics is a wrapper around CaptureMetricsFn .
4949	get returns the value of a given key at the given position .
4950	Save writes the data to out .
4951	SaveToFile saves the data to a file
4952	Load loads data from io . Reader .
4953	LoadFromFile loads data from a file
4954	Key returns the key for the given id .
4955	Value returns the value associated with the given ID or ErrNoValue if the value does not exist .
4956	Delete removes a key from the tree .
4957	Set sets the version .
4958	Compare compares two versions .
4959	Slice returns a slice of the major minor and patch versions .
4960	BumpMajor sets the major and minor values of the version .
4961	BumpMinor sets v . Minor . Patch . Metadata .
4962	BumpPatch adds a patch to the version .
4963	validateIdentifier checks if the given identifier is a valid semver identifier .
4964	newStream creates a new stream .
4965	addSubscriber adds a subscriber to the stream .
4966	New creates a new server .
4967	Close shuts down the server .
4968	CreateStream creates a new stream with the given id .
4969	RemoveStream removes a stream from the server .
4970	StreamExists returns true if a stream with the given id exists .
4971	Publish publishes an event to the stream .
4972	NewClient creates a new Client .
4973	Subscribe sends a stream of events to the handler .
4974	SubscribeChan subscribes to an event stream .
4975	SubscribeRaw sends a raw event to the given handler .
4976	Unsubscribe unsubscribes from the given channel .
4977	NewEventStreamReader creates a new EventStreamReader .
4978	ReadEvent reads an event from the stream .
4979	HTTPHandler implements the http . Handler interface .
4980	Add adds an event to the log .
4981	Replay replays the event .
4982	readKey reads a private key from a file .
4983	writeKey writes a private key to a file .
4984	anyKey returns a crypto . Signer for a given filename .
4985	sameDir returns the same directory as existing .
4986	printAccount prints the account information to w .
4987	tmpl parses a template and writes it to w .
4988	printUsage prints a usage template to w .
4989	FromRequest converts an http . Request into a string .
4990	Do implements Command . Do .
4991	Do implements the DisableParams interface .
4992	Do implements the RemoveDOMStorageItemParams interface .
4993	Do implements the SetDOMStorageItemParams interface .
4994	Do implements the DeliverPushMessageParams interface .
4995	Do implements CommandDispatchSyncEvent .
4996	Do implements InspectWorkerParams .
4997	Do executes the SetForceUpdateOnPageLoad params
4998	Do implements CommandSkipWaitingParams
4999	Do implements StartWorkerParams .
5000	Do implements the StopAllWorkersParams interface .
5001	Do implements CommandStopWorker .
5002	Do implements the UnregisterParams interface .
5003	Do executes the update registration command .
5004	Do implements BindParams .
5005	Do implements CommandUnbindParams .
5006	Error implements the error interface for ExceptionDetails .
5007	Do implements CommandReleaseAnimations .
5008	Do implements the SeekAnimationsParams interface .
5009	Do implements CommandSetPausedParams .
5010	Do implements the SetPlaybackRateParams interface .
5011	Do implements the SetTimingParams interface .
5012	Do implements PrepareForLeakDetectionParams .
5013	Do implements CommandForciblyPurgeJavaScriptMemoryParams .
5014	Do executes the SetPressureNotificationsSuppressed command .
5015	Do executes the SimulatePressureNotification command .
5016	WithSamplingInterval adds the sampling interval to the start sampling params
5017	WithSuppressRandomness adds the suppressRandomness to the start sampling params
5018	Do implements StartSamplingParams .
5019	Do implements the StopSamplingParams interface
5020	Do executes the ClearDeviceOrientationOverride command .
5021	Do executes the SetDeviceOrientationOverride command .
5022	Do executes the StartViolationsReport command .
5023	Do executes the StopViolationsReport command .
5024	String returns a string representation of a Modifier .
5025	WithNodeID adds the nodeID to the get partial ax tree params
5026	WithBackendNodeID adds the backendNodeID to the get partial ax tree params
5027	WithObjectID adds the objectID to the get partial ax tree params
5028	WithFetchRelatives adds the fetchRelatives to the get partial ax tree params
5029	Do implements CommandSetTimeDomainParams .
5030	WithClipRect adds the clipRect to the profile snapshot params
5031	Do implements the ReleaseSnapshotParams interface .
5032	Do implements CommandClearObjectStore .
5033	Do implements the DeleteDatabaseParams interface .
5034	Do implements the DeleteObjectStoreEntries params .
5035	WithKeyRange adds the KeyRange to the request data params
5036	Do implements the SetSamplingIntervalParams interface .
5037	Do implements StartParams .
5038	WithCallCount adds the callCount to the start precision coverage params
5039	WithDetailed adds the detailed to the start precision coverage params
5040	Do implements StartPreciseCoverageParams .
5041	Do implements StartTypeProfileParams .
5042	Do implements the StopPreciseCoverageParams interface
5043	Do implements the StopTypeProfileParams interface
5044	Do implements the SetIgnoreCertificateParams interface .
5045	Do implements the AddInspectedHeapObjectParams interface .
5046	Do implements CollectGarbageParams .
5047	WithSamplingInterval adds the sampling interval to the start sampling params
5048	Do executes the StartTrackingHeapObjects command .
5049	WithReportProgress adds the reportProgress option to the stop tracking heap objects params
5050	Do implements CommandStopTrackingHeapObjects .
5051	WithReportProgress adds the reportProgress to the take heap snapshot params
5052	Do executes the TakeHeapSnapshot command .
5053	WithBrowserContextID adds the browser context to the grant permissions params
5054	Do executes the GrantPermissions command .
5055	WithBrowserContextID adds the BrowserContextID to the reset permissions params
5056	Do executes the ResetPermissions command .
5057	Do executes the CrashParams .
5058	Do implements CrashGpuProcessParams .
5059	WithQuery adds the query to the get histograms params
5060	WithTargetID adds the TargetID to the get window for target params
5061	Do executes the SetWindowBounds command .
5062	WithImage adds the image to the set dock tile params
5063	Do implements the SetDockTileParams interface .
5064	Do implements the DeleteCacheParams interface
5065	Do implements the DeleteEntryParams interface .
5066	WithPathFilter adds the pathFilter to the request entries params
5067	Do implements the DiscardSearchParams interface .
5068	Do executes the FocusParams .
5069	Do implements the MarkUndoableStateParams interface .
5070	WithIncludeUserAgentShadowDOM adds the includeUserAgentShadowDOM to the perform search params
5071	Do implements RedoParams .
5072	Do implements the RemoveAttributeParams interface .
5073	Do implements the RemoveNodeParams interface .
5074	Do implements the RequestChildNodesParams interface .
5075	WithNodeID adds the nodeID to the resolve node params
5076	WithBackendNodeID adds the backendNodeID to the resolve node params
5077	WithExecutionContextID adds the execution context to the resolve node params
5078	Do implements CommandSetAttributeValueParams .
5079	WithName adds the name to the set attributes as text params
5080	Do implements the SetAttributesAsTextParams interface .
5081	Do implements the SetFileInputFilesParams interface .
5082	Do implements the SetInspectedNodeParams interface .
5083	Do implements the SetNodeValueParams interface .
5084	Do implements the SetOuterHTMLParams interface .
5085	Do implements the UndoParams interface .
5086	Do implements CommandForcePseudoStateParams
5087	Do implements the SetEffectivePropertyValueForNodeParams interface .
5088	Do implements the StartRuleUsageTrackingParams interface
5089	Do implements CloseParams .
5090	Do executes the ClearDataForOrigin command .
5091	Do implements the TrackCacheStorageForOriginParams interface .
5092	Do implements TrackIndexedDBForOriginParams .
5093	Do implements the UntrackCacheStorageForOriginParams interface .
5094	Do implements UntrackIndexedDBForOriginParams .
5095	Do implements the HideHighlightParams interface .
5096	Do implements the HighlightFrameParams interface .
5097	WithNodeID adds the nodeID to the highlight node params
5098	WithBackendNodeID adds the backendNodeID to the highlight node params
5099	WithObjectID adds the objectID to the highlight node params
5100	WithSelector adds the selector to the highlight node params
5101	Do implements the HighlightNodeParams interface .
5102	Do executes the HighlightQuad command .
5103	Do implements the HighlightRectParams interface .
5104	WithHighlightConfig adds the highlightConfig to the set inspect mode params
5105	Do executes the SetInspectMode command .
5106	Do implements the SetShowAdHighlightsParams interface .
5107	WithMessage adds the message to the set pause in debugger message params
5108	Do executes the SetPausedInDebuggerMessage params .
5109	Do executes the SetShowDebugBorders command .
5110	Do executes the SetShowFPSCounter command .
5111	Do implements the SetShowPaintRectsParams interface .
5112	Do implements the SetShowScrollBottleneckRectsParams interface .
5113	Do implements the SetShowHitTestBordersParams interface .
5114	Do executes the SetShowViewportSizeOnResizeParams .
5115	Do executes the ClearBrowserCache command .
5116	Do implements the ClearBrowserCookiesParams interface
5117	WithErrorReason adds the ErrorReason to the continue intercepted request params
5118	WithRawResponse adds the rawResponse to the continue intercepted request params
5119	WithURL adds the URL to the continue intercepted request params
5120	WithMethod adds the method to the continue intercepted request params
5121	WithPostData adds the postData to the continue intercepted request params
5122	WithHeaders adds the headers to the continue intercepted request params
5123	WithAuthChallengeResponse adds the authChallengeResponse to the continue intercepted request params
5124	Do executes the ContinueInterceptedRequest command .
5125	WithURL adds the URL to the delete cookies params
5126	WithDomain adds the domain to the delete cookies params
5127	WithPath adds the path to the delete cookies params
5128	Do implements the DeleteCookies params .
5129	WithConnectionType adds the connectionType to the emulate network conditions params
5130	Do executes the EmulateNetworkConditions command .
5131	Do implements the EnableParams interface .
5132	WithUrls adds the urls to the get cookies params
5133	Do executes the ReplayXHR command .
5134	Do implements CommandSetBlockedURLSParams .
5135	Do implements CommandSetBypassServiceWorker .
5136	Do executes the SetCacheDisabled command .
5137	WithURL adds the URL to the set cookie params
5138	WithDomain adds the domain to the set cookies params
5139	WithPath adds the path to the set cookies params
5140	WithSecure adds the security to the set cookies params
5141	WithHTTPOnly adds the HTTPOnly option to the set cookies params
5142	WithSameSite adds the same site to the set cookies params
5143	WithExpires adds the expires to the set cookie params
5144	Do executes the SetCookies command .
5145	Do implements the SetDataSizeLimitsForTestParams interface .
5146	Do executes the SetExtraHTTPHeaders command .
5147	Do executes the SetRequestInterception params .
5148	Do implements the ClearDeviceMetricsOverrideParams interface .
5149	Do executes the ClearGeolocationOverride command .
5150	Do executes the ResetPageScaleFactor command .
5151	Do implements CommandSetFocusEmulationEnabled .
5152	Do implements the SetCPUThrottlingRateParams interface .
5153	WithColor adds the color to the set default background color override params
5154	Do implements the SetDefaultBackgroundColorOverrideParams interface .
5155	WithScale adds the scale to the set device metrics override params
5156	WithDontSetVisibleSize adds the dont set visible size option to the set device metrics override params
5157	WithScreenOrientation adds the screen orientation to the set device metrics override params
5158	Do executes the SetDeviceMetricsOverride command .
5159	Do implements CommandSetScrollbarsHiddenParams .
5160	Do implements CommandSetDocumentCookieDisabledParams
5161	Do executes the SetEmitTouchEventsForMouse command .
5162	Do implements the SetEmulatedMediaParams interface .
5163	WithLatitude adds the latitude to the set geolocation override params
5164	WithLongitude adds the longitude to the set geolocation override params
5165	WithAccuracy adds the accuracy to the set geolocation override params
5166	Do executes the SetGeolocationOverride command .
5167	Do executes the SetPageScaleFactor command .
5168	Do implements CommandSetScriptExecutionDisabledParams
5169	WithMaxTouchPoints adds the max touch points to the set touch emulation enabled params
5170	Do executes the SetTouchEmulationEnabled command .
5171	WithBudget adds the budget to the set virtual time policy params
5172	WithMaxVirtualTimeTaskStarvationCount adds the max virtual time task startation count to the set virtual time policy params
5173	WithWaitForNavigation adds the waitForNavigation to the set virtual time policy params
5174	WithAcceptLanguage adds the acceptLanguage to the set user agent override params
5175	WithPlatform adds the platform to the set user agent override params
5176	Do implements the SetUserAgentOverrideParams interface .
5177	Do implements CommandDispatchKeyEventParams .
5178	Do implements the InsertTextParams interface .
5179	WithButtons adds the buttons to the dispatch mouse event params
5180	Do implements CommandDispatchMouseEventParams .
5181	Do implements CommandDispatchTouchEvent .
5182	Do implements CommandEmulateTouchFromMouseEvent .
5183	Do executes the SetIgnoreInputEvents command .
5184	Do executes the SynthesizePinchGesture command .
5185	WithXOverscroll adds the xOverscroll to the synthesize scroll gesture params
5186	WithYOverscroll adds the yOverscroll to the synthesize scroll gesture params
5187	Do executes the SynthesizeScrollGesture command .
5188	Do executes the SynthesizeTapGesture command .
5189	Domain returns the domain of the method type .
5190	WithDepth adds the depth to the get event listeners params
5191	Do implements the RemoveDOMBreakpointParams interface .
5192	WithTargetName adds the TargetName to the remove event listener breakpoint params
5193	Do implements the RemoveEventListenerBreakpointParams interface .
5194	Do implements CommandRemoveInstrumentationBreakpoint .
5195	Do implements the RemoveXHRBreakpointParams interface .
5196	Do implements CommandSetDOMBreakpointParams .
5197	Do implements CommandSetEventListenerBreakpoint .
5198	Do implements CommandSetInstrumentationBreakpoint .
5199	Do implements the SetXHRBreakpointParams interface .
5200	WithExecutor returns a context with the given executor .
5201	Execute executes a method in a context .
5202	AttributeValue returns the value of an attribute .
5203	xpath returns the path to the node with the given stopAtDocument and stopAtID .
5204	String returns the string representation of a NodeType .
5205	Do implements the SetSinkToUseParams interface .
5206	Do implements StartTabMirroringParams .
5207	Do implements StopCastingParams .
5208	Do implements StartObservingParams .
5209	Do implements StopObservingParams .
5210	Do implements the SetRecordingParams interface .
5211	Do executes the ClearEvents command .
5212	WithObjectID adds the objectID to the call function on params
5213	WithArguments adds the arguments to the call function on params
5214	WithExecutionContextID adds the executionContextID to the call function on params
5215	WithObjectGroup adds the objectGroup to the call function on params
5216	Do implements the DiscardConsoleEntriesParams interface .
5217	WithContextID adds the contextID to the evaluate params
5218	WithOwnProperties adds the own properties to the get properties params
5219	WithGeneratePreview adds the generatePreview to the get properties params
5220	WithExecutionContextID adds the ExecutionContextID to the global scope names params
5221	WithObjectGroup adds the objectGroup to the query objects params
5222	Do implements the ReleaseObjectParams interface .
5223	Do implements CommandReleaseObjectGroup .
5224	Do implements CommandRunIfWaitingForDebugger .
5225	Do implements the SetCustomObjectFormatterEnabledParams interface .
5226	Do executes the SetMaxCallStackSizeToCapture command .
5227	Do implements CommandTerminateExecutionParams .
5228	Do executes the AddBinding command .
5229	Do implements the RemoveBindingParams interface .
5230	Do implements CommandEnd .
5231	Do implements CommandRecordClockSyncMarker .
5232	WithBufferUsageReportingInterval adds the buffer usage reporting interval to the start parameters
5233	WithNoDisplayUpdates sets the NoDisplayUpdates option .
5234	WithScreenshot adds the screenshot to the begin frame params
5235	Do implements CommandBringToFront .
5236	WithClip adds the clip to the capture screenshot params
5237	WithFromSurface adds the fromSurface option to the capture screenshot params
5238	WithWorldName adds the worldName to the create isolated world params
5239	WithGrantUniveralAccess adds the grantUniveralAccess to the create isolated world params
5240	Do executes the ResetNavigationHistory command .
5241	WithPromptText adds the promptText to the handle JavaScript dialog params
5242	Do implements HandleJavaScriptDialogParams .
5243	WithReferrer adds the referrer to the navigate params
5244	WithTransitionType adds the transitionType to the navigate params
5245	WithFrameID adds the FrameID to the navigate params
5246	Do executes the NavigateToHistoryEntry command .
5247	WithLandscape adds the landscape to the print to pdf params
5248	WithDisplayHeaderFooter adds the display header to the print to pdf params
5249	WithPrintBackground adds the print background to the print to PDF params
5250	WithScale adds the scale to the print to pdf params
5251	WithPaperWidth adds the paper width to the print to PDF params
5252	WithPaperHeight adds the paperHeight to the print to PDF params
5253	WithIgnoreInvalidPageRanges adds the ignoreInvalidPageRanges option to the print to pdf params
5254	WithFooterTemplate adds the footerTemplate to the print to pdf params
5255	WithPreferCSSPageSize adds the prefer CSSSPageSize to the print to PDF params
5256	WithScriptToEvaluateOnLoad adds the script to evaluate on load to the reload params
5257	Do implements the ReloadParams interface .
5258	Do executes the RemoveScriptToEvaluateOnNewDocument params .
5259	Do executes the CommandScreencastFrameAck
5260	Do executes the SetAdBlockingEnabledParams .
5261	Do implements the SetBypassCSPParams interface .
5262	Do implements the SetFontFamiliesParams interface .
5263	Do executes the SetFontSizes command .
5264	Do implements CommandSetDocumentContentParams .
5265	WithDownloadPath adds the downloadPath to the set download behavior params
5266	Do executes the SetDownloadBehavior command .
5267	Do executes the SetLifecycleEventsEnabled command .
5268	WithFormat adds the format to the start screencast params
5269	WithMaxWidth adds the maxWidth to the start screencast params
5270	WithMaxHeight adds the maxHeight to the start screencast params
5271	WithEveryNthFrame adds the EveryNthFrame to the start screencast params
5272	Do executes the StartScreencast command .
5273	Do implements StopLoadingParams .
5274	Do executes the SetWebLifecycleState command .
5275	Do implements the StopScreencastParams interface .
5276	Do executes the SetProduceCompilationCache command .
5277	Do executes the AddCompilationCache command .
5278	Do executes the ClearCompilationCache command .
5279	WithGroup adds the group to the generate test report params
5280	Do executes the WaitForDebugger command .
5281	Do implements the ActiveTargetParams interface .
5282	WithBindingName adds the bindingName to the expose dev tools protocol params
5283	Do executes the ExposeDevToolsProtocolParams .
5284	WithBrowserContextID adds the BrowserContextID to the create target params
5285	WithSessionID adds the sessionID to the detachFromTargetParams
5286	Do executes the DetachFromTarget command .
5287	Do implements the DisposeBrowserContextParams interface .
5288	WithSessionID adds the sessionID to the send message to target params
5289	Do implements the SendMessageToTargetParams interface .
5290	Do executes the SetAutoAttachParams .
5291	Do implements the SetDiscoverTargetsParams interface .
5292	Do executes the SetRemoteLocations command .
5293	WithPatterns adds the patterns to the enable params
5294	WithHandleAuthRequests adds the handle auth requests to the enable params
5295	Do executes the FailRequestParams .
5296	WithBody adds the body to the fulfill request params
5297	WithResponsePhrase adds the responsePhrase to the fulfill request params
5298	Do executes the FulfillRequest command .
5299	WithURL adds the URL to the continue request params
5300	WithMethod adds the method to the continue request params
5301	WithPostData adds the postData to the continue request params
5302	WithHeaders adds the headers to the continue request params
5303	Do implements the ContinueRequestParams interface .
5304	Do implements the ContinueWithAuthParams interface .
5305	Do executes the ContinueToLocation command .
5306	WithIncludeCommandLineAPI adds the command line API to the evaluate on call frame params
5307	Do implements the PauseParams interface .
5308	Do performs the PauseOnAsyncCall action .
5309	Do implements the RemoveBreakpointParams interface .
5310	Do executes the resume command .
5311	Do executes the SetAsyncCallStackDepth command .
5312	Do executes the SetBlackboxPatterns command .
5313	Do executes the SetBlackboxedRanges command .
5314	WithURL adds the URL to the set breakpoint by URL params
5315	WithURLRegex adds the URLRegex to the set breakpoint by URL params
5316	WithScriptHash adds the scriptHash to the set breakpoint by URL params
5317	WithColumnNumber adds the columnNumber to the set breakpoint by URL params
5318	WithCondition adds the condition to the set breakpoint on function call params
5319	Do executes the SetBreakpointsActive command .
5320	Do executes the SetPauseOnExceptions command .
5321	Do executes the SetReturnValueParams .
5322	WithDryRun adds the dryRun option to the set script source params
5323	Do executes the SetSkipAllPauses command .
5324	Do executes the SetVariableValue command .
5325	WithBreakOnAsyncCall adds the breakOnAsyncCall to the step into params
5326	Do implements StepIntoParams .
5327	Do implements StepOutParams .
5328	Do implements StepOverParams .
5329	Listen implements the NotifyBundle interface .
5330	ListenClose implements NotifyBundle .
5331	Connected implements NotifyBundle .
5332	Disconnected implements NotifyBundle .
5333	OpenedStream implements NotifyBundle .
5334	ClosedStream implements NotifyBundle .
5335	WithNoDial returns a context with the value for no dial set .
5336	GetNoDial returns the value of NoDial if set . Otherwise returns false .
5337	WithDialPeerTimeout returns a context with the value for dialPeerTimeout set
5338	Open opens a connection with the given name .
5339	Prevpos returns the previous position of the buffer .
5340	Last returns the last element in the fixed size ringbuf .
5341	DeleteMostRecentBytes removes the most recent bytes from the buffer .
5342	NewFloat64RingBuf creates a new Float64RingBuf .
5343	TwoContig returns the first and second tigs of the ring buffer .
5344	Earliest returns the earliest float64 in the buffer .
5345	Values returns a slice of float64 values .
5346	NewAtomicFixedSizeRingBuf creates a new AtomicFixedSizeRingBuf .
5347	Reset resets the atomic fixed - size ringbuf .
5348	NewPointerRingBuf creates a new PointerRingBuf .
5349	TwoContig returns the first and second tigs of the buffer .
5350	NumPage returns the number of pages in the trailer .
5351	Font returns the Font associated with the page .
5352	Width returns the width of the font .
5353	Encoder returns the text encoder for the font .
5354	Interpret reads a value from strm and calls do on it .
5355	Open opens a file and returns a Reader .
5356	NewReader creates a new io . Reader with the given size .
5357	NewReaderEncrypted creates a new encrypted PDF reader .
5358	Trailer returns the value of the trailer .
5359	Kind returns the value s type .
5360	newBuffer creates a new buffer .
5361	Paginate generates pagination info for a given page .
5362	CascadeDelete deletes a document from a Cascade .
5363	cascadeDeleteWithConfig updates the CascadeConfig .
5364	cascadeSaveWithConfig saves a document with a CascadeConfig .
5365	MapFromCascadeProperties returns a map from a CascadeProperties document .
5366	Connect establishes a connection to the server .
5367	lowerInitial lowers the initial value of a string .
5368	Find creates a new ResultSet with the given query .
5369	RawInformationQuery prints a raw information query .
5370	NewClient creates a new Client .
5371	Close closes the connection .
5372	startTLSIfRequired starts a TLS connection if required .
5373	startStream starts a stream .
5374	IsEncrypted returns true if the connection is encrypted .
5375	Recv returns a stanza representation of a chat message .
5376	Send sends a message to the server .
5377	SendOrg sends a message to an organization .
5378	SendKeepAlive sends a keep alive message .
5379	SendHtml sends a HTML message .
5380	nextStart returns the next xml . StartElement from p .
5381	JoinProtectedMUC joins a protected MUC .
5382	LeaveMUC leaves the MUC with the given jid
5383	AttachBuffer attaches a buffer to the message .
5384	Attach attaches a file to the message .
5385	Inline attaches a file to the message .
5386	AddHeader adds a new header to the message .
5387	Tolist returns a slice of string representations of a message .
5388	Bytes returns a byte slice of the message .
5389	Send sends a message to the given address .
5390	GetHeader returns the header by name .
5391	GetHeaderValues returns the header values for the given name .
5392	SetHeader adds a new header to the envelope .
5393	AddHeader adds a header to the envelope .
5394	DeleteHeader removes a header from the envelope .
5395	AddressList returns a list of addresses for the given key .
5396	Clone returns a deep copy of the envelope .
5397	ReadEnvelope reads an envelope from r .
5398	EnvelopeFromPart creates an envelope from a given part .
5399	parseTextOnlyBody is a helper function to parse text only body .
5400	parseMultiPartBody parses a multipart body .
5401	matchHTMLBodyPart returns true if the part matches the HTML body part .
5402	ensureCommaDelimitedAddresses ensures that s is a comma delimited list of addresses .
5403	Date sets the date of the MailBuilder .
5404	From creates a new MailBuilder from the given name and address .
5405	Subject sets the subject of the mail .
5406	To adds a new address to the MailBuilder .
5407	ToAddrs adds a list of addresses to the MailBuilder .
5408	CC creates a new MailBuilder with the given name and address .
5409	CCAddrs sets the CCAddrs field of the MailBuilder .
5410	ReplyTo creates a MailBuilder that sends a reply to the given address .
5411	Header adds a MIME header to the MailBuilder .
5412	AddAttachment adds a new attachment to the MailBuilder .
5413	AddFileAttachment adds a file attachment to the MailBuilder
5414	AddInline adds an inline part to the MailBuilder .
5415	Equals returns true if two MailBuilders are equal .
5416	Encode writes the part to the given writer .
5417	encodeHeader encodes the header to a bufio . Writer
5418	encodeContent writes the content of the part to b .
5419	selectTransferEncoding selects the transfer encoding for the given content . If quoteLineBreaks is true the transfer encoding will be used .
5420	setParamValue sets the value of a parameter .
5421	NewBase64Cleaner creates a new Base64Cleaner .
5422	decodeToUTF8Base64Header decodes input to UTF - 8 base64 header .
5423	parseMediaType parses a media type .
5424	fixMangledMediaType is a helper function to fix a mangled media type .
5425	detectMultipartMessage returns true if the part contains a multipart message .
5426	detectBinaryBody returns true if the part is a binary body .
5427	BreadthMatchFirst returns the first part that matches the given matcher .
5428	BreadthMatchAll returns a slice of all the parts that match the given matcher .
5429	DepthMatchFirst returns the first part that matches the given matcher or nil if there is no match .
5430	DepthMatchAll returns a slice of all the parts that match the given matcher .
5431	ToASCII converts string to ASCII string
5432	NewPart creates a new Part .
5433	AddChild adds a new child to the Part .
5434	TextContent returns true if the part contains text .
5435	setupHeaders sets up the MIME part headers .
5436	setupContentHeaders sets up the content headers for the part .
5437	convertFromDetectedCharset converts a charset to an io . Reader .
5438	Clone creates a deep copy of a Part .
5439	ReadParts reads the parts from r .
5440	parseParts parses a Part into a bufio . Reader .
5441	UUID returns a uuid string .
5442	NewQPCleaner creates a new QPCleaner .
5443	Error returns a string representation of the error .
5444	addError adds an error to the part .
5445	addWarning adds a warning to the part .
5446	Wrap wraps a string into a byte slice .
5447	ConvertToUTF8String converts charset to utf8 string
5448	JoinAddress returns a string representation of a mail . Address .
5449	Printf calls fmt . Printf .
5450	EnvelopeToMarkdown writes an enmime . Envelope to w .
5451	FormatPart writes a part to w .
5452	newBoundaryReader creates a new boundary reader .
5453	Read implements the io . Reader interface .
5454	Next reads the next line from the reader .
5455	Parse parses a byte slice and returns a pointer to it .
5456	Assign assigns a value to a symbol .
5457	NewRClient creates a new RClient .
5458	NewRClientWithAuth creates a new RClient .
5459	Register registers a custom generator with the given identifier .
5460	Fuzz adds a fuzz value to e .
5461	findFakeFunctionFor returns a function that matches the given fako .
5462	Apply applies the given options .
5463	ToOption converts Options to Option .
5464	waitThenClose waits until the event channel is closed .
5465	send sends a query event to the channel .
5466	NewMovingAverage returns a new MovingAverage .
5467	Set sets the value of the variable EWMA .
5468	calcKeys50 calculates the key count for a given pass .
5469	getKeys returns a slice of keys from the archive .
5470	checkPassword checks if a password is valid .
5471	parseFileEncryptionRecord parses a file encryption record .
5472	parseEncryptionBlock parses the encryption block .
5473	newArchive50 creates a new fileBlockReader .
5474	Read implements the cipherBlockReader interface .
5475	ReadByte reads a byte from the reader .
5476	newCipherBlockReader creates a new cipherBlockReader .
5477	newAesDecryptReader creates a new cipherBlockReader that decrypts AES data from the given io . Reader .
5478	limitByteReader returns a new limitedByteReader .
5479	Mode implements os . FileHeader .
5480	nextBlockInFile returns the next block in the file .
5481	next returns the next block in the file .
5482	Read implements the io . Reader interface .
5483	Read implements io . Reader .
5484	Next returns the next file header .
5485	NewReader creates a new io . Reader .
5486	OpenReader opens a volume and returns a ReadCloser .
5487	getV3Filter returns a v3Filter for the given checksum .
5488	init initializes the decoder29 .
5489	readBlockHeader reads a block header .
5490	readCodeLengthTable reads a code length table from br .
5491	shrinkStates shrinks a slice of states to size .
5492	expandStates returns a slice of all the states in the context .
5493	pushByte pushes c to the heap .
5494	succByte returns the byte at index i .
5495	succContext returns the context at index i . If i is 0 nil is returned .
5496	calcAes30Params calculates the aes30 parameters .
5497	parseDosTime parses t into a time . Time .
5498	decodeName decodes a name from a byte slice .
5499	readExtTimes reads the extension times from b .
5500	readBlockHeader reads a block header from the archive .
5501	newArchive15 creates a new fileBlockReader from a bufio . Reader .
5502	readFilter5Data reads the filter5 data from br .
5503	writeByte writes a byte to the window .
5504	copyBytes copies bytes from len to off .
5505	read reads the contents of p into w .
5506	queueFilter adds a new filterBlock to the decoder .
5507	processFilters reads a set of filters from the decoder .
5508	fill fills the decodeReader with filterBlocks .
5509	Read reads from the decoder .
5510	readFull reads full bytes from r .
5511	findSig returns the number of signatures in the given buffer .
5512	execute executes the given command .
5513	newVM creates a new VM .
5514	limitBitReader returns a bitReader that reads n bytes from br .
5515	readUint32 reads a uint32 from the reader .
5516	step3 checks if the word is a snowball word .
5517	Stem converts a word to a snowball word .
5518	step6 checks if the word is a snowball word .
5519	step5 checks if the word is a snowball word .
5520	step2a converts snowballword . SnowballWord to step2a .
5521	step4 checks if the word is a snowball word .
5522	Stem returns a stemmed string for a given word .
5523	step1c returns true if w is a SnowballWord .
5524	step3 returns true if w is a snowballword . SnowballWord .
5525	isStopWord checks if the given word is a stop word .
5526	capitalizeYUI capitalizes a YUI word .
5527	step2 converts a snowballword . SnowballWord into a snowballword .
5528	step3 returns true if word is a snowball word .
5529	step0 checks if the word is a snowball word .
5530	VnvSuffix returns the suffix of word f .
5531	step1 returns true if the snowball word is a snowball word .
5532	step2a converts a snowballword . SnowballWord into a snowballword .
5533	removePerfectiveGerundEnding removes the perfect gerund ending .
5534	removeAdjectivalEnding removes the end of the adjective .
5535	step2b converts a snowballword . SnowballWord into a snowballword .
5536	step4 checks if the word is a snowball word .
5537	step5 returns true if w is a SnowballWord .
5538	Stem returns the stem of a word . If stemStopwWords is true the word will be stopped .
5539	Stem converts a word to a snowball word .
5540	isStopWord checks if the given word is a stop word .
5541	isStopWord checks if the given word is a stop word .
5542	New creates a new SnowballWord .
5543	RemoveLastNRunes removes the last n NRunes .
5544	resetR1R2 resets the word s R1 and R2 positions .
5545	slice returns a slice of runes starting at the given start and ending at the given stop .
5546	FitsInR1 returns true if the word fits in R1 .
5547	FitsInR2 returns true if the word fits in r2 .
5548	FitsInRV returns true if the word fits in an RV .
5549	FirstPrefix returns the first rune in a list of prefixes .
5550	HasSuffixRunes returns true if the word has suffix runes .
5551	FirstSuffixIfIn returns the first suffix if startPos is greater than endPos .
5552	RemoveFirstSuffixIfIn removes first suffix if startPos is greater than or equal to startPos .
5553	RemoveFirstSuffix removes the first suffix from the word .
5554	FirstSuffix returns the first suffix of the word .
5555	preprocess preprocesses a snowball word .
5556	step0 returns true if the word is a snowball word .
5557	step1b returns true if the word is a snowball word .
5558	step2b converts a snowballword . SnowballWord into a snowballword .
5559	capitalizeYs returns the number of capitalizations of the given word .
5560	uncapitalizeYs uncapitalizes a snowballword . SnowballWord .
5561	stemSpecialWord returns a stemmed string for a specific word .
5562	isShortWord returns true if the word is a short word .
5563	step1a returns true if the word is a snowball word .
5564	Set sets a value for a key .
5565	Get returns the value associated with the given key .
5566	Cleanup cleans up a goroutine .
5567	getValues returns the Goroutine s values .
5568	linkGRs links the GRs to the parent .
5569	unlinkGRs unlinks all GRs .
5570	AppUri returns the app uri for the given app name and path .
5571	CurlAppWithTimeout curls an app with a given timeout .
5572	CurlApp curls an app .
5573	CurlAppRoot curls the app root .
5574	GetTags returns a list of tags for a given string .
5575	GetTagsAsUniqueStrings returns a list of tags as unique strings .
5576	isTerminator returns true if r is a terminator .
5577	uniquify uniquifies a slice of strings .
5578	New creates a new gin . HandlerFunc .
5579	Get retrieves a URL from gin . Context .
5580	GenerateRSAKeyPair generates a RSA key pair .
5581	Verify verifies the given data against the given signature .
5582	Encrypt encrypts the given byte slice .
5583	Sign implements the RsaPrivateKey interface .
5584	GetPublic returns the public key for this private key .
5585	Decrypt decrypts the given byte slice .
5586	UnmarshalRsaPrivateKey unmarshals a PKCS1 private key .
5587	GenerateKeyPair generates a new key pair .
5588	GenerateKeyPairWithReader generates a key pair with the given reader .
5589	GenerateEKeyPair generates a shared key pair for the given curve .
5590	UnmarshalPublicKey unmarshals a public key from a byte slice .
5591	MarshalPublicKey marshals a public key .
5592	UnmarshalPrivateKey unmarshals a private key from protobuf data .
5593	MarshalPrivateKey marshals a private key .
5594	KeyEqual returns true if two keys are equal .
5595	GenerateECDSAKeyPair generates an ECDSA key pair from src .
5596	GenerateECDSAKeyPairWithCurve generates an ECDSA private key and public key from src .
5597	ECDSAKeyPairFromKey converts a private key to an ECDSA public key .
5598	UnmarshalECDSAPrivateKey unmarshals ECDSAPrivateKey from data .
5599	UnmarshalECDSAPublicKey unmarshals ECDSA public key
5600	Equals returns true if two private keys are equal .
5601	Sign implements the ECDSAPrivateKey interface .
5602	Equals returns true if two public keys are equal .
5603	Verify implements the Verify method of the ECDSA interface .
5604	GenerateSecp256k1Key generates a Secp256k1Key from src .
5605	UnmarshalSecp256k1PrivateKey unmarshals secp256k1 private key
5606	UnmarshalSecp256k1PublicKey unmarshals Secp256k1PublicKey
5607	Equals returns true if k equals o .
5608	Sign implements the Signer interface .
5609	Equals returns true if two public keys are equal .
5610	Verify implements the Secp256k1PublicKey interface .
5611	Raw returns a raw byte slice of the Ed25519PrivateKey .
5612	Sign implements ed25519 . Signer .
5613	Equals returns true if two public keys are equal .
5614	Verify implements the Verify method of the Ed25519 interface .
5615	UnmarshalEd25519PublicKey unmarshals ed25519 public key
5616	UnmarshalEd25519PrivateKey unmarshals ed25519 private key
5617	EditScriptForStrings creates an EditScript for strings .
5618	EditScriptForMatrix creates an EditScript for the given matrix .
5619	WriteMatrix writes a matrix to the writer .
5620	New creates a new Lockfile .
5621	GetOwner returns the owner of the lockfile .
5622	TryLock attempts to lock the file .
5623	Unlock removes the lock from the filesystem .
5624	NewBase creates a new Base .
5625	SetFallbackLogger sets the fallback logger .
5626	AddLogger adds a new logger to the base .
5627	LogWithTime implements the Logger interface .
5628	Log logs a message at the given level with the given attributes .
5629	Warnm sends a warning message .
5630	NewTemplateWithFuncMap creates a new template with the given function map .
5631	Execute executes a template .
5632	NewTemplateMsg creates a new template message .
5633	NewLogAdapterFor creates a new LogAdapter .
5634	SetAttr sets a value for a key .
5635	LogWithTime implements the LogAdapter interface .
5636	Log implements the LogAdapter interface .
5637	Dbgm implements LogAdapter .
5638	NewAttrsFromMap creates new Attrs from a map of attributes .
5639	NewAttrsFromAttrs creates a new Attrs from the given Attrs .
5640	MergeAttrs merges a set of attributes into a single attribute .
5641	SetAttr sets the attribute with the given key and value .
5642	GetAttr returns the attribute with the given key .
5643	RemoveAttr removes an attribute from the list .
5644	Attrs returns a map of attributes .
5645	Debugm calls curDefault . Debugm .
5646	Infom sends an info message .
5647	Warningm is a convenience wrapper around curDefault . Warningm
5648	Errm is a convenience wrapper around Errorm .
5649	Errorm is a convenience wrapper around curDefault . Errorm
5650	Fatalm is a convenience wrapper around curDefault . Fatalm
5651	Dief is a convenience function for curDefault . Dief .
5652	Diem is a convenience wrapper around curDefault . Diem .
5653	ToLogLevel converts a string to a LogLevel .
5654	CallErr calls f and returns an error .
5655	New creates a new stackdriver hook .
5656	Fire implements the stackdriver . Hook interface .
5657	Levels sets the log level for the stackdriver hook .
5658	ProjectID sets the project ID for the stackdriver .
5659	EntriesService sets the logging . EntriesService .
5660	LoggingService sets the logging . Service to use .
5661	ErrorService is an Option to set the error reporting service .
5662	HTTPClient creates a StackdriverHook from an http . Client .
5663	MonitoredResource sets the logging . MonitoredResource field .
5664	ErrorReportingLogName is an Option to set the error reporting log name .
5665	Labels sets the stackdriver s labels .
5666	PartialSuccess is an Option to enable partial success .
5667	GoogleComputeCredentials returns a StackdriverHook option that can be used to request Google compute credentials for a service account .
5668	NewEncoder creates a new Encoder .
5669	NewDecoder creates a new decoder .
5670	NewStreamEncoder returns a new StreamEncoder .
5671	NewStreamDecoder creates a new StreamDecoder .
5672	Register registers a codec for the given mime type .
5673	Unregister removes a mime from the registry .
5674	Lookup returns a codec that matches the given mimetype .
5675	Codecs returns a map of registered codecs .
5676	Type returns the type of the error .
5677	Install installs the given adapter .
5678	AdapterOf returns the Adapter of the given type .
5679	AppendDuration appends a time . Duration to b .
5680	fmtInt converts a uint64 to an int .
5681	NewDecoder returns a new objconv . Decoder .
5682	NewStreamDecoder creates a new objconv . StreamDecoder .
5683	Unmarshal unmarshals a byte slice into v .
5684	String returns a string representation of a Type .
5685	zeroValueOf returns the zero value of a reflect . Type .
5686	NewValueParser creates a new ValueParser .
5687	ParseTag parses a string and returns a Tag .
5688	NewEncoder returns a new objconv . Encoder .
5689	NewStreamEncoder creates a new stream encoder .
5690	NewPrettyEncoder returns a new objconv . Encoder .
5691	NewPrettyStreamEncoder returns a new objconv . StreamEncoder .
5692	Marshal marshals v into a byte slice .
5693	NewEncoder creates a new Encoder .
5694	EncodeArray implements the Encoder interface .
5695	EncodeMap implements the Encoder interface .
5696	NewStreamEncoder creates a new StreamEncoder .
5697	Open opens the StreamEncoder .
5698	Close closes the StreamEncoder .
5699	Encode encodes v to the stream encoder .
5700	newStructType creates a new struct type .
5701	lookup returns the struct type for the given type .
5702	clear removes all struct types from the cache .
5703	CheckUint64Bounds returns an error if v exceeds the max value of t .
5704	CheckInt64Bounds checks if v is within the bounds of min and max .
5705	NewDecoder creates a new Decoder .
5706	Decode decodes a value from the decoder .
5707	DecodeArray decodes an array .
5708	DecodeMap implements the map . DecodeMap interface .
5709	NewStreamDecoder creates a new StreamDecoder .
5710	Len returns the length of the decoder .
5711	Err implements the StreamDecoder interface .
5712	Decode decodes the given value from the stream .
5713	Encoder returns a new StreamEncoder for the given emitter .
5714	init initializes LOGFLAGS .
5715	LevelFromString creates a Level from a string .
5716	NewBackend creates a new Backend .
5717	callsite returns the file and line name of the caller .
5718	print prints a message to the backend .
5719	Logger implements Backend .
5720	Trace prints a TRC message .
5721	Tracef prints a TRC message .
5722	Debug prints a debug message .
5723	Debugf prints a debug level message .
5724	Info prints information about the log level .
5725	Infof logs a message at INF level .
5726	Warn logs a warning message .
5727	Warnf prints a warning message .
5728	Error prints an error message .
5729	Errorf prints an error message .
5730	Critical prints a CRT message at the given level .
5731	Criticalf prints a CRT message at the given level .
5732	Level returns the log level .
5733	SetLevel sets the log level .
5734	Concat creates a new Permission from a new Permission .
5735	HasPermission returns true if the permission includes the given roles .
5736	ConcatPermissioner concatenates the given permissioners into a single Permissioner .
5737	HasPermission returns true if a permissioner has the given permission mode and roles .
5738	Register adds a checker to a role .
5739	NewPermission returns a new Permission .
5740	Get returns a checker for a given role .
5741	isPtrFromHeap returns true if the given address is a ptr .
5742	IsPtr returns true if a is a pointer to a process .
5743	FindObject returns the Object at the given address . If a is nil 0 and 0 are returned .
5744	ForEachObject calls fn for each Object in the process .
5745	ForEachRoot calls fn for each root in the process .
5746	Addr returns the core . Address of x .
5747	Size returns the size of the given object .
5748	Type returns the type of the given object .
5749	ForEachRootPtr calls fn for each root pointer in the process .
5750	edges1 returns true if the given fn returns false if the fn returns false otherwise .
5751	setHeapPtr sets the heap ptr for the given address .
5752	findHeapInfo returns the heap info for the given address .
5753	allocHeapInfo allocates the heap info for a given address .
5754	runtimeName returns the name of the runtime for the given type .
5755	readRuntimeConstants reads the runtime constants .
5756	add adds a function to the table .
5757	sort sorts the funcTab .
5758	find returns a function that can be used to find a function for a given address .
5759	read reads data from pcTab .
5760	readVarint reads a varint
5761	useLine returns the useline of the command .
5762	commandPath returns the path of the command .
5763	readCore reads the core from the cache .
5764	typeName returns a string representation of a type .
5765	fieldName returns the name of a field .
5766	typeFieldName returns the name of a type field .
5767	FindFunc returns a function that finds a process by its address .
5768	Core creates a new Process .
5769	Address returns the core . Address of the region .
5770	Int returns the region s int64 value .
5771	Uintptr reads a uint64 from the region .
5772	Cast casts a type into the region .
5773	Deref returns the dereferenced region .
5774	Uint64 reads a uint64 from the region .
5775	Uint32 returns a uint32 from the region .
5776	Int32 reads an int32 from the region .
5777	Uint16 returns a uint16 from the region .
5778	Uint8 reads a uint8 from the region .
5779	String returns a string representation of the region .
5780	SlicePtr returns a slice of the region .
5781	SliceLen returns the length of the slice .
5782	Field adds a field to the region .
5783	ReadUint8 reads a uint8 from the core file .
5784	ReadUint16 reads a uint16 from the core file .
5785	ReadUint32 reads a uint32 from the core file .
5786	ReadUint64 reads a uint64 from the core file .
5787	ReadInt8 reads an int8 value from the process .
5788	ReadInt16 returns the address as an int16 .
5789	ReadInt32 returns the address as an int32 .
5790	ReadInt64 reads an int64 value from the process .
5791	ReadUintptr returns the address as a uint64 .
5792	ReadPtr reads an address from the process .
5793	ReadCString reads a string at the given address .
5794	Source returns the name of the mapping and its offset .
5795	findMapping returns the mapping for the given address .
5796	Max returns the maximum value of the given address .
5797	Min returns the minimum value of a and b .
5798	Align returns a new Address that aligns with x .
5799	initialize initializes the ltDom .
5800	calculate calculates the ltDom .
5801	eval evaluates a vName .
5802	compress compresses v into d .
5803	link creates a link between v and w .
5804	reverse reverses all dominators .
5805	calcSize calculates the size of the process .
5806	objField returns the field name for the given object .
5807	Readable returns true if the given address is readable .
5808	ReadableN returns true if a is readable .
5809	splitMappingsAt splits the mappings at the given address .
5810	DynamicType returns the dynamic type of the process .
5811	Create creates a BTRFS file .
5812	Resolve resolves a URL to a net . IPAddr .
5813	Equal returns true if a and b are equal .
5814	newDefaultClassifier creates a new default classifier .
5815	Next moves the cursor to the next token .
5816	NewTokenizer creates a new Tokenizer .
5817	Split splits a string into substrings .
5818	Between returns a string between two strings .
5819	BetweenF returns a function that compares two strings .
5820	Camelize converts a string to camelize .
5821	Capitalize capitalizes a string .
5822	CharAt returns a char at the given index .
5823	CharAtF returns a CharAt function for the given index .
5824	ChompLeft removes the prefix from the end of a string .
5825	ChompLeftF returns a chomp left function .
5826	ChompRight chomps a string to the right of the given suffix .
5827	ChompRightF returns a chomp right function for the given suffix .
5828	ClassifyF returns a classifier for a given string .
5829	Clean removes all spaces from a string .
5830	Dasherize deserializes a string .
5831	EscapeHTML escapes the given string to html . EscapeHTML .
5832	DecodeHTMLEntities decodes the given string into html . Entities .
5833	EnsurePrefixF returns a function that ensures a string has a prefix .
5834	EnsureSuffixF returns a function that satisfies EnsureSuffix .
5835	Humanize converts a string into a human readable string .
5836	Iif returns truey if condition is true or falsey otherwise .
5837	IndexOf returns the index of a needle in a string .
5838	IsLower returns true if s is lowercase .
5839	IsUpper returns true if s is uppercase .
5840	Left returns the left substr of s with n substrs .
5841	LeftF returns a left - side func for the given number of characters .
5842	Letters returns a slice of all letters in s .
5843	Lines returns a slice of lines from a string .
5844	Map adds an iterator function to a slice of strings .
5845	Match returns true if s matches the given pattern .
5846	tasks runs the default godocdown tasks .
5847	Pad adds n digits to s .
5848	PadF returns a function that can be used to pad a string .
5849	PadLeft returns the left - hand side of a string . If the left - hand side of a string is less than n it returns s .
5850	PadLeftF returns a PadLeft function .
5851	PadRightF returns a PadRight function .
5852	Pipe takes a string and a list of funcs and returns it as a string .
5853	QuoteItems quotes a list of items .
5854	ReplaceF returns a replace function for a string .
5855	ReplacePatternF returns a replacement function for the given pattern and repl .
5856	Reverse reverses a string .
5857	RightF returns a right func .
5858	Slice returns a slice of strings starting at start and ending at end .
5859	SliceF returns a function that can be used to slice a string .
5860	SliceContains returns true if the given slice contains the given value .
5861	SliceIndexOf returns the index of val in a slice .
5862	Slugify converts a string to slugify .
5863	StripPunctuation strips the Punctuation from the string .
5864	StripTags removes tags from a string .
5865	Substr converts a string to a substring .
5866	SubstrF returns a substr function .
5867	TemplateWithDelimiters returns a template with the given delimiters .
5868	ToArgv converts a string to an array of args
5869	ToBool converts a string to a bool
5870	ToBoolOr converts string to bool or returns defaultValue if error occurs .
5871	ToIntOr converts string to int or returns default value if error occurs .
5872	ToFloat32Or converts a string to a float32 .
5873	ToFloat64Or converts string to float64 or returns defaultValue
5874	UnescapeHTML deserializes the given string into html . UnescapeHTML .
5875	WrapHTML wraps the given string with the given tag and attributes .
5876	WrapHTMLF wraps the given tag with the given attributes .
5877	ReapChildren sends a SIGCHLD signal to the given PidCh .
5878	SdNotify sends a notification to the server .
5879	NewAuthenticator creates a new Authenticator .
5880	Endpoint returns an http . Handler for the given prefix .
5881	Unique converts a slice of ObjectIds to a slice of ObjectIds .
5882	Contains returns true if the given list contains the given id .
5883	Includes returns true if all contains a subset of objects .
5884	Require sets the required flags for the model .
5885	Enqueue enqueues a job .
5886	A creates a new Authorizer .
5887	Run creates a new Authorizer with the specified enforcers .
5888	And creates a new Authorizer based on a and b .
5889	Or returns an Authorizer that matches a and b .
5890	Enqueue enqueues a job to the queue .
5891	Callback creates a callback for a task .
5892	NewWatcher creates a new watcher .
5893	Add adds a stream to the watcher .
5894	Action returns a fire . Action for the watcher .
5895	Write returns true if the operation is a write operation .
5896	String returns the string representation of the operation .
5897	Query returns the query .
5898	Respond marshals the value to JSON and writes it to the ResponseWriter .
5899	EnsureApplication ensures that the application with the given name has the given key and secret .
5900	EnsureFirstUser ensures that the first user in the store is a valid user .
5901	Callback returns a fire . Callback for the strategy .
5902	OpenStream creates a new stream .
5903	Close closes the stream .
5904	AddTokenIndexes adds token indexes to the indexer .
5905	GetTokenData returns the data associated with the token .
5906	SetTokenData sets the token data .
5907	ValidSecret returns true if the given secret is valid .
5908	HashSecret hashes a secret .
5909	ValidPassword returns true if the password is valid .
5910	HashPassword hashes a user s password .
5911	MustCreateStore creates a new store with the given URI . Panics if an error occurs .
5912	CreateStore creates a new store .
5913	C returns a mgo . Collection for the given model .
5914	NewAssetServer creates a new http . Handler for the given directory and prefix .
5915	DefaultGrantStrategy returns the default grant strategy .
5916	DefaultTokenData returns the default token data .
5917	GenerateToken generates a token for the policy .
5918	ParseToken parses a JWT token .
5919	E creates a new enforcer .
5920	MustGet is like Get but panics if name is not found .
5921	MustSet is like Set but panics if the field does not exist .
5922	NewGroup creates a new Group .
5923	Add adds a controller to the group .
5924	Endpoint returns an http . Handler that handles the endpoint request .
5925	Add adds a new field to the index .
5926	AddRaw adds a raw index to the indexer .
5927	Ensure ensures all the indexes in the store .
5928	NewCatalog creates a new Catalog .
5929	Add adds a model to the catalog .
5930	All returns all models in the catalog .
5931	Visualize returns a string representation of the Catalog .
5932	NewErrorReporter returns a new error reporter .
5933	EnsureIndexes ensures that the indexes in the store exist .
5934	E is a convenience wrapper around fmt . Errorf .
5935	Compose creates a new http . Handler from the given chain .
5936	Includes returns true if all contains the given subset .
5937	Intersect returns a list that intersects listA and listB .
5938	E returns an error with the given reason and retry boolean .
5939	RootTracer creates a tracer from a request .
5940	NewTracerFromRequest creates a new Tracer from an http . Request .
5941	NewTracer creates a new Tracer .
5942	Push adds a new span to the Tracer .
5943	Last returns the last span in the trace .
5944	Tag adds a tag to the trace .
5945	Log logs a key - value pair
5946	Context returns the current context .
5947	Pop removes the last span from the tracer .
5948	Finish finishes the tracer s spans .
5949	NewPool creates a new pool .
5950	Add adds a task to the pool .
5951	Run starts all tasks in the pool .
5952	NewBodyLimiter creates a new BodyLimiter .
5953	LimitBody limits the body of the request to n bytes .
5954	C creates a new callback for the given matcher and handler .
5955	Only returns a matcher that matches only the given operations .
5956	BasicAuthorizer implements the BasicAuthorizer interface for fire .
5957	ModelValidator returns a Callback that validates the model .
5958	TimestampValidator returns a Callback that validates a timestamp .
5959	RelationshipValidator returns a Callback that validates a model s relationships .
5960	Inspect inspects a Seekret .
5961	NewRule creates a new Rule .
5962	AddUnmatch adds an unmatch to the rule .
5963	Run runs a rule .
5964	NewSecret creates a new Secret .
5965	NewObject creates a new Object .
5966	SetMetadata sets the metadata for the given key and value .
5967	GetMetadata returns the metadata value for the given key .
5968	GetMetadataAll returns all metadata values for the object .
5969	SetRule sets the rule of the exception .
5970	SetObject sets the object of the exception .
5971	SetNline sets the number of lines in the exception .
5972	SetContent sets the content of the exception .
5973	Run returns true if the secret matches the Exception .
5974	AddRule adds a rule to the Seekret
5975	LoadRulesFromFile loads rules from a file
5976	LoadRulesFromDir loads rules from a directory
5977	DefaultRulesPath returns the default rules path .
5978	EnableRule enables a rule .
5979	DisableRule disables a rule .
5980	EnableRuleByRegexp returns the number of times a rule is enabled for a given regexp .
5981	DisableRuleByRegexp disables a rule by regexp .
5982	LoadObjects loads objects from a source .
5983	GroupObjectsByMetadata returns a map of group objects by metadata .
5984	GroupObjectsByPrimaryKeyHash returns a map of group objects by primary key hash .
5985	AddException adds an exception to the list
5986	LoadExceptionsFromFile loads all exceptions from a file .
5987	printPlainResults prints the plain results .
5988	printJsonResults prints the results as JSON .
5989	NewXor64Source returns a new Xor64Source instance
5990	xor64 converts a uint64 to a uint64
5991	next returns the next value in the Xor64Source .
5992	Seed sets the seed of the Xor64Source .
5993	NewFrameSet creates a new FrameSet .
5994	handleMatch parses a slice of strings and appends them to the frame set .
5995	Index returns the index of a frame in the set .
5996	Frame returns the value at the given index in the FrameSet .
5997	HasFrame returns true if a frame is present in the set .
5998	FrameRangePadded returns the padding of the frame range .
5999	Normalize returns a new FrameSet with the values normalized .
6000	FramesToFrameRange converts a slice of frames to a string .
6001	frameRangeMatches returns a slice of strings that match the given frange .
6002	toRange converts a range to a slice of ints .
6003	NewWorkManager creates a new workManager .
6004	processSources processes the source files .
6005	isInputDone returns true if input is done .
6006	closeInputs closes all in - memory directories .
6007	load loads the sequences from the given paths .
6008	loadRecursive loads files recursively .
6009	preparePaths takes a list of paths and returns a list of paths and a list of file sequences .
6010	PadFrameRange returns a string with the given padding .
6011	zfillString fills src with z characters .
6012	zfillInt fills src with z .
6013	NewInclusiveRange creates a new inclusive range .
6014	String returns a string representation of the inclusive range .
6015	End returns the end of the inclusive range .
6016	Len returns the length of the inclusive range .
6017	Min returns the minimum value in the inclusive range .
6018	Max returns the maximum value in the inclusive range
6019	Contains returns true if the given value is in the inclusive range .
6020	closestInRange returns the closest integer in a range .
6021	Index returns the index of the given value in the inclusive range .
6022	String returns the string representation of inclusive ranges .
6023	Len returns the length of the inclusive ranges .
6024	Start starts all inclusive ranges .
6025	End returns the end of the inclusive ranges .
6026	Min returns the minimum value in the inclusive ranges .
6027	Max returns the maximum of inclusive ranges .
6028	numRanges returns the number of inclusive ranges .
6029	rangeAt returns the inclusive range at the specified index .
6030	Append adds a new inclusive range to the list .
6031	AppendUnique appends a range to the list of inclusive ranges .
6032	Contains returns true if the given value is in the inclusive ranges .
6033	Index returns the index of the given value in the inclusive ranges .
6034	FrameRange returns the frame range of the file sequence .
6035	FrameRangePadded returns the frame range added to the file sequence .
6036	Index returns the path to the file at the given index .
6037	SetDirname sets the directory name of the file sequence .
6038	SetPadding sets the padding for the sequence .
6039	SetPaddingStyle sets the padding style for the sequence .
6040	SetExt sets the extension of the file sequence .
6041	SetFrameRange sets the frame range .
6042	Len returns the length of the file sequence .
6043	String returns the string representation of the FileSequence .
6044	Copy returns a copy of the file sequence .
6045	NewClient creates a new Client .
6046	UnmarshalXML implements xml . Unmarshaler .
6047	UnmarshalXML implements xml . Unmarshaler .
6048	Call sends a soap action .
6049	JSONDoc returns a json . RawMessage from the given path .
6050	AddLoader adds a new DocLoader .
6051	JSONSpec creates a document from a JSON document .
6052	Embedded creates a Document from a json . RawMessage .
6053	Spec returns the spec for the given path .
6054	Analyzed returns a YAML document containing the analyzed data .
6055	Expanded expands a document .
6056	ResetDefinitions resets the definitions of the document .
6057	Pristine returns the most recent version of the document .
6058	OpenDb opens a database .
6059	GetOrg returns the organization name for the given IP address .
6060	GetRegion returns the country code and region code for the given IP .
6061	GetRegionName returns the region name for the given country and region code .
6062	GetCountry returns the country code and netmask of the given IP .
6063	NewRotatingFileHandler creates a new RotatingFileHandler .
6064	Close closes the rotating file handler .
6065	String returns the string representation of a Level .
6066	New creates a new Logger .
6067	Close closes the logger .
6068	SetLevelByName sets the logger level by the given name .
6069	Output logs a message at the given level .
6070	OutputJson outputs a JSON log .
6071	Print outputs a log message with the given args .
6072	Println logs with LevelTrace and Sprintln .
6073	Debug logs with LevelDebug .
6074	Debugln logs with LevelDebug and Sprintln .
6075	Error logs with LevelError .
6076	Errorln logs with LevelError .
6077	Info logs a message with level Info .
6078	Infoln logs a message at Info level .
6079	Warn logs with LevelWarn .
6080	Warnln logs with LevelWarn and fmt . Sprintln .
6081	NewStreamHandler creates a new StreamHandler .
6082	Right adds a pad to the end of a string .
6083	New creates a new REST API .
6084	setupMetadata creates a map of ssd . GenMetadata to Resource .
6085	recordTypes records ParamTypes for the given data type .
6086	appendSorted appends a list of ActionParams to the list of ActionParams .
6087	parseDataType parses a ParamAnalyzer s data type .
6088	parseParam parses an ActionParam and returns a new ActionParam .
6089	newParam creates a new ParamAnalyzer .
6090	toGoReturnTypeName converts a Go type name to a Go type name .
6091	toGoTypeName converts a string to a go type name .
6092	prettify returns a string representation of o .
6093	isBuiltInType returns true if name is a built - in type .
6094	MatchHref returns true if the given href matches the action .
6095	Substitute converts a list of PathVariables into a string representation of a PathPattern .
6096	MarshalJSON implements json . Marshaler .
6097	writeMultipartParams writes a multipart form section to the given writer .
6098	PerformRequest performs the given request .
6099	PerformRequestWithContext performs the given request with the given context .
6100	LoadResponse loads a response from the API .
6101	ScheduleLocator returns a ScheduleLocator .
6102	TemplateLocator returns a TemplateLocator .
6103	fetchDetails fetches the details for a given environment and environment .
6104	buildAliases builds aliases from sshConfig .
6105	serverArray returns a list of server arrays .
6106	server returns the instance with the given name .
6107	toPackageName converts a version to a package name .
6108	loadFile loads a JSON - encoded file .
6109	Creates a RightScale API client .
6110	runCommand runs a command .
6111	CreateJSONResponse creates an http . Response from a JSON byte array .
6112	AccountLocator creates a new AccountLocator .
6113	AccountGroupLocator creates a new AccountGroupLocator .
6114	AlertLocator creates a new AlertLocator .
6115	AlertSpecLocator creates a new AlertSpecLocator .
6116	AuditEntryLocator creates a new AuditEntryLocator .
6117	BackupLocator returns a new BackupLocator .
6118	ChildAccountLocator creates a new childAccountLocator
6119	CloudLocator creates a new CloudLocator .
6120	CloudAccountLocator creates a new CloudAccountLocator .
6121	CookbookLocator creates a new CookbookLocator .
6122	CookbookAttachmentLocator creates a new CookbookAttachmentLocator .
6123	CredentialLocator creates a new CredentialLocator .
6124	DatacenterLocator returns a DatacenterLocator .
6125	DeploymentLocator returns a DeploymentLocator .
6126	HealthCheckLocator creates a new HealthCheckLocator .
6127	IdentityProviderLocator creates a new IdentityProviderLocator
6128	ImageLocator returns a new ImageLocator .
6129	InputLocator creates a new InputLocator .
6130	InstanceLocator creates a new instance locator .
6131	InstanceTypeLocator creates a new instance type locator .
6132	IpAddressLocator returns an IpAddressLocator .
6133	IpAddressBindingLocator returns an IpAddressBindingLocator .
6134	MonitoringMetricLocator creates a new MonitoringMetricLocator .
6135	MultiCloudImageLocator creates a new multicloud image locator .
6136	MultiCloudImageMatcherLocator creates a new MultiCloudImageMatcherLocator
6137	MultiCloudImageSettingLocator creates a new MultiCloudImageSettingLocator
6138	NetworkLocator returns a new NetworkLocator .
6139	NetworkGatewayLocator returns a NetworkGatewayLocator .
6140	NetworkOptionGroupLocator creates a new NetworkOptionGroupLocator
6141	NetworkOptionGroupAttachmentLocator returns a new NetworkOptionGroupAttachmentLocator
6142	Oauth2Locator returns an Oauth2Locator .
6143	PermissionLocator returns a PermissionLocator .
6144	PlacementGroupLocator returns a PlacementGroupLocator .
6145	PreferenceLocator returns a PreferenceLocator .
6146	PublicationLocator returns a PublicationLocator .
6147	PublicationLineageLocator returns a PublicationLineageLocator .
6148	RecurringVolumeAttachmentLocator returns a RecurringVolumeAttachmentLocator
6149	RepositoryLocator returns a RepositoryLocator .
6150	RepositoryAssetLocator returns a RepositoryAssetLocator .
6151	ResourceGroupLocator returns a ResourceGroupLocator .
6152	RightScriptLocator returns a RightScriptLocator .
6153	RightScriptAttachmentLocator creates a RightScriptAttachmentLocator
6154	RouteLocator creates a new RouteLocator .
6155	RouteTableLocator creates a new RouteTableLocator .
6156	RunnableBindingLocator returns a RunnableBindingLocator .
6157	SchedulerLocator returns a SchedulerLocator .
6158	SecurityGroupLocator returns a SecurityGroupLocator .
6159	SecurityGroupRuleLocator returns a SecurityGroupRuleLocator .
6160	ServerLocator returns a ServerLocator .
6161	ServerArrayLocator returns a ServerArrayLocator .
6162	ServerTemplateLocator returns a ServerTemplateLocator .
6163	ServerTemplateMultiCloudImageLocator returns a ServerTemplateMultiCloudImageLocator .
6164	SessionLocator returns a SessionLocator .
6165	SshKeyLocator creates a new SshKeyLocator .
6166	SubnetLocator creates a new SubnetLocator .
6167	TagLocator returns a TagLocator .
6168	TaskLocator returns a TaskLocator .
6169	UserLocator returns a UserLocator .
6170	UserDataLocator returns a UserDataLocator .
6171	VolumeLocator returns a VolumeLocator .
6172	VolumeAttachmentLocator returns a VolumeAttachmentLocator .
6173	VolumeSnapshotLocator returns a VolumeSnapshotLocator .
6174	VolumeTypeLocator returns a VolumeTypeLocator .
6175	RegisterCommands registers API commands .
6176	ShowCommandHelp shows the help for the given command .
6177	ShowAPIActions calls ShowAPIActions
6178	ShowHelp shows the help for the given command .
6179	ParseCommandAndFlags parses command and flags .
6180	validateFlagValue validates a flag value
6181	buildQuery builds a query from a set of parameters .
6182	buildPayload builds a payload from a slice of APIParams .
6183	shortenPattern shortens a pattern .
6184	cleanDescription returns a clean description .
6185	fileExists returns true if a file exists
6186	AnalysisSnapshotLocator creates a new AnalysisSnapshotLocator
6187	BudgetAlertLocator creates a BudgetAlertLocator
6188	CloudBillLocator creates a new CloudBillLocator
6189	CloudBillMetricLocator creates a new CloudBillMetricLocator .
6190	CurrentUserLocator returns a new CurrentUserLocator
6191	InstanceCombinationLocator returns an InstanceCombinationLocator .
6192	InstanceMetricLocator returns an InstanceMetricLocator .
6193	InstanceUsagePeriodLocator creates a new InstanceUsagePeriodLocator
6194	PatternLocator returns a new PatternLocator .
6195	ReservedInstanceLocator returns a ReservedInstanceLocator .
6196	ReservedInstancePurchaseLocator creates a new ReservedInstancePurchaseLocator .
6197	ScenarioLocator creates a new ScenarioLocator .
6198	ScheduledReportLocator returns a new ScheduledReportLocator .
6199	TempInstancePriceLocator returns a TempInstancePriceLocator
6200	UserSettingLocator returns a UserSettingLocator .
6201	readAllAsync is an alias for ioutil . ReadAll .
6202	extractArg extracts an argument from args .
6203	write writes a byte slice to the output file .
6204	AppliedPolicyLocator returns a AppliedPolicyLocator .
6205	ApprovalLocator returns a new ApprovalLocator .
6206	IncidentLocator creates a new IncidentLocator .
6207	PolicyTemplateLocator returns a PolicyTemplateLocator .
6208	PublishedTemplateLocator returns a PublishedTemplateLocator .
6209	DebugCookbookPathLocator returns a DebugCookbookPathLocator .
6210	DockerControlLocator returns a DockerControlLocator .
6211	EnvLocator creates a new EnvLocator .
6212	LoginControlLocator creates a LoginControlLocator .
6213	ProcLocator returns a ProcLocator .
6214	Rl10Locator creates a new Rl10Locator .
6215	TSSLocator creates a TSSLocator
6216	TSSControlLocator creates a TSSControlLocator .
6217	TSSPluginLocator creates a TSSPluginLocator .
6218	NewAngularWriter creates a new AngularWriter
6219	WriteResource writes the given resource to the given writer .
6220	path returns the path of the action .
6221	mandatory returns true if a parameter is mandatory .
6222	New creates a new API .
6223	FromCommandLine creates an API from a command line .
6224	CanAuthenticate implements the Auth interface .
6225	Encrypt encrypts the given text using AES - 256 .
6226	Decrypt decrypts the given text and returns the decrypted string .
6227	guessType guesses the type of a request .
6228	addType adds a new type to the analyzer .
6229	extractCmdLineParams extracts the command line parameters from an ActionParam .
6230	NewMetadataWriter returns a new MetadataWriter .
6231	WriteHeader implements io . WriterHeader
6232	WriteMetadata writes metadata to w .
6233	location returns the location of the action parameter .
6234	New creates a new REST API .
6235	fromAPI creates a new API from a rsapi . API
6236	BuildRequest builds an http . Request from a resource .
6237	setupMetadata returns a map of resource name to metadata . Resource .
6238	NewDisplayer creates a new Displayer .
6239	ApplySingleExtract applies a single extract to the displayer .
6240	ApplyExtract applies a JSON - encoded extract to the displayer .
6241	ApplyHeaderExtract adds the given header to the response .
6242	Output returns the output of the displayer .
6243	NewAPIAnalyzer creates a new APIAnalyzer .
6244	Analyze returns a gen . APIDescriptor from the APIAnalyzer .
6245	AnalyzeAliases analyzes aliases .
6246	LocatorFunc returns the locator function for the given attributes .
6247	ParseRoute parses a route into a PathPatterns .
6248	isDeprecated returns true if the given path is deprecated .
6249	isQueryParam returns true if a is a query parameter .
6250	isPathParam returns true if p is a path parameter .
6251	fetchAuditEntries fetches a list of audit entries .
6252	formatTime converts a time . Time to a string .
6253	printAudits prints a list of audit entries
6254	extractUnique extracts a slice of audit entries from oldEntries and newEntries .
6255	getHref returns the href of the given audit entry .
6256	fail converts a string to a string with suffix  n . If the string is not a string with suffix  n fail .
6257	parameters returns a string representation of a gen . Action .
6258	paramsInitializer initializes params .
6259	commandLine returns the command line argument .
6260	toVerb converts a string to a string .
6261	escapeBackticks escapes backticks
6262	AccountPreferenceLocator creates a new AccountPreferenceLocator .
6263	ApplicationLocator returns a new ApplicationLocator .
6264	EndUserLocator returns a EndUserLocator .
6265	NotificationRuleLocator returns a NotificationRuleLocator .
6266	UserPreferenceLocator creates a UserPreferenceLocator .
6267	UserPreferenceInfoLocator returns a UserPreferenceInfoLocator .
6268	LoadConfig loads a ClientConfig from a file .
6269	CreateConfig creates a new config file .
6270	fromAPI creates a new API from a rsapi . API
6271	HostFromLogin creates a host from a login string .
6272	AnalyzeParam generates an ActionParam for the given Parameter .
6273	AnalyzeAttribute analyzes an attribute
6274	AnalyzeType analyzes a file upload type .
6275	CreateType creates a new type with the given query and attributes .
6276	Ref returns the definition for the given reference .
6277	Type returns the type of the reference .
6278	Required returns the string representation of a required ref .
6279	ID returns the ID of a Ref .
6280	Service returns the service ID of the endpoint .
6281	Method returns the method of the endpoint .
6282	NewTypeRegistry creates a new TypeRegistry .
6283	GetNamedType returns the type with the given name .
6284	CreateNamedType creates a new named type .
6285	CreateInlineType creates a new inline type .
6286	FinalizeTypeNames implements gen . APIDescriptor .
6287	Merge merges two APIDescriptors .
6288	FinalizeTypeNames finalizes the APIDescriptor s type names .
6289	uniqueTypeName returns the unique type name for the given prefix .
6290	MandatoryParams returns the action s mandatory parameters .
6291	HasOptionalParams returns true if the action has any optional parameters .
6292	MakeUniq creates a uniq from a slice of strings .
6293	NewClientWriter returns a new ClientWriter .
6294	WriteHeader writes a header to w .
6295	WriteResourceHeader writes a resource header to w .
6296	WriteType writes the object data type to the given writer .
6297	WriteResource writes the given resource to the given writer .
6298	WithTrail creates a new EvalCtx with the given trail .
6299	AnalyzeEndpoint analyzes an endpoint .
6300	NetworkInterfaceLocator returns a NetworkInterfaceLocator
6301	NetworkInterfaceAttachmentLocator returns a NetworkInterfaceAttachmentLocator
6302	UnmarshalJSON deserializes into a RubyTime instance
6303	ExecutionLocator creates a new ExecutionLocator .
6304	NotificationLocator returns a NotificationLocator .
6305	OperationLocator creates a new OperationLocator .
6306	ScheduledActionLocator returns a new ScheduledActionLocator
6307	NewBasicAuthenticator creates a new BasicAuthenticator .
6308	NewSSAuthenticator returns a new ssAuthenticator .
6309	newCookieSigner creates a new cookieSigner .
6310	Sign signs an http . Request .
6311	CanAuthenticate checks if a user can authenticate to the given host .
6312	refresh refreshes the cookies .
6313	Sign adds a bearer token to the request .
6314	Sign implements the http . Signer interface .
6315	Sign creates a new session and signs it .
6316	SetHost sets the host for the authenticator .
6317	CanAuthenticate checks if a user can authenticate to the given host .
6318	extractRedirectURL extracts a redirect URL from a response .
6319	buildURL creates a URL from a host and path .
6320	GetAction returns the Action with the given name or nil if not found .
6321	HasLink returns true if the resource has a link with the given name .
6322	findMatches returns a list of PathPatterns that match the given href .
6323	NewPB creates a new HTTPClient from a ParamBlock .
6324	newVariableDumpClient creates a new variable dump client .
6325	newRawClient creates a new raw HTTP client .
6326	DoHidden implements the http . Client interface .
6327	Do implements http . Client .
6328	doImp implements the http . Client interface .
6329	getClientWithoutTimeout returns an http . Client from the dumpClient .
6330	dumpRequest dumps an http . Request .
6331	writeHeaders writes the headers to the buffer .
6332	copyHiddenHeaders returns a copy of the given map .
6333	validateCommandLine validates a command line .
6334	APIClient returns an API client for the given command .
6335	RegisterClientCommands registers client commands
6336	Interactive implements the Logger interface .
6337	toPattern converts a verb to a PathPattern .
6338	WithClientIP returns a context with the given ip set .
6339	ClientIP returns the client s IP address .
6340	NewProducer creates a new Producer .
6341	StartProducer starts a new producer .
6342	Start starts the producer .
6343	Stop stops the producer .
6344	Publish publishes a message to the topic
6345	PublishTo publishes a message to a topic .
6346	NewLocalEngine creates a new LocalEngine .
6347	validate validates this ConsumerConfig .
6348	defaults sets the default values for the config .
6349	NewConsumer creates a new consumer .
6350	StartConsumer starts a new consumer .
6351	Start starts the consumer . Panics if Start has already been called .
6352	RateLimit returns a channel that will be closed if limit is  = 0 .
6353	Write implements bufio . Writer interface .
6354	ReadResponse reads a response from r .
6355	backoff returns a time . Duration for a backoff .
6356	String returns the string representation of a FrameType .
6357	NewConsulEngine creates a new ConsulEngine .
6358	ParseMessageID parses a string and returns a MessageID .
6359	WriteTo writes the MessageID to w .
6360	NewMessage creates a new Message .
6361	Finish finishes the message .
6362	Requeue requeues a message .
6363	ReadCommand reads a command from r .
6364	funcMapMaker returns a template . FuncMap for the given request and response writer .
6365	Funcs sets the function map for the template .
6366	Execute executes a template .
6367	RegisterPath registers the given path to the AssetFileSystem .
6368	Asset implements AssetFileSystem .
6369	Glob returns a list of files matching pattern .
6370	NameSpace returns the AssetFileSystem s namespace
6371	New creates a new Render .
6372	RegisterViewPath registers the given view paths .
6373	SetAssetFS sets the asset file system .
6374	Layout returns a new template with the given name .
6375	Funcs creates a new template with the given function map .
6376	Execute executes a template .
6377	RegisterFuncMap registers a new function map .
6378	Asset returns the filesystem asset with the given name .
6379	NewPlainClient creates a new plain client .
6380	Create creates a new io . WriteCloser .
6381	Open creates a GET request and returns an io . ReadCloser .
6382	Sign signs a request with the given Keys .
6383	Sign signs the request with the given keys .
6384	Readdir implements os . File interface .
6385	Find finds the node at x and the path expr at p .
6386	Lex creates a new XItem .
6387	MustParseXML is like ParseXML but panics on error .
6388	ParseXML parses XML from r .
6389	Call implements the Wrap interface .
6390	Parse parses xp and returns XPathExec .
6391	MustParse is like Parse but panics if parsing fails .
6392	Exec executes XPathExec .
6393	ExecBool implements the Exec interface for XPathExec .
6394	ExecNum implements the Exec interface for XPathExec .
6395	ExecNode is part of the XPath interface .
6396	MustExec is like Exec but panics if there is an error .
6397	ParseExec parses xpstr and executes t .
6398	CreateNode creates a new XML node .
6399	GetChildren returns the list of children of the XMLEle
6400	GetAttrs returns a slice of Attrs .
6401	ResValue returns the res value of the XMLEle .
6402	Parse parses a string into a Node .
6403	GetToken returns the token associated with the XMLNode .
6404	ResValue returns the res value of the XMLNode .
6405	Exec executes a node .
6406	String returns a string representation of a Num .
6407	Num returns a numeric representation of a string .
6408	BuildNS builds a NS from an Elem .
6409	GetAttribute returns the xml . Attr associated with the given Elem .
6410	GetAttributeVal returns the value of an attribute .
6411	GetAttrValOrEmpty returns the value of an attribute .
6412	FindNodeByPos finds a node at the given position .
6413	Marshal marshals a tree . Node to w .
6414	MarshalStr converts a tree . Node to a string .
6415	NewLexer creates a new Lexer .
6416	NewLexerString creates a new Lexer for a string .
6417	Split splits a string and returns a slice of strings .
6418	Register registers an error descriptor .
6419	Get returns the ErrDescriptor for the given code .
6420	GetAll returns all ErrDescriptors in the registry .
6421	From converts an error to an Error .
6422	Descriptor returns an ErrDescriptor from an error .
6423	GetAttributes returns the Attributes of the error .
6424	HTTPStatusCode returns the HTTP status code .
6425	HTTPStatusCode returns the HTTP status code of the error .
6426	HTTPStatusToType converts a HTTP status to a Type .
6427	ToHTTP converts an error to an http . ResponseWriter
6428	toImpl converts an Error into an impl .
6429	MetadataFromIncomingContext creates a metadata . MD from an incoming context .
6430	MetadataFromOutgoingContext converts an incoming context to a metadata . MD .
6431	TokenFromMetadata extracts a token from a metadata . MD .
6432	TokenFromIncomingContext extracts a token from an incoming context .
6433	OutgoingContextWithToken returns an outgoing context with the given token .
6434	KeyFromMetadata extracts a key from a metadata . MD .
6435	KeyFromIncomingContext extracts a key from an incoming context .
6436	OutgoingContextWithKey returns an outgoing context with the given key .
6437	IDFromMetadata extracts an ID from a metadata . MD .
6438	IDFromIncomingContext extracts the ID from an incoming context .
6439	OutgoingContextWithID returns an outgoing context with the given id .
6440	ServiceInfoFromMetadata converts a metadata . MD into a service name version and net address .
6441	ServiceInfoFromIncomingContext creates a ServiceInfo from an incoming context .
6442	OutgoingContextWithServiceInfo returns an outgoing context with the given service info .
6443	LimitFromMetadata converts a metadata . MD to a uint64 .
6444	OffsetFromMetadata extracts an offset from a metadata . MD .
6445	LimitAndOffsetFromIncomingContext returns a limit and offset from an incoming context .
6446	OutgoingContextWithLimitAndOffset returns a context with the specified limit and offset .
6447	before returns true if i is before j .
6448	New creates a new Error with the given attributes .
6449	WithNamespace adds a namespace to the log . Interface .
6450	Wrap wraps a log . Interface with namespaces .
6451	WithField implements the Logger interface .
6452	WithFields implements log . Interface .
6453	Format returns a formatted string with the given attributes .
6454	fix returns the value of v . If v is nil returns nil>
6455	GRPCCode returns the GRPC code for the type .
6456	GRPCCodeToType converts a GRPC code to a Type .
6457	GRPCCode returns the GRPC code of the error .
6458	FromGRPC converts a grpc error to an Error
6459	ToGRPC converts an error to a grpc error .
6460	IsEnabled returns true if the given namespace is enabled .
6461	Set sets the namespaces .
6462	Cause returns the cause of the error or nil if there is no cause .
6463	parseCode parses a string into a Code .
6464	UnaryServerInterceptor converts a ConvertFunc to a UnaryServerInterceptor
6465	StreamServerInterceptor converts a ConvertFunc to a gRPC StreamServerInterceptor .
6466	UnaryClientInterceptor returns a UnaryClientInterceptor .
6467	StreamClientInterceptor converts a ConvertFunc to a StreamClientInterceptor .
6468	Interceptor returns a StreamClientInterceptor .
6469	Wrap returns a log . Interface that wraps the given logger .
6470	NewCounter creates a new counter .
6471	NewRedisCounter creates a new redis counter
6472	NewLimiter creates a new Limiter .
6473	WithInsecure returns a pointer to a new TokenCredentials with the Insecure flag set .
6474	WithTokenFunc creates a new TokenCredentials with the given tokenFunc .
6475	GetRequestMetadata returns the metadata for a request .
6476	FieldsFromIncomingContext creates a ttnlog . Fields from an incoming context .
6477	String returns the string representation of a Type .
6478	UnmarshalText implements encoding . TextUnmarshaler .
6479	fromString converts a string to a Type .
6480	Start starts a goroutine .
6481	NewSimple creates a new simple queue .
6482	Wrap wraps a log . Interface with the given filters .
6483	WithFilters adds the given filters to the filter .
6484	WithField adds a field to the filter .
6485	WithFields implements the Logger interface .
6486	FilterSensitive returns a Filter that filters strings that are sensitive .
6487	SliceFilter returns a new Filter based on the given filter .
6488	MapFilter creates a new filter for a map .
6489	RestrictFilter creates a new filter with the given field name and filter .
6490	LowerCaseFilter returns a lower case filter .
6491	newBatchPoints creates a new batch point instance .
6492	NewSinglePointWriter creates a new SinglePointWriter .
6493	Write writes a single point to the writer .
6494	WithScalingInterval sets the scaling interval .
6495	NewBatchingWriter creates a new BatchingWriter .
6496	Write implements influxdb . BatchingWriter .
6497	MustParseLevel parses a log level string .
6498	New creates a new Stream .
6499	SetLogger sets the logger for the stream .
6500	CloseRecv closes the stream s recv buffer .
6501	Stats returns the sent and dropped stats for this stream .
6502	Run runs the stream .
6503	ServerOptions returns a slice of grpc . ServerOptions .
6504	ClientOptions returns a slice of grpc . DialOptions .
6505	UnaryServerInterceptor returns a UnaryServerInterceptor .
6506	StreamServerInterceptor returns a gRPC StreamServerInterceptor .
6507	UnaryClientInterceptor returns a unary client interceptor .
6508	StreamClientInterceptor returns a StreamClientInterceptor .
6509	defaults sets the default values for the configuration .
6510	Flush implements the Handler interface .
6511	New creates a new handler .
6512	HandleLog handles a log entry .
6513	New creates a new random . Interface .
6514	Names returns a list of names for this template .
6515	String returns a string representation of the PerfDatum .
6516	RenderPerfdata renders the given PerfDatum as a string .
6517	Exit prints the exit message with the given status .
6518	NewCheckWithOptions creates a new check with the given options .
6519	AddResult adds a status and message to the check .
6520	AddResultf adds a result to the check .
6521	String returns a string representation of the check .
6522	Exitf adds a result to the check .
6523	Criticalf exits the check with CRITICAL .
6524	Unknownf exits the check with UNKNOWN .
6525	NewDefaultStatusPolicy returns a new default status policy .
6526	NewStatusPolicy creates a new status policy .
6527	ParseRange parses a range string into a Range .
6528	Check returns true if the value is within the range .
6529	CheckInt returns true if val is in the range .
6530	CheckUint64 returns true if val is a valid uint64
6531	NewClient creates a new client
6532	GetKeyMeta returns the key metadata for a given path .
6533	GetKeysInDirMeta returns a list of keys in a directory .
6534	GetKeyContent returns the contents of a PGP key stored at the given path .
6535	GetJobSummariesForProject returns a list of JobSummaries for the specified project .
6536	GetJobsForProject returns a list of jobs for the specified project .
6537	GetJob returns the details of a job .
6538	CreateJob creates a new job .
6539	CreateOrUpdateJob creates or updates a job .
6540	DeleteJob deletes a job .
6541	JobSummary returns a JobSummary .
6542	GetSystemInfo returns information about the system .
6543	DateTime converts SystemTimestamp to a time . Time .
6544	GetAllProjects returns all projects .
6545	GetProject returns a project by name .
6546	CreateProject creates a new project .
6547	DeleteProject deletes a project .
6548	SetProjectConfig sets the config for a project .
6549	NewClient creates a new PBRest client .
6550	NewClientbyToken creates a new PBRestClientbyToken
6551	SetDepth sets the client s depth .
6552	ListDatacenters returns a list of datacenters .
6553	CreateDatacenter creates a new datacenter .
6554	GetDatacenter returns a Datacenter .
6555	UpdateDataCenter updates a datacenter .
6556	DeleteDatacenter deletes a datacenter
6557	WaitTillProvisioned waits for a request to complete until it is provisioned .
6558	ListFirewallRules returns a list of firewall rules .
6559	GetFirewallRule retrieves a firewall rule .
6560	CreateFirewallRule creates a new firewall rule .
6561	UpdateFirewallRule updates a firewall rule .
6562	DeleteFirewallRule deletes a firewall rule
6563	ListLoadbalancers returns a list of Loadbalancers .
6564	GetLoadbalancer returns a Loadbalancer .
6565	UpdateLoadbalancer updates a loadbalancer .
6566	DeleteLoadbalancer deletes a load balancer
6567	ListBalancedNics returns a list of balanced Nics .
6568	AssociateNic creates a new Nic .
6569	GetBalancedNic returns a balanced Nic .
6570	DeleteBalancedNic deletes a balanced nic .
6571	ListLans returns a list of lans for the given dcid .
6572	GetLan retrieves a lan from the server .
6573	DeleteLan deletes a lan
6574	ListNics returns a list of Nics .
6575	CreateNic creates a new Nic .
6576	GetNic returns a Nic .
6577	UpdateNic updates a Nic .
6578	DeleteNic deletes a nic .
6579	ListSnapshots returns a list of snapshots .
6580	GetSnapshot returns a snapshot by ID .
6581	DeleteSnapshot deletes a snapshot
6582	UpdateSnapshot updates a snapshot .
6583	ListIPBlocks returns a list of IP blocks .
6584	ReserveIPBlock reserves an IP block .
6585	GetIPBlock retrieves an IP block by ID .
6586	UpdateIPBlock updates an existing IP block .
6587	ReleaseIPBlock releases an IP block .
6588	ListVolumes returns a list of volumes .
6589	GetVolume returns a volume by ID .
6590	UpdateVolume updates a volume .
6591	CreateVolume creates a new volume .
6592	DeleteVolume deletes a volume
6593	CreateSnapshot creates a new snapshot .
6594	RestoreSnapshot restores a snapshot .
6595	ListServers returns a list of servers .
6596	GetServer returns a server .
6597	DeleteServer deletes a server
6598	ListAttachedCdroms returns a list of attached cdroms .
6599	AttachCdrom attaches an image to a cdrom .
6600	GetAttachedCdrom returns the attached cdrom image .
6601	DetachCdrom removes a cdrom .
6602	ListAttachedVolumes returns a list of volumes attached to srvid .
6603	AttachVolume attaches a volume to the server .
6604	GetAttachedVolume returns an attached volume .
6605	DetachVolume removes a volume .
6606	StartServer starts a new server .
6607	ListLocations returns a list of locations
6608	GetRegionalLocations returns a list of locations in the specified region .
6609	GetLocation returns a location by locid .
6610	GetContractResources returns a list of available contracts .
6611	ListImages returns a list of images .
6612	GetImage returns the image with the given id .
6613	PrintHeaders prints the headers .
6614	ListGroups returns a list of groups
6615	GetGroup returns a group by groupid .
6616	CreateGroup creates a new group .
6617	UpdateGroup updates a group .
6618	DeleteGroup deletes a group
6619	ListShares returns a list of shares .
6620	GetShare returns a share for a given group and resource .
6621	AddShare adds a share to a group .
6622	UpdateShare updates a shared object .
6623	DeleteShare deletes a shared resource .
6624	ListGroupUsers lists all users in a group .
6625	AddUserToGroup adds a user to a group
6626	DeleteUserFromGroup deletes a user from a group
6627	ListUsers returns a list of users .
6628	GetUser returns the user with the given usrid .
6629	CreateUser creates a new user .
6630	UpdateUser updates a user .
6631	DeleteUser deletes a user
6632	ListResources returns a list of resources
6633	GetResourceByType retrieves a resource by its type .
6634	ListResourcesByType returns a list of all resources matching the given type .
6635	ListRequests returns a list of requests
6636	GetRequest retrieves a request by its ID .
6637	GetRequestStatus returns the status of a request .
6638	Close closes the Writer .
6639	GetSerializableArgument implements the SerializableMeta interface .
6640	BoolVar implements EnvironmentFlags . BoolVar .
6641	Bool creates a bool flag with specified name value and usage string .
6642	IntVar wraps EnvironmentFlags . IntVar
6643	Int is a convenience wrapper around EnvironmentFlags . Int
6644	Int64Var implements EnvironmentFlags . Int64Var
6645	Int64 wraps EnvironmentFlags . Int64
6646	UintVar wraps EnvironmentFlags . UintVar
6647	Uint wraps EnvironmentFlags . Uint
6648	Uint64Var wraps EnvironmentFlags . Uint64Var
6649	Uint64 wraps EnvironmentFlags . Uint64
6650	StringVar wraps EnvironmentFlags . StringVar
6651	String returns a string representation of an EnvironmentFlag .
6652	Float64Var wraps EnvironmentFlags . Float64Var
6653	Float64 is a convenience wrapper around EnvironmentFlags . Float64
6654	DurationVar implements EnvironmentFlags . DurationVar
6655	Duration returns a time . Duration with the specified name value and usage string .
6656	Parse parses environment variables .
6657	WriteStringToFile writes a string to a file
6658	ReadFileToString reads a file and converts it to a string .
6659	LineReader returns an io . Reader that reads from the given io . Reader .
6660	LineReaderFrom returns an io . Reader from the given path .
6661	FileExists returns true if the given file exists .
6662	FileExistsInPath returns true if the given file exists in the given path .
6663	GetPathParts returns the path parts for a given path .
6664	GetThisPathParts returns the path parts of the given file and directory .
6665	RandomString returns a random string of the given length .
6666	ParseAddress parses an address string into a proto string and path .
6667	HomeDir returns the home directory of the current user .
6668	IsTCPPortAvailable returns true if the given port is available .
6669	RandomTCPPort returns the random TCP port .
6670	HashString returns the hash of a string .
6671	Context implements mnemosyne . ContextManager .
6672	Token returns an oauth2 . Token for the session .
6673	NewDaemon creates a new Daemon .
6674	Close closes the daemon .
6675	NewAccessTokenContext creates a new access token context .
6676	AccessTokenFromContext extracts the access token from a context .
6677	RandomAccessToken generates a random access token .
6678	Init initializes the zap logger
6679	Load loads a Dic from the given path .
6680	Start is part of the storage . Storage interface .
6681	Get retrieves a session from the database .
6682	List returns a list of sessions .
6683	Exists implements Storage . Exists .
6684	Abandon implements Storage .
6685	SetValue implements Storage . SetValue .
6686	Delete deletes a session .
6687	Setup sets up the storage .
6688	TearDown removes the schema from the database .
6689	initJaeger creates a new instance of zapjaeger .
6690	Usage prints the usage of kagome . ipadic
6691	Build builds a DoubleArray from a list of keywords .
6692	Read reads a DoubleArray from r .
6693	Get returns a node based on the number of nodes in the cluster .
6694	ExternalNodes returns the list of external nodes in the cluster .
6695	GetOther returns a node with the given access token .
6696	GoString returns a string representation of the cluster .
6697	Scan scans src into b .
6698	Value returns the value of the bag .
6699	Has returns true if the bag contains the given key .
6700	WriteTo writes the index table to the given writer .
6701	ReadIndexTable reads the index table from r .
6702	New creates a new ActionBar .
6703	RegisterAction registers an action with the ActionBar .
6704	Actions creates a new ActionBar with the given actions .
6705	Render renders the ActionBar .
6706	FuncMap creates a FuncMap from the ActionBar .
6707	EditMode returns true if the action is in edit mode .
6708	SwitchMode sets the qor - action - bar cookie
6709	InlineEdit renders the action_bar inline .
6710	Error returns a string representation of the error .
6711	ParseFile parses a file .
6712	FindMachine finds a machine by filename and name .
6713	New creates a new Kace .
6714	Camel returns a camel case for the given string .
6715	Pascal returns the Pascal representation of a string .
6716	Snake returns the string representation of a snake .
6717	SnakeUpper returns the upper bound of s as a string .
6718	Kebab returns the name of a kebab .
6719	KebabUpper returns the upper case of a kebab .
6720	isPathSafe checks if a path is safe .
6721	Start starts the WriterTracer .
6722	ParseAuthHeaders parses a request s authorization headers .
6723	Tracer returns a ClientParam that sets a new Tracer .
6724	HTTPClient sets the http . Client .
6725	BasicAuth sets basic auth to the given username and password .
6726	BearerAuth sets the bearer authentication token .
6727	CookieJar sets the cookie jar for the client .
6728	SanitizerEnabled specifies if sanitizer is enabled .
6729	OpenFile opens a file and returns a ReadSeekCloser .
6730	RoundTrip wraps a RoundTripFn and returns a Response .
6731	SetAuthHeader sets the authorization header .
6732	FileName returns the filename of the response .
6733	newBuffersFromFiles creates a new slice of buffers from a slice of Files .
6734	newFileBuffer creates a new file buffer .
6735	rewind rewinds the buffer .
6736	ConvertResponse converts a url . Error to a Response .
6737	Set sets the value of a BoolOption .
6738	WriteAnswer writes a boolean answer .
6739	String returns a string representation of the BoolOption .
6740	TriggerIncidentKey returns the incident key for the given description and key .
6741	TriggerWithDetails triggers an event with the given description and details .
6742	TriggerIncidentKeyWithDetails triggers an incident with the given description key and details .
6743	Merge merges src into dst .
6744	setSource sets the value of v to the value of v .
6745	convertString converts src to dst .
6746	Do executes a function on a transaction .
6747	NewFile returns an io . Writer that writes to the given filename .
6748	internalRun implements the internalRun interface .
6749	String returns a string representation of the row .
6750	Tabulate converts a slice of ResultSets into a slice of rows .
6751	AmazonRequest sends a request to Amazon .
6752	WriteTabularData writes tabular data to w .
6753	Reduce returns a slice of ResultSets sorted by timestamp .
6754	NewSemaphore creates a new Semaphore .
6755	Release releases the semaphore .
6756	Resize resizes the semaphore to the given capacity .
6757	AddOutput adds a new output to the bench .
6758	RunBenchmarks implements Bench . RunBenchmarks .
6759	parseBool parses a boolean .
6760	checkInteger checks if the bytes are a minimally - encoded integer .
6761	parseInt64 parses a 64 - bit integer .
6762	parseInt32 parses an int32 .
6763	parseBigInt parses a big . Int from bytes .
6764	parseBitString parses a BIT string .
6765	parseObjectIdentifier parses an OBJECT IDENTIFIER .
6766	parseBase128Int parses a base 128 integer .
6767	parseGeneralizedTime parses a byte slice into a time . Time .
6768	parsePrintableString parses a printable string .
6769	isPrintable returns true if b is a printable byte .
6770	parseSequenceOf parses a sequence of bytes into a reflect . Value .
6771	invalidLength returns true if the length of a slice is less than or equal to the offset .
6772	setDefaultValue sets the default value of a reflect . Value .
6773	UnmarshalWithParams unmarshals val into b .
6774	parseFieldParameters parses a string to fieldParameters .
6775	getUniversalType returns the tagNumber and isCompound of the given type .
6776	DecodeString decodes a string into a byte slice .
6777	MailNotifier retrieves a MailNotifier from the database .
6778	SaveMailNotifier saves a mail notifier .
6779	RegisterProvider registers a new auth provider .
6780	InitDb initializes the user table .
6781	Until runs f until stopCh is closed .
6782	logPanic logs the panic
6783	User returns the user with the given username .
6784	Users returns a list of all users matching the given filter .
6785	SaveUser saves a user to the database .
6786	DeleteUser deletes a user record from the database .
6787	LoadCACertFile loads a CA certificate from a PEM file .
6788	NewAuth creates a new Auth instance .
6789	ValidateRequest validates a request .
6790	Process implements the http . Handler interface .
6791	ValidateCN validates a CN .
6792	ValidateOU validates an OU .
6793	KeyLen returns the length of a key .
6794	DefaultConfig returns the default configuration .
6795	New returns a new spec . CertSigner .
6796	New creates a new vault factory .
6797	DefaultServiceConfig returns the default configuration for the vault service .
6798	NewService creates a new Vault service .
6799	Delete deletes a cluster .
6800	IsNoVaultHandlerDefined returns true if the given error indicates that there is no Vault handler defined .
6801	New creates a new vault service .
6802	Create creates a new role .
6803	CreateJob creates a new job .
6804	Run runs the config .
6805	newWatcher creates a new watcher .
6806	Start starts the watcher .
6807	Stop stops the watcher .
6808	Active returns true if the watcher is active .
6809	Add adds a list of paths to the watcher .
6810	watch sends a notification to the sndch channel .
6811	Watching returns a list of paths to watch for changes .
6812	State returns the state of the watcher .
6813	Store stores an error in the request context .
6814	Get retrieves the value from the request context .
6815	Catch wraps an http . HandlerFunc as a http . HandlerFunc .
6816	Try implements the http . Handler interface .
6817	Recover returns a middleware that recovers from panics .
6818	Creates a GET request and sends an event - stream .
6819	SyncHandler returns a http . Handler that synchronizes a gostruct with Velox .
6820	connect connects to the websocket transport .
6821	send sends an update to the connection .
6822	NumConnections returns the number of connections .
6823	Push pushes the state to the queue .
6824	gopush pushes the state to the goroutine .
6825	NewOutForward creates a new OutForward .
6826	Run runs the InTail .
6827	New returns a new instance of Fluent .
6828	Close closes the Fluent connection .
6829	IsReconnecting returns true if we are reconnecting .
6830	connect connects to the server .
6831	Notification returns a GNotifier with the given title and message .
6832	NullNotification creates a GNotifier with a null notification .
6833	New creates a new identity .
6834	Issue creates a new identity with the given id .
6835	Subject sets the subject field .
6836	PrivateKey adds a private key to the configuration .
6837	NotBefore is an Option setter for notBefore .
6838	NotAfter is an Option to set the value of notAfter .
6839	IssuingCertificateURL sets the issuing certificate URL .
6840	OCSPServer adds an OCSP server to the configuration .
6841	New creates a new TelegramBotAPI .
6842	NewWithWebhook creates a new TelegramBotAPI with a webhook .
6843	Close closes the TelegramBot API .
6844	GetMe returns a UserResponse from TelegramBot .
6845	RunBot runs a bot .
6846	RunBotOnWebhook runs a bot on a webhook .
6847	NewOutgoingMessage creates a new outgoing message .
6848	NewOutgoingLocation creates a new OutgoingLocation .
6849	NewOutgoingVenue creates a new OutgoingVenue
6850	NewOutgoingVideo creates a new OutgoingVideo .
6851	NewOutgoingVideoResend creates a new OutgoingVideo .
6852	NewOutgoingPhoto creates a new outgoing photo .
6853	NewOutgoingPhotoResend creates a new outgoing photo .
6854	NewOutgoingSticker creates a new OutgoingSticker .
6855	NewOutgoingStickerResend creates a new OutgoingSticker .
6856	NewOutgoingVoice creates a new OutgoingVoice .
6857	NewOutgoingVoiceResend creates a new OutgoingVoice .
6858	NewOutgoingAudio creates a new OutgoingAudio .
6859	NewOutgoingAudioResend creates a new OutgoingAudio .
6860	NewOutgoingDocument creates a new OutgoingDocument .
6861	NewOutgoingDocumentResend creates a new OutgoingDocument .
6862	NewOutgoingForward creates a new OutgoingForward .
6863	NewOutgoingChatAction creates a new outgoing chat action .
6864	NewOutgoingUserProfilePhotosRequest creates a new outgoing user profile photos request .
6865	NewOutgoingKickChatMember creates a new outgoing kick chat member .
6866	NewOutgoingUnbanChatMember creates a new outgoing unban chat member
6867	NewOutgoingCallbackQueryResponse creates a new outgoing callback query response .
6868	NewInlineQueryAnswer creates a new InlineQueryAnswer
6869	Type returns the message type .
6870	Type returns the update type .
6871	MarshalJSON implements json . Marshaler for Recipient .
6872	querystring returns a string representation of the set URL .
6873	getBaseQueryString returns the query string for the outgoingBase .
6874	getBaseQueryString returns the base query string .
6875	querystring returns the query string for the outgoing audio .
6876	querystring returns the querystring for the photo .
6877	querystring returns the query string for the user profile photos request .
6878	querystring returns the querystring for the outgoing video .
6879	querystring returns the string representation of the query .
6880	NewInlineQueryResultArticle creates a new InlineQueryResultArticle
6881	NewInlineQueryResultPhoto creates a new inline query photo .
6882	NewInlineQueryResultGif creates a new InlineQueryResultGif .
6883	NewInlineQueryResultMpeg4Gif creates a new InlineQueryResultMpeg4Gif
6884	NewInlineQueryResultVideo creates a new inline query video .
6885	Send sends the user profile photos request .
6886	Send sends an outgoing chat action .
6887	Send an InlineQueryAnswer
6888	Send sends a JSON response to a kick chat member .
6889	Send sends a message to the unban chat member .
6890	Send sends a JSON response .
6891	NewAPIClient creates a new APIClient .
6892	BeforeInsert is called before a time stamp is created or updated .
6893	ColumnName returns the column name for a given dialect .
6894	New creates a new database .
6895	From creates a From from a struct .
6896	Where creates a Where condition .
6897	OrderBy creates a new Condition .
6898	Limit creates a new condition with the given limit .
6899	Offset creates a new condition with the given offset .
6900	Join creates a new JoinCondition .
6901	Count creates a new Count function .
6902	Update updates an object in the database .
6903	Delete deletes an object from the database .
6904	Begin starts a new transaction .
6905	Commit commits the transaction to the database .
6906	Quote is part of the DB interface .
6907	SetLogOutput sets the default logger for the database .
6908	selectToSlice takes a slice of rows and a reflect . Type and returns a reflect . Value .
6909	selectToValue returns a reflect . Value from a set of rows .
6910	fieldIndexByName returns the index of a field by its name .
6911	columns returns the name of the columns in a table .
6912	tagsFromField converts a struct field to a list of options .
6913	hasSkipTag returns true if the given field has a skip tag .
6914	hasPKTag returns true if a field has a PK tag .
6915	isAutoIncrementable returns true if the field is auto incrementable .
6916	collectFieldIndexes returns a slice of indexes for a given field type .
6917	findPKIndex returns a list of PK tags for a given type .
6918	sizeFromTag returns the size of a field from a tag .
6919	columnFromTag converts a struct field to a human readable string .
6920	defaultFromTag returns the default tag for the given field .
6921	Where appends a Where query to the condition .
6922	And adds an And expression to the query .
6923	Or adds an OR condition to the query .
6924	Like adds a like query to a condition .
6925	Between adds a query between from and to to the condition .
6926	OrderBy creates an order by condition .
6927	Limit adds a limit to a condition .
6928	Offset adds an offset to the query .
6929	SetFormat sets the logger s format .
6930	Print logs a message .
6931	Print implements the Logger interface .
6932	Quote quotes a string .
6933	SQLType implements the SQL interface for PostgresDialect .
6934	New creates a new tar archive .
6935	Disconnect disconnects the host .
6936	nextNetworkAdapterID returns the next network adapter ID for the given VM .
6937	totalNetworkAdapters returns the total number of network adapters in vmx .
6938	RemoveAllNetworkAdapters removes all network adapters from the VM .
6939	RemoveNetworkAdapter removes a network adapter from the VM .
6940	NetworkAdapters returns a list of network adapters for this VM .
6941	newArchive creates a new 7z archive .
6942	GetFileReader returns an io . ReadCloser for the given file name .
6943	ExtractToWriter extracts the archive to an io . Writer
6944	ExtractToFile extracts the archive to a file .
6945	SharedFoldersParentDir returns the parent directory of a shared folder .
6946	Name returns the name of the snapshot .
6947	Description returns the description of the snapshot .
6948	cleanupSnapshot cleans up the Snapshot .
6949	BusTypeFromID converts an ID to a vmx . BusType .
6950	Read implements ioutil . ReadFile .
6951	Write writes the VMXFile to disk .
6952	NewVirtualMachine creates a new virtual machine .
6953	Vcpus returns the vcpus of the VM .
6954	VmxPath returns the VM s vmx path .
6955	MemorySize returns the memory size of the VM .
6956	ReadOnly returns true if the VM is read - only .
6957	InVMTeam returns true if the VM is in the team .
6958	PowerState returns the VM s power state .
6959	ToolsState returns the VM s tools state .
6960	IsRunning returns true if the VM is running .
6961	GuestOS returns the guest OS of the VM .
6962	cleanupVM cleans up a VM .
6963	updateVMX updates the VM s vmx settings .
6964	SetMemorySize sets the memory size of the VM .
6965	SetNumberVcpus sets the number of vcpus of the VM .
6966	SetDisplayName sets the display name of the VM .
6967	SetAnnotation sets the annotation for the VM .
6968	SetVirtualHwVersion sets the virtual machine version .
6969	Error returns a string representation of the error .
6970	Errorf is a wrapper around fmt . Errorf .
6971	Error returns the string representation of the traceable error .
6972	string returns a string representation of the stack frame .
6973	newStackFrame creates a new stack frame .
6974	captureStack returns a slice of stackFrames with the given skip and maxDepth .
6975	parseFuncName parses fnName into packagePath and signature .
6976	Stack logs an error as a stack trace .
6977	StackWithCaller creates a stack with a caller .
6978	Write implements io . Writer .
6979	ResponseStatus returns the status of the response .
6980	httpResponseStruct converts a reflect . Value to a reflect . Value .
6981	SetDetectedContentType sets the Content - Type header .
6982	New creates a new ServerError instance
6983	New creates a new DBError instance
6984	New creates a new ValidationError instance
6985	New creates a new NotFoundError instance
6986	StrLength returns the length of a field .
6987	StrLenIn returns the length of a string .
6988	StrIn adds a string to a field .
6989	GetEmail returns the email associated with the fieldName . If fieldName is nil it will panic .
6990	MostSpecificType returns the most specific type from a list of types .
6991	FullTypeHierarchy returns the full typeHierarchy for the given highestLevelType .
6992	SortTypes returns a sorted list of types .
6993	Delete removes a value from the redis store
6994	Set sets a value for a key .
6995	refresh refreshes the redis store .
6996	Get returns the redis store for the given sid .
6997	Destroy removes the sid from the redis pool
6998	UpExpire expires a session .
6999	Use adds a RouterHandler to the stack .
7000	ServeHTTP implements HandlersStack .
7001	Use adds a middleware to the router group .
7002	Group creates a new RouterGroup .
7003	Run runs the server .
7004	create creates a new engine .
7005	Redirect sends a redirect to the given URL .
7006	Ok sends a response with status code 0 .
7007	Fail sends an error to the server .
7008	ResStatus returns the status of the request .
7009	Next moves the cursor to the next handler .
7010	GetSession returns the current session .
7011	GetBodyJSON returns the request body as JSON .
7012	SetSession sets a session
7013	FreshSession expires the session with the given key .
7014	DeleteSession deletes a session
7015	Write implements ResponseWriter .
7016	WriteHeader implements ResponseWriter .
7017	New creates a new Client .
7018	setAllowLargeResults sets the allowLargeResults flag .
7019	connect creates a new bigquery service .
7020	InsertRow inserts a new row .
7021	AsyncQuery performs an async query .
7022	Query performs a paged query .
7023	stdPagedQuery executes a paged query .
7024	largeDataPagedQuery runs a large data pagination query .
7025	pagedQuery performs a paged query .
7026	pageOverJob adds a page to a job .
7027	Count returns the number of items in a dataset .
7028	work crawls the given urls and returns the crawl result .
7029	subworker creates a new subworker for the given job .
7030	worker sends a job to a sub - worker .
7031	supervisor creates a SUPERVISOR LOOP for a job .
7032	Run starts the pool .
7033	Add adds a job to the pool
7034	Wait blocks until the pool is full .
7035	Results returns a list of all jobs in the pool .
7036	WaitForJob waits for a job to be created .
7037	Status returns the status of the pool .
7038	WrapHTTPHandlerFunc wraps an http . HandlerFunc into a HandlerFunc .
7039	WebSocketHandlerFunc wraps a websocket . HandlerFunc into a HandlerFunc .
7040	StaticFile returns a static file .
7041	PreloadFile preloads a file .
7042	InitHtmlTemplates initializes html templates
7043	InitTextTemplates initializes text templates
7044	Html creates a template with the given name content type and charset .
7045	Text creates a text template with the given name content type and charset .
7046	InitWatcher initializes a watcher .
7047	CloseWatcher closes the watcher .
7048	Find returns a url . Values handler and a view . View that matches the given path .
7049	Add adds a new router to the routers list .
7050	NewRouters returns a new instance of Routers
7051	NewServerMux creates a new server mux .
7052	err is part of the ServerMux interface .
7053	HandleFunc adds a handler function to the mux .
7054	handleError handles an error .
7055	Redirect redirects the request to the given URL .
7056	InitPProf initializes pprof handlers
7057	StartSession starts a session
7058	combinations returns a channel that will be closed when the list is empty .
7059	repeated_combinations returns a channel of repeated_combinations .
7060	permutations returns a channel containing the permutations of a list .
7061	repeated_permutations returns a channel that will be closed if the list is empty .
7062	gformat takes a format string and a map of arguments and returns a formatted string and a slice of arguments .
7063	Errorm is a convenience wrapper around fmt . Errorf .
7064	Fprintm writes a formatted message to w .
7065	Printm is a convenience wrapper around fmt . Printf .
7066	Sprintm is a wrapper around fmt . Sprintf .
7067	Validate returns true if the password is valid .
7068	MakeRequirements creates a PasswordStrengthRequirements from a password string .
7069	sanityCheck returns true if the password is sane .
7070	password generates a password based on req .
7071	NewPassword creates a new password
7072	NewPasswords creates a new password list .
7073	addNums adds numDigits to p .
7074	punctuate punctuates a string with numPunc .
7075	deprecated_init initializes a deprecated device .
7076	Param adds a parameter to the set .
7077	Parse parses a JSON - encoded ParamSet .
7078	Unmarshal implements the json . Unmarshaler interface .
7079	GetDefaultHTTPClient returns the default HTTP client
7080	DeviceInfo returns information about a device .
7081	DevicePresence sends a device presence request to Pushy .
7082	NotificationStatus returns the notification status for the given push .
7083	DeleteNotification deletes a notification .
7084	NotifyDevice sends a notification to the Pushy endpoint .
7085	Assert asserts that b is true .
7086	CreateFile creates a new file .
7087	AddError adds an error to the form .
7088	AddFieldError adds an error to the form .
7089	HasErrors returns true if the form has errors .
7090	NewError creates a new FormErrors
7091	NewFieldError creates a new FormErrors with the given field and e .
7092	ChainHandlers creates a new http . Handler from a list of handlers .
7093	FinalHandler returns a function that wraps the given http . Handler .
7094	Hash implements the MD5Hasher interface .
7095	IsHash returns true if the given string is a valid MD5 hash .
7096	WithBaseDir returns an Option setter for base directory .
7097	WithFileFindFunc is an Option setter for file find function .
7098	WithTemplateFromFiles adds a template to a list of files .
7099	WithTemplatesFromFiles creates an Option that sets the names of the templates in the given files .
7100	WithTemplateFromStrings sets the template name to the given strings .
7101	WithTemplatesFromStrings returns an Option that sets the names of the templates in the given map to the given strings .
7102	WithFunction adds a function to the options .
7103	WithFunctions returns an Option that sets a template . FuncMap .
7104	WithDelims sets the open and close delimiters .
7105	New creates a new Templates object .
7106	RespondWithStatus writes a response with the given status code .
7107	RespondTemplate writes a response with status code 0 .
7108	Respond writes a response with status code 0 .
7109	RenderTemplate renders a template .
7110	New creates a new h2quic server
7111	ServeUDP serves a UDP connection .
7112	Shutdown shuts down the server .
7113	QuicHeadersHandler implements the http . Handler interface for Server .
7114	GetRequestIPs returns the ip addresses for the request .
7115	DomainRedirectHandler returns a http . Handler that redirects to the given domain .
7116	New creates a new Servers instance .
7117	Add adds a new server to the list .
7118	TCPAddr implements net . Servers . TCPAddr .
7119	UDPAddr returns a net . UDPAddr based on the server name .
7120	Close closes all servers .
7121	Shutdown shuts down all servers .
7122	Accept accepts a TCP connection .
7123	NewStaticFilesHandler creates a new static file handler .
7124	ServeHTTP implements the http . Handler interface .
7125	MarshalJSON implements json . Marshaler .
7126	UnmarshalJSON handles deserialization of a Options struct . This custom unmarshaling is needed because the resulting property may be an error .
7127	MarshalYAML returns a YAML representation of the options .
7128	UnmarshalYAML implements the yaml . Unmarshaler interface .
7129	NewHandler creates a new http . Handler .
7130	WithPanicResponse adds a panic response to the handler
7131	WithPanicResponseHandler sets the panic response handler
7132	New creates a new Handler .
7133	ServeHTTP implements http . Handler .
7134	NewContextFunc creates a new context function .
7135	NewMapErrorRegistry creates a new MapErrorRegistry .
7136	AddError adds an error to the error registry .
7137	AddMessageError adds a message error to the error registry .
7138	MustAddError is like AddError but panics if there is an error .
7139	MustAddMessageError is like AddMessageError but panics on error .
7140	AddHandler adds a handler function to the error registry .
7141	MustAddHandler is like AddHandler but panics if there is an error .
7142	Handler implements the ErrorRegistry interface .
7143	New creates a new Client .
7144	Request implements http . Client . Request .
7145	JSONContext returns a JSON - encoded response .
7146	StreamContext sends a stream request with the given context .
7147	Stream implements Streamer . StreamContext .
7148	JSONUnmarshal unmarshals JSON into v .
7149	ServeTCP implements net . Listener .
7150	ServeTCP is part of the net . Server interface .
7151	Shutdown gracefully stops the server .
7152	HandleMethods implements the http . Handler interface .
7153	NewSetHeadersHandler creates a new http . Handler that sets the given headers .
7154	New creates a new server .
7155	HashedPath returns the hashed path for the given filename .
7156	New creates a new Service .
7157	HTMLHandler implements the http . Handler interface .
7158	Status returns the status of the service .
7159	StatusHandler returns the status of the service .
7160	OnHandler implements the http . Handler interface .
7161	OffHandler implements the OffHandler interface .
7162	MarshalJSON method of PostIRCMessageRequest
7163	MarshalJSON method of PostArtifactRequest
7164	MarshalJSON method of PostArtifactResponse
7165	MarshalJSON method of HookChangedMessage
7166	MarshalJSON method of TriggerHookRequest
7167	MarshalJSON method of TriggerHookResponse
7168	UnmarshalJSON implements the json . Unmarshaler interface .
7169	MarshalJSON implements json . Marshaler for LaunchInfo
7170	MarshalJSON implements json . Marshaler for Var
7171	MarshalJSON implements the json . Marshaler interface
7172	MarshalJSON implements the json . Marshaler interface
7173	MarshalJSON implements the json . Marshaler interface .
7174	UnmarshalJSON implements the json . Unmarshaler interface .
7175	Write implements the ReadWriteSeeker interface .
7176	Seek implements the Seeker interface for ReadWriteSeeker .
7177	Read implements the ReadWriteSeeker interface .
7178	MarshalJSON method of LaunchSpecsResponse
7179	MarshalJSON method of RegionLaunchSpec
7180	GenerateCode generates a code for the api definitions .
7181	postPopulate adds the given APIDefinition to the given APIEntry .
7182	CreateTemporaryCredentials creates temporary credentials .
7183	setURL sets the base URL for the given route and query url . Values
7184	SignRequest generates a hawk ext header from the given request .
7185	APICall executes an API call .
7186	SignedURL creates a new signed URL .
7187	MarshalJSON method of HawkSignatureAuthenticationResponse
7188	bmw256 converts a byte slice to a bmw256 byte slice
7189	NewCubeHash creates a new CubeHash .
7190	cubehash256 returns a 256 - bit cube hash of data .
7191	Sum returns the sum of a slice of bytes .
7192	squeeze squeezes out into state .
7193	reducedSqueezeRow0 reduces nCols to 0 .
7194	reducedDuplexRow1 takes a slice of uint64s and a slice of nCols and a slice of uint64s and a slice of uint64s and a slice of uint64s and a slice of nCols .
7195	NewReaderByteCodeLoader creates a new ReaderByteCodeLoader
7196	LoadReader loads a ReaderByteCode from rdr .
7197	NewV3 creates a new UUID of type V3 .
7198	txLiteral implements the tx . Textual interface .
7199	txFetchSymbol fetches the symbol of a transaction .
7200	txMarkRaw marks the state as a raw string .
7201	txUnmarkRaw unmarshals a raw string .
7202	txPrint is used to print a transaction .
7203	txPrintRaw prints a string to st .
7204	NewLoopVar creates a new LoopVar .
7205	txMakeArray creates a new array .
7206	txFunCallOmni implements the txFunCall interface .
7207	DumpAST dumps the AST flag .
7208	DumpByteCode dumps a byte code .
7209	Optimize implements the Optimizer interface .
7210	NewFuncDepot creates a new FuncDepot .
7211	Get returns the value associated with the given key .
7212	Set adds a value to the depot .
7213	NewFileTemplateFetcher creates a new FileTemplateFetcher .
7214	LastModified returns the last time the file was modified .
7215	Reader returns an io . Reader for the FileSource .
7216	Bytes returns the contents of the source as a byte slice .
7217	NewState creates a new State .
7218	PushFrame pushes a frame to the frame stack .
7219	PopFrame removes a frame from the state .
7220	CurrentFrame returns the current frame .
7221	Warnf writes a warning message .
7222	AppendOutputString appends a string to the output .
7223	Popmark removes the mark from the markstack and returns it .
7224	CurrentMark returns the current mark of the state .
7225	LoadByteCode loads a ByteCode from state .
7226	Reset resets the state .
7227	DeclareVar declares a variable in the frame .
7228	GetLvar returns the local variable at index i .
7229	SetLvar sets the value at index i to the value at index v .
7230	NewByteCode creates a new ByteCode .
7231	Append appends an operation to the ByteCode .
7232	AppendOp creates a new append operation .
7233	String returns a string representation of the ByteCode .
7234	NewCachedByteCodeLoader creates a new CachedByteCodeLoader .
7235	Load loads a template from the cache .
7236	NewFileCache creates a new FileCache .
7237	GetCachePath returns the cache path for the given key .
7238	Get returns the CacheEntity for the given key .
7239	Set adds a new entity to the cache .
7240	Delete removes a file from the cache
7241	Get returns the CacheEntity for the given key .
7242	Set sets the CacheEntity for the given key .
7243	Delete deletes a key from the cache .
7244	NewStringLexer returns a new parser . Lexer for the given template .
7245	NewReaderLexer returns a new parser . Lexer that reads from rdr .
7246	NewV4 returns a new version 4 UUID .
7247	Parse parses a string and returns an AST .
7248	ParseReader parses an io . Reader .
7249	Visit returns a channel that will be closed when the node is closed .
7250	String returns a string representation of the AST .
7251	Run runs the VM .
7252	DefaultParser is the default parser for Xslate .
7253	DefaultLoader is the default loader
7254	DefaultVM creates the default VM .
7255	Get returns the value for a given key .
7256	NewHTTPSource creates a new HTTPSource .
7257	NewStringByteCodeLoader creates a new StringByteCodeLoader
7258	LoadString loads a string from a template .
7259	Get returns the value for a key .
7260	NewOp creates a new Op .
7261	MarshalBinary marshals an op to binary .
7262	UnmarshalBinary unmarshals a byte slice into an op
7263	ArgInt returns the argument as an int .
7264	ArgString returns the argument as a string .
7265	AppendOp implements vm . Context AppendOp .
7266	Compile compiles AST into a vm . ByteCode .
7267	NewV5 creates a new UUID of type V5 .
7268	Sort sorts the LexSymbolList .
7269	Less returns true if the element at index i should sort before the element at index j .
7270	Swap swaps two indexes .
7271	Copy returns a copy of the set .
7272	Set adds a new LexSymbol to the set .
7273	GetSortedList returns the sorted list of symbols .
7274	Top returns the top element of the stack .
7275	Resize resizes the stack to the given size .
7276	Extend extends the stack by the given number of bytes .
7277	Grow increases the size of the stack to the specified minimum .
7278	Get returns the value at index i from the stack .
7279	Set sets the value at index i to the value v .
7280	Push adds a new value to the stack .
7281	Pop removes a value from the stack .
7282	String returns a string representation of the stack .
7283	GetHostIPs returns a list of host ip addresses .
7284	GetPrivateHostIPs returns a list of private IP addresses .
7285	IsPrivate returns true if the given IP is a private IP .
7286	Environ returns a list of environment variables .
7287	getenv returns the environment variable with the given name . If not found ok is false .
7288	flagAsEnv converts a flag name to an environment variable .
7289	NewPolicy creates a new policy .
7290	CreateRandom creates a new random byte slice .
7291	Shuffle shuffles a slice of bytes .
7292	Generate generates a string from a policy .
7293	ExecutableFolder returns the path to the executable file .
7294	Ignore returns an Option that adds an ignore function to the list of errors to ignore .
7295	Sigs is an Option to set the sigs of the Sentinel .
7296	Logf is an Option to set the logf function for the Sentinel .
7297	Errorf is an Option to set the error function .
7298	New creates a new Sentinel .
7299	Run is part of the Sentinel interface .
7300	Shutdown shuts down the Sentinel .
7301	ShutdownIgnore implements Sentinel .
7302	Register registers a server with the Sentinel .
7303	Mux implements netmux . Sentinel .
7304	HTTP implements the http . Server interface for Sentinel .
7305	IgnoreError returns a function that ignores the given error .
7306	IgnoreNetOpError returns true if the given error is a net . OpError .
7307	convertAndAppendContextFuncs converts and appends functions to a context .
7308	router creates a new mux router .
7309	buildInfoHandler is a build - info handler
7310	Encode encodes a json string into a byte slice .
7311	Json implements the martini . Handler interface for http . Request .
7312	validateAndMap validates and maps obj to ifacePtr .
7313	Count returns the number of errors .
7314	Header returns a map of headers for the given origin .
7315	PreflightHeader returns a map of headers for a preflight request .
7316	IsOriginAllowed returns true if the origin is allowed .
7317	Allow returns an http . HandlerFunc that accepts OPTIONS requests .
7318	Renderer returns a martini . Handler that renders the request .
7319	String returns a string representation of AcceptLanguages .
7320	Languages returns a martini . Handler that accepts languages .
7321	Prefix returns a martini . Handler that handles requests with a prefix .
7322	Basic returns an http . HandlerFunc that adds basic authentication to the request .
7323	UpdateUser updates a user in the session .
7324	GetById returns a user by id .
7325	AddressToAccountId converts a string to an AccountId
7326	MutateChangeTrust is part of the xdr . Asset interface .
7327	MutateChangeTrust implements the MutateChangeTrust interface for Limit .
7328	Trust creates and returns a ChangeTrustBuilder .
7329	RemoveTrust returns a ChangeTrustBuilder that removes trust from an issuer .
7330	MutatePayment mutates an existing payment .
7331	MutatePayment sets the payment id of the destination .
7332	MutatePayment mutates an existing payment .
7333	MutatePayment mutates an existing payment .
7334	MutateAccountMerge implements AccountMergeBuilder .
7335	MustParse parses a string and panics if an error occurs .
7336	Parse parses a string into an Int64 .
7337	String returns a string representation of v .
7338	CreateOffer creates a new offer with the given rate and amount .
7339	CreatePassiveOffer creates a passive offer with the given rate and amount .
7340	UpdateOffer creates a new ManageOffer .
7341	DeleteOffer creates a new ManageOffer with the given rate and offer ID .
7342	ManageOffer creates a new ManageOfferBuilder .
7343	Mutate mutates the ManageOfferBuilder .
7344	MutateManageOffer changes the value of a ManageOfferOp .
7345	MutateManageOffer mutates an existing ManageOfferOp .
7346	MutateManageOffer mutates an existing ManageOfferOp .
7347	MutateOperation sets the source account id .
7348	String returns a string representation of the price .
7349	Transaction creates a new TransactionBuilder .
7350	Mutate implements the TransactionBuilder interface .
7351	Hash returns the hash of the transaction .
7352	HashHex returns the hash of the transaction .
7353	Sign creates a new TransactionEnvelopeBuilder with the given signers .
7354	MutateTransaction adds a transaction to the AllowTrustBuilder .
7355	MutateTransaction mutates a TransactionBuilder .
7356	MutateTransaction adds a new transaction to the CreateAccountBuilder .
7357	MutateTransaction mutates a transaction .
7358	MutateTransaction adds a transaction to the InflationBuilder .
7359	MutateTransaction mutates a transaction .
7360	MutateTransaction adds a new transaction to the handler .
7361	MutateTransaction implements the TransactionBuilder interface .
7362	MutateTransaction mutates a transaction .
7363	MutateTransaction adds a new transaction to the MemoReturn .
7364	MutateTransaction adds a new transaction to the MemoText .
7365	MutateTransaction mutates a transaction .
7366	MutateTransaction mutates a transaction .
7367	MutateTransaction adds a new transaction to the set .
7368	MutateTransaction mutates a transaction .
7369	MutateTransaction adds a new transaction to the source account .
7370	Scan scans a value from src into t .
7371	InitialState implements the Ledger interface for Bundle .
7372	Changes implements the Ledger interface for Bundle .
7373	StateAfter implements the xdr . Ledger interface .
7374	changes returns a slice of LedgerEntryChanges for a given LedgerKey and maxOp .
7375	MustDecode is like Decode but panics if src is not nil .
7376	Encode encodes a version byte into a string .
7377	MustEncode encodes src to version . Panics on error .
7378	checkValidVersionByte checks if the given version is valid .
7379	Checksum returns the checksum of the data .
7380	Validate returns ErrInvalidChecksum if data is equal to expected .
7381	LedgerKey returns the change s LedgerKey .
7382	checkPlausible checks if a prefix is in the base32 alphabet
7383	Address returns the address of the account id .
7384	Equals returns true if two account ids are equal .
7385	SetAddress sets the address of the account id .
7386	ToXdrObject converts an Asset to an xdr . Asset .
7387	Through adds an asset to the send path .
7388	PayWith creates a PayWithPath with the given asset and maxAmount .
7389	continuedFraction returns a xdr . Price for a continued fraction .
7390	Mutate implements the TransactionEnvelopeBuilder interface .
7391	MutateTX mutates a transaction envelope .
7392	Bytes implements the Bytes method of the TransactionEnvelopeBuilder interface .
7393	Base64 returns the base64 encoding of the envelope .
7394	MutateTransactionEnvelope adds a new transaction envelope to the transaction builder .
7395	MutateSetOptions sets the HomeDomain field to the given value .
7396	MutateSetOptions modifies the InflationDest .
7397	MutateSetOptions sets the MasterWeight to the given value .
7398	MutateSetOptions sets the Signer s PublicKey and Signer s Signer s Signer .
7399	SetThresholds sets the thresholds .
7400	MutateSetOptions modifies the Thresholds .
7401	MutateSetOptions mutates the set options of a SetFlag .
7402	MutateSetOptions mutates the flag in the SetFlag mutator .
7403	MutateCreateAccount implements the MutateCreateAccount interface for Destination .
7404	MutateCreateAccount implements xdr . CreateAccountOp .
7405	Random reads a random 32 - bit seed and returns a Full .
7406	Master returns a KP for the given network passphrase .
7407	Parse parses a string into a KP .
7408	MustParse is like Parse but panics on error .
7409	MutateAllowTrust implements the MutateAllowTrust interface for Authorize .
7410	MutateAllowTrust implements the MutateAllowTrust interface for AllowTrustAsset .
7411	MutateAllowTrust sets the Trustor s account id .
7412	ToAsset converts an AllowTrustOpAsset to an Asset .
7413	SetNative sets the asset s native state .
7414	String returns a string representation of an Asset .
7415	Equals returns true if two assets are equal .
7416	MustExtract is like Extract but panics if there is an error .
7417	Unmarshal implements xdr . Unmarshaler .
7418	Marshal serializes v to w .
7419	ValidEnum returns true if the given number is a valid crypto key type .
7420	NewPublicKey creates a new public key .
7421	MustEd25519 returns the public key s ed25519 value panics if not set .
7422	NewNodeId creates a new NodeId .
7423	NewAccountId creates a new AccountId .
7424	ValidEnum returns true if the value is in the asset type map .
7425	ArmForSwitch returns the arm for a given asset type and a boolean indicating if the asset type was changed .
7426	NewAsset creates a new Asset .
7427	MustAlphaNum4 returns the asset s AlphaNum4 value . Panics if AlphaNum4 is not set .
7428	GetAlphaNum4 returns the AlphaNum4 field of the asset .
7429	MustAlphaNum12 returns the asset s AlphaNum12 . Panics if AlphaNum12 is not set .
7430	GetAlphaNum12 returns the AlphaNum12 field if it s not set .
7431	ValidEnum returns true if v is in the threshold indexes map .
7432	ValidEnum returns true if v is a valid enum value .
7433	ValidEnum returns true if the value is in the account flags map .
7434	NewAccountEntryExt creates a new AccountEntryExt
7435	ValidEnum returns true if the given number is a valid trust line flag .
7436	NewTrustLineEntryExt creates a new TrustLineEntryExt .
7437	ValidEnum returns true if the given value is in the offer entry flags map .
7438	NewOfferEntryExt creates a new OfferEntryExt .
7439	NewDataEntryExt creates a new DataEntryExt .
7440	NewLedgerEntryData creates a new LedgerEntryData .
7441	NewLedgerEntryExt creates a new LedgerEntryExt .
7442	ValidEnum returns true if the value is in the envelope type map .
7443	ValidEnum returns true if v is a valid enum value of the operation type .
7444	ArmForSwitch returns the arm code and a boolean indicating if the switch is needed .
7445	NewAllowTrustOpAsset creates a new AllowTrustOpAsset .
7446	MustAssetCode4 returns the asset code 4 .
7447	GetAssetCode4 returns the AssetCode4 field if set .
7448	MustAssetCode12 returns the asset code 12 .
7449	GetAssetCode12 returns the AssetCode12 field if set .
7450	NewOperationBody creates a new OperationBody .
7451	MustCreateAccountOp implements the Operation interface for OperationBody .
7452	GetCreateAccountOp returns the CreateAccountOp for the operation body .
7453	MustPaymentOp is like GetPaymentOp but panics if not set .
7454	GetPaymentOp returns the payment operation for the operation body .
7455	MustPathPaymentOp is like GetPathPaymentOp but panics if not set .
7456	GetPathPaymentOp returns the path payment operation .
7457	MustManageOfferOp is like ManageOfferOp but panics if not set .
7458	GetManageOfferOp returns the ManageOfferOp for the operation body .
7459	MustCreatePassiveOfferOp returns the value of CreatePassiveOfferOp if it is set .
7460	GetCreatePassiveOfferOp returns the CreatePassiveOfferOp for the operation body .
7461	MustSetOptionsOp panics if SetOptionsOp is not set .
7462	GetSetOptionsOp returns the SetOptionsOp for the operation body .
7463	MustChangeTrustOp is like ChangeTrustOp but panics if not set .
7464	GetChangeTrustOp returns the change trust operation .
7465	MustAllowTrustOp returns the value of AllowTrustOp if it is set or panics if it is not set .
7466	GetAllowTrustOp returns the AllowTrustOp for the operation body .
7467	MustDestination returns the Arm Destination id . If not set panic .
7468	GetDestination returns the destination of the operation .
7469	MustManageDataOp is like ManageDataOp but panics if not set .
7470	GetManageDataOp returns the ManageDataOp associated with the operation .
7471	ValidEnum returns true if the given value is a valid enum .
7472	ArmForSwitch returns the arm for the given switch .
7473	NewMemo creates a new Memo .
7474	MustText returns the text value of the arm . Panics if the text is not set .
7475	GetText returns the text field of the Memo .
7476	MustId returns the id of the arm . Panics if not set .
7477	GetId returns the id of the memo .
7478	MustHash returns the hash of the memo . Panics if the hash is not set .
7479	GetHash returns the hash of the Memo .
7480	MustRetHash is like GetRetHash but panics if not set .
7481	NewTransactionExt creates a new transaction expression .
7482	ValidEnum returns true if the created account result code is valid .
7483	ArmForSwitch returns the arm for the given switch .
7484	NewCreateAccountResult returns a new CreateAccountResult instance
7485	ValidEnum returns true if the payment result code is valid .
7486	ArmForSwitch returns the arm for the given switch .
7487	NewPaymentResult creates a new PaymentResult .
7488	ValidEnum returns true if enum is a valid enum value
7489	ArmForSwitch returns the path payment result code and a boolean indicating if the switch was successful or not .
7490	NewPathPaymentResult creates a new PathPaymentResult .
7491	MustNoIssuer returns the asset with the no - issuer set . It panics if the asset is not set .
7492	GetNoIssuer returns the no - issuer asset for the path payment result .
7493	ValidEnum returns true if enum is a valid ManageOfferResultCode .
7494	ValidEnum returns true if the value is in the ManageOfferEffectMap .
7495	ArmForSwitch returns the arm for a switch .
7496	NewManageOfferSuccessResultOffer creates a new ManageOfferSuccessResultOffer .
7497	ArmForSwitch returns the name of the switch and a boolean indicating if the switch was successful .
7498	NewManageOfferResult creates a new ManageOfferResult .
7499	ValidEnum returns true if setOptionsResultCode is a valid enum
7500	ArmForSwitch returns the arm code and a boolean indicating if the switch was successful .
7501	NewSetOptionsResult returns a new SetOptionsResult instance
7502	ValidEnum returns true if the value is in the change trust result code map .
7503	ArmForSwitch returns the change trust code and a boolean indicating if the switch was successful .
7504	NewChangeTrustResult returns a new ChangeTrustResult instance
7505	ValidEnum returns true if the given number is in the allow trust result code map .
7506	ArmForSwitch returns a string and a boolean indicating if the switch was successful .
7507	NewAllowTrustResult creates a new AllowTrustResult instance .
7508	ValidEnum returns true if the given enum value is a valid enum value .
7509	ArmForSwitch returns the ArmForSwitch field of an AccountMergeResult . If the result is an AccountMergeResultCodeAccountMergeSuccess the return value is false .
7510	NewAccountMergeResult creates a new AccountMergeResult .
7511	MustSourceAccountBalance returns the source account balance .
7512	GetSourceAccountBalance returns the SourceAccountBalance field if set .
7513	ValidEnum returns true if the given number is a valid inflation result code .
7514	ArmForSwitch returns the inflation result code and a boolean indicating if the switch was successful .
7515	NewInflationResult creates a new InflationResult .
7516	MustPayouts returns a list of inflation payouts . Panics if not set .
7517	GetPayouts returns a list of inflation payouts .
7518	ValidEnum returns true if enum is a valid ManageDataResultCode .
7519	ArmForSwitch returns the name of the switch and a boolean indicating whether the switch was successful .
7520	NewManageDataResult creates a new ManageDataResult .
7521	ValidEnum returns true if the operation result code is valid .
7522	ArmForSwitch returns the arm for a switch operation .
7523	NewOperationResultTr creates a new OperationResultTr .
7524	MustCreateAccountResult implements OperationResultTr . MustCreateAccountResult .
7525	GetCreateAccountResult returns the CreateAccountResult for this operation .
7526	MustPaymentResult is like GetPaymentResult but panics if not set .
7527	GetPaymentResult returns the payment result of the operation .
7528	MustPathPaymentResult is like GetPathPaymentResult but panics if not set .
7529	GetPathPaymentResult returns the path payment result of the operation .
7530	MustManageOfferResult implements OperationResultTr . MustManageOfferResult .
7531	GetManageOfferResult implements OperationResultTr .
7532	MustCreatePassiveOfferResult implements OperationResultTr . MustCreatePassiveOfferResult .
7533	MustSetOptionsResult implements OperationResultTr . MustSetOptions .
7534	GetSetOptionsResult returns the SetOptionsResult for this operation .
7535	MustChangeTrustResult is like ChangeTrustResult but panics if not set .
7536	GetChangeTrustResult returns the change trust result for the operation .
7537	MustAllowTrustResult implements the Operation interface for OperationResultTr .
7538	GetAllowTrustResult returns the AllowTrustResult for the operation .
7539	MustAccountMergeResult implements OperationResultTr . MustAccountMergeResult .
7540	GetAccountMergeResult returns the result of an account merge operation .
7541	MustInflationResult returns the InflationResult of the operation . Panics if InflationResult is not set .
7542	GetInflationResult returns the InflationResult of the operation .
7543	MustManageDataResult is like ManageDataResult but panics if not set .
7544	GetManageDataResult returns the ManageDataResult for the operation .
7545	ArmForSwitch returns the arm for a switch operation .
7546	NewOperationResult creates a new OperationResult .
7547	MustTr is like GetTr but panics if arm is not set .
7548	GetTr implements OperationResult .
7549	ValidEnum returns true if the value is in the transaction result code map .
7550	ArmForSwitch returns a string and a boolean indicating if the switch was successful or failed .
7551	NewTransactionResultResult creates a new transaction result .
7552	MustResults is like GetResults but panics if the result is not set .
7553	GetResults returns the results of a transaction .
7554	NewTransactionResultExt creates a new TransactionResultExt .
7555	NewStellarValueExt creates a new StellarValueExt .
7556	NewLedgerHeaderExt creates a new LedgerHeaderExt .
7557	ValidEnum returns true if v is a valid enum value of the ledger upgrade type
7558	ArmForSwitch returns the arm for the given switch .
7559	NewLedgerUpgrade creates a new LedgerUpgrade instance .
7560	MustNewLedgerVersion is like NewLedgerVersion but panics if not set .
7561	GetNewLedgerVersion returns the new ledger version .
7562	MustNewBaseFee is like NewBaseFee but panics if not set .
7563	GetNewBaseFee returns the new base fee .
7564	MustNewMaxTxSetSize panics if NewMaxTxSetSize is not set .
7565	GetNewMaxTxSetSize returns the new maximum transaction set size .
7566	ArmForSwitch returns the arm for a switch .
7567	NewLedgerKey creates a new LedgerKey .
7568	ValidEnum returns true if enum is a valid bucket entry type .
7569	ArmForSwitch returns the arm for a given bucket entry type . If the bucket entry type is LiveEntry or Deadentry it returns false .
7570	NewBucketEntry creates a new bucket entry .
7571	MustLiveEntry is like GetLiveEntry but panics if it is not set .
7572	GetLiveEntry returns the LedgerEntry associated with the BucketEntry .
7573	MustDeadEntry is like GetDeadEntry but panics if the BucketEntry is not set .
7574	GetDeadEntry returns the LedgerKey and a boolean indicating if the BucketEntry is a DeadEntry .
7575	NewTransactionHistoryEntryExt creates a new TransactionHistoryEntryExt .
7576	ArmForSwitch implements the TransactionHistory interface for TransactionHistoryResultEntryExt
7577	NewTransactionHistoryResultEntryExt returns a new TransactionHistoryResultEntryExt .
7578	NewLedgerHeaderHistoryEntryExt creates a new LedgerHeaderHistoryEntryExt
7579	NewScpHistoryEntry creates a new ScpHistoryEntry .
7580	ValidEnum returns true if the value is a valid enum .
7581	ArmForSwitch returns the arm for the given switch type . If the switch type is a LedgerEntryChangeTypeLedgerEntryCreated or a LedgerEntryChangeTypeLedgerEntryUpdated it returns true .
7582	NewLedgerEntryChange creates a new LedgerEntryChange .
7583	MustCreated implements the LedgerEntry interface for LedgerEntryChange .
7584	GetCreated returns the LedgerEntry that was created by the switch .
7585	MustUpdated implements the LedgerEntry interface for LedgerEntryChange .
7586	GetUpdated returns the LedgerEntryChange that has been updated .
7587	MustRemoved implements the LedgerEntry interface for LedgerEntryChange .
7588	GetRemoved returns the LedgerKey and a boolean indicating if the entry was removed .
7589	MustState implements the LedgerEntry interface for LedgerEntryChange .
7590	GetState returns the current state of the LedgerEntryChange .
7591	NewTransactionMeta creates a new TransactionMeta .
7592	MustOperations returns a list of OperationMetas that must be armed .
7593	GetOperations returns a list of operations associated with the transaction .
7594	ValidEnum returns true if enum is a valid error number .
7595	ValidEnum returns true if the given enum is a valid ip address type .
7596	ArmForSwitch returns the ipv4 and ipv6 arm for the given switch .
7597	NewPeerAddressIp creates a new PeerAddressIp .
7598	MustIpv4 returns the ipv4 value of the peer address .
7599	GetIpv4 returns the IPv4 address of the peer .
7600	MustIpv6 returns the ipv6 value of the peer address .
7601	GetIpv6 returns the ipv6 address of the peer .
7602	ValidEnum returns true if the value is a valid enum .
7603	ArmForSwitch returns the arm for the given switch type .
7604	NewStellarMessage creates a new StellarMessage .
7605	MustError implements the Error interface for StellarMessage .
7606	GetError implements the error interface for StellarMessage .
7607	MustHello returns the Hello value . Panics if the Hello is not set .
7608	GetHello returns the Hello field of the StellarMessage .
7609	MustAuth returns the Auth field if it s not set or panics .
7610	GetAuth returns the Auth field of the StellarMessage .
7611	MustDontHave returns the arm DontHave value .
7612	GetDontHave returns the DontHave field of the StellarMessage .
7613	MustPeers returns a list of PeerAddresses for this message . Panics if not set .
7614	GetPeers returns the PeerAddresses for this StellarMessage .
7615	MustTxSetHash returns the txset hash of the message .
7616	GetTxSetHash returns the transaction set hash of the message .
7617	MustTxSet is like GetTxSet but panics if not set .
7618	GetTxSet returns the transaction set for this StellarMessage .
7619	MustTransaction returns the transaction envelope . Panics if the transaction is not set .
7620	GetTransaction returns the transaction envelope associated with this StellarMessage .
7621	MustQSetHash returns the QSetHash value . If not set panic .
7622	GetQSetHash returns the QSetHash field of the StellarMessage .
7623	MustQSet returns the QSet if it is not set .
7624	GetQSet returns the QSet associated with the StellarMessage .
7625	MustEnvelope returns a ScpEnvelope for this message . If the envelope is not set panic .
7626	GetEnvelope returns the envelope associated with this StellarMessage .
7627	MustGetScpLedgerSeq will panic if GetScpLedgerSeq is not set .
7628	GetGetScpLedgerSeq returns the GetScpLedgerSeq field if set .
7629	ArmForSwitch implements the ArmForSwitch interface for AuthenticatedMessage .
7630	NewAuthenticatedMessage creates a new AuthenticatedMessage .
7631	ValidEnum returns true if the value is a valid enum value .
7632	ArmForSwitch implements the ArmForSwitch interface .
7633	NewScpStatementPledges creates a new ScpStatementPledges
7634	MustPrepare implements the ScpStatement interface for StatementPledges .
7635	GetPrepare returns the prepare field of the statement .
7636	MustConfirm returns the scp statement confirmation value . Panics if not set .
7637	GetConfirm returns the Confirm field of the statement .
7638	MustExternalize is like Externalize but panics if not set .
7639	GetExternalize returns the Externalize field of the statement .
7640	MustNominate implements the Nominate interface for StatementStatementPledges .
7641	GetNominate returns the Nominate field of the statement pledges .
7642	SafeUnmarshalBase64 unmarshals data to dest .
7643	SafeUnmarshal unmarshals data into dest .
7644	SendAmount sends the payment result to the client .
7645	LoadAccount loads an account by ID .
7646	SequenceForAccount returns the sequence number for the given account .
7647	SubmitTransaction submits a transaction .
7648	Equals returns true if two LedgerKeys are equal .
7649	SetAccount sets the LedgerKeyAccount .
7650	SetData sets the LedgerKey data .
7651	SetOffer sets a LedgerKeyOffer .
7652	SetTrustline sets the trustline for an account .
7653	Add adds a key and value to the CHDBuilder .
7654	tryHash returns true if the hashes are duplicate .
7655	HashIndexFromKey returns the hash index for the given key .
7656	ReadInt reads an int from the reader .
7657	Read reads a CHD from r .
7658	Get returns the value for a given key .
7659	Iterate returns a new Iterator .
7660	Write writes the CHD to w .
7661	RegisterDatasources registers the datasources at the given path .
7662	RegisterFonts registers the fonts at the given path .
7663	New returns a new Map .
7664	NewSized returns a new Map with the specified width and height .
7665	Load loads a stylesheet from the map .
7666	Resize resizes the map to the specified width and height .
7667	Free frees the map .
7668	SRS returns the SRS field of the map .
7669	ZoomAll zooms all elements of the map .
7670	ZoomTo zooms the map to the given values .
7671	Render renders the map .
7672	RenderImage renders the map to an image .
7673	RenderToFile renders the map to a file .
7674	SetBufferSize sets the buffer size of the map .
7675	Search sends a search request to the server and returns a list of results .
7676	Get returns a net . Conn from the pool .
7677	put adds a connection to the blocking pool .
7678	MonoToStereoF32 converts a mono buffer to a stereo buffer .
7679	BitCrush performs a bit crusher on a float buffer .
7680	NormalizeMax normalizes a FloatBuffer .
7681	Gain implements audio . FloatBuffer . Gain
7682	MonoDownmix performs a mono downmix of a buffer .
7683	Quantize takes an audio . FloatBuffer and a bit depth and quantizes it .
7684	PCMScale computes the PCM scale for a buffer .
7685	StereoPan converts a float buffer to a stereo pan .
7686	Leader returns the current leader .
7687	IsLeader returns true if the candidate is a leader .
7688	NewResponse creates a new response .
7689	GetRequestID returns the request ID associated with the given context .
7690	Log writes a log message to the monitorableWriter .
7691	SendMailSSL sends a smtp message using SSH .
7692	Send sends a message .
7693	WaitForIt waits for a connection to be established .
7694	Get unmarshals a yaml file into a config object .
7695	initConfig initializes the config file
7696	WritePluginResultsToDatabase writes plugin results to database .
7697	NewAuthController returns a new AuthController .
7698	Authenticate authenticates a user .
7699	NewOAuth2Controller creates a new OAuth2Controller .
7700	Refresh refreshes an existing token .
7701	Token returns an OAuth2 token .
7702	Logging returns an http . Handler that logs the request .
7703	SingleFile returns a http . Handler that serves a single file .
7704	Write implements the Writer interface .
7705	Hijack implements the http . Hijacker interface .
7706	NewMongo creates a new Mongo instance .
7707	Disconnect disconnects the MongoDB connection .
7708	New creates a new table with the given fields .
7709	PrintTable prints a list of fields to a table .
7710	PrintHorizontal prints a horizontal map .
7711	PrintRow adds a new row to the table .
7712	AddRow adds a new row to the table .
7713	Print prints the table .
7714	String returns a string representation of the table .
7715	getHead returns the table s header .
7716	rowString returns a string representation of the table .
7717	fieldString returns the string representation of a field .
7718	stringTableDash returns the hash of the table .
7719	printMarkdownDash prints the MarkdownDash for the table .
7720	stringMarkdownDash returns a string representation of the table .
7721	HashPassword hashes a password with the given salt .
7722	EncodeOAuth2Code encodes an OAuth2 code
7723	DecodeOAuth2Code decodes an OAuth2 code .
7724	NewServer creates a new server .
7725	Start starts the server .
7726	Stop stops the server .
7727	NewLoggingServeMux creates a new LoggingServeMux .
7728	Handler implements http . Handler for LoggingServeMux .
7729	Handle implements http . Handler for LoggingServeMux
7730	HandleFunc is part of the LoggingServeMux interface .
7731	Init initializes the database .
7732	WaitForConnection waits for a connection to elasticsearch .
7733	StoreFileInfo stores information about a file .
7734	StorePluginResults stores plugin results .
7735	CamelCase returns the camel case of a string .
7736	Getopt returns the value of an environment variable .
7737	Getopts returns the value of env var or dfault .
7738	GetSHA256 returns the SHA256 value of a file .
7739	RunCommand runs a command in a context .
7740	RemoveDuplicates removes duplicates from elements .
7741	Unzip unzips the given archive into the given target .
7742	SliceContainsString returns true if a is in list .
7743	NewSMTP creates a new SMTP server .
7744	SendMail sends a message .
7745	GetEnvironment returns the config for the given environment .
7746	GetSMTP returns the smtp configuration for the given source and environment .
7747	GetConfig returns the server configuration for the given source and environment .
7748	GetEnvironment returns the environment .
7749	GetMongo returns the mongo configuration for the given environment .
7750	TokenHandler returns an http . Handler that parses a JWT token from a request .
7751	Receive receives an InMsg from an XMPP connection .
7752	Send sends a message to the server .
7753	allBoshReleaseNames returns all BoshReleases in the diff .
7754	AddedProperty adds a new property to the job .
7755	RemovedProperty is part of the Job interface .
7756	AddDeltaJob adds a DeltaJob to the result .
7757	Concat adds a DeltaJob to r .
7758	Read returns an io . ReadCloser for the given release location .
7759	Pull pulls a release from the cache .
7760	BuildJob builds a job from a BoshJobMeta
7761	LoadBoshRelease loads a BoshRelease from a repository .
7762	readBoshRelease reads a BoshRelease from rr .
7763	readBoshRelease reads the BoshRelease from the given io . Reader .
7764	readBoshJob reads the BoshJob from the given io . Reader .
7765	NewRequest creates a new http . Request .
7766	PushCloudConfig pushes a cloud config to BOSH
7767	Generate generates a job manifest .
7768	CreateNewRecord creates a new record .
7769	NewShowCmd returns a new ShowCmd
7770	ShowCmd prints the show command to the given writer .
7771	GetDefaultTaskImageResource returns the default task image resource
7772	AddRawJob adds a new job to the pipeline .
7773	AddGroup adds a group to the pipeline .
7774	GetResourceByName returns a resource by name
7775	AddRawResource adds a raw resource to the pipeline .
7776	AddResource adds a resource to the pipeline .
7777	AddGithubResource adds a Github resource to the pipeline
7778	AddBoshIOResource adds a BoshIO resource to the pipeline .
7779	AddBoshDeploymentResource adds a BoshDeploymentResource to the pipeline
7780	AddGitResource adds a Git resource to the pipeline .
7781	allJobNames returns all the job names in the release .
7782	NewDeploymentManifestFromFile creates a new DeploymentManifest from an os . File
7783	NewDeploymentManifest returns a new DeploymentManifest
7784	AddRemoteRelease adds a remote release to the manifest .
7785	AddRemoteStemcell adds a remote stem cell to the manifest .
7786	Tag returns the tag for the given key .
7787	RemoveTag removes a tag from the manifest .
7788	LoadPivnetRelease loads a PivnetRelease from the given repository .
7789	BoshReleaseOrEmpty returns a BoshRelease or an empty BoshRelease .
7790	readPivnetRelease reads a PivnetRelease from the given path .
7791	decodeYaml decodes a YAML object from an io . Reader .
7792	NewZipWalker creates a new ZipWalker .
7793	NewDiffCmd returns a DiffCmd
7794	All prints the diff result for all releases .
7795	Job prints the diff result for the given job .
7796	New creates a new PivnetRelease .
7797	StructName returns the struct name of the record .
7798	TypeName returns the typename of the record .
7799	NewTgzWalker creates a new Walker that reads from the given io . Reader .
7800	NewBackoff creates a new Backoff .
7801	Reset resets the backoff .
7802	NewExponential creates a new exponential backoff .
7803	NewExponentialFullJitter creates a new exponential full jitter .
7804	NewLinear creates a new linear backoff .
7805	GetLineSize returns the size of a line .
7806	GetMaxSize returns the maximum size of the line .
7807	compute computes the size of a Sapin .
7808	WithTimeout adds the timeout to the post apps params
7809	WithContext adds the context to the post apps params
7810	WithHTTPClient adds the HTTPClient to the post apps params
7811	WithBody adds the body to the post apps params
7812	WithTimeout adds the timeout to the get apps app params
7813	WithContext adds the context to the get apps app params
7814	WithHTTPClient adds the HTTPClient to the get apps app params
7815	WithApp adds the app to the get apps app params
7816	UnmarshalBinary implements the encoding . BinaryUnmarshaler interface .
7817	WithTimeout adds the timeout to the get apps params
7818	WithContext adds the context to the get apps params
7819	WithHTTPClient adds the HTTPClient to the get apps params
7820	WithTimeout adds the timeout to the delete apps app params
7821	WithContext adds the context to the delete apps app params
7822	WithHTTPClient adds the HTTPClient to the delete apps app params
7823	WithApp adds the app to the delete apps app params
7824	WithTimeout adds the timeout to the patch apps app routes route params
7825	WithContext adds the context to the patch apps app routes route params
7826	WithHTTPClient adds the HTTPClient to the patch apps app routes route params
7827	WithApp adds the app to the patch apps app routes route params
7828	WithBody adds the body to the patch apps app routes route params
7829	WithRoute adds the route to the patch apps app routes route params
7830	WithTimeout adds the timeout to the post apps app routes params
7831	WithContext adds the context to the post apps app routes params
7832	WithHTTPClient adds the HTTPClient to the post apps app routes params
7833	WithApp adds the app to the post apps app routes params
7834	WithBody adds the body to the post apps app routes params
7835	WithTimeout adds the timeout to the put apps app routes route params
7836	WithContext adds the context to the put apps app routes route params
7837	WithApp adds the app to the put apps app routes route params
7838	WithBody adds the body to the put apps app routes route params
7839	WithRoute adds the route to the put apps app routes route params
7840	WithTimeout adds the timeout to the get apps app routes params
7841	WithContext adds the context to the get apps app routes params
7842	WithHTTPClient adds the HTTPClient to the get apps app routes params
7843	WithApp adds the app to the get apps app routes params
7844	WithTimeout adds the timeout to the patch apps app params
7845	WithContext adds the context to the patch apps app params
7846	WithHTTPClient adds the HTTPClient to the patch apps app params
7847	WithApp adds the app to the patch apps app params
7848	WithBody adds the body to the patch apps app params
7849	WithTimeout adds the timeout to the put apps app params
7850	WithContext adds the context to the put apps app params
7851	WithApp adds the app to the put apps app params
7852	WithBody adds the body to the put apps app params
7853	UnmarshalJSON deserializes into a Task instance
7854	MarshalJSON implements json . Marshaler .
7855	Validate validates this task
7856	GetRanges returns a list of ip ranges .
7857	WithTimeout adds the timeout to the get apps app routes route params
7858	WithContext adds the context to the get apps app routes route params
7859	WithHTTPClient adds the HTTPClient to the get apps app routes route params
7860	WithApp adds the app to the get apps app routes route params
7861	WithRoute adds the route to the get apps app routes route params
7862	New creates a new Functions .
7863	SetTransport sets the transport for the functions .
7864	WithTimeout adds the timeout to the delete apps app routes route params
7865	WithContext adds the context to the delete apps app routes route params
7866	WithHTTPClient adds the HTTPClient to the delete apps app routes route params
7867	WithApp adds the app to the delete apps app routes route params
7868	WithRoute adds the route to the delete apps app routes route params
7869	WithTimeout adds the timeout to the get tasks params
7870	WithContext adds the context to the get tasks params
7871	WithHTTPClient adds the HTTPClient to the get tasks params
7872	NewValueStore creates a new value store .
7873	Close closes the value store .
7874	SetBackend sets the server s backend .
7875	Ring returns the server s ring .
7876	GetLocalID returns the local id .
7877	GetListenAddr returns the address of the listener .
7878	Startup starts the ReplGroupStore .
7879	ShutdownFinished waits for the server to finish shutting down .
7880	Stop stops the server .
7881	Exit terminates the server .
7882	SelfUpgrade performs a self - upgrade .
7883	SoftwareVersion returns the current version of the server .
7884	Shutdown shuts down the group store .
7885	Rant returns a RantModel and a list of comments for a given rant .
7886	Profile returns the UserModel and ContentModel for the given user .
7887	Search returns a list of Rants for a given term .
7888	Surprise returns a RantModel based on the SURPRISE_PATH and APP_VERSION .
7889	WeeklyRants returns a list of rant models for the current week .
7890	getUserId returns the user id for the given username .
7891	Shutdown shuts down the ReplValueStore
7892	FExists returns true if the given file exists .
7893	outbound writes outbound messages to the connection .
7894	parse parses a message stream .
7895	Group creates a new Group .
7896	Groups returns a list of all groups in the domain .
7897	GetGroup returns a group by name .
7898	Reticence converts a string to a reticence string .
7899	CheckPassword checks if a password is valid .
7900	CleanUrl cleans up a URL .
7901	NewParameter creates a new Parameter .
7902	MakeParams creates a new Params object with the given field count .
7903	Parse parses a reflect . Value into a Params .
7904	Email returns the email address of the forwarder .
7905	Forwarder creates a new forwarder for a given domain .
7906	Forwarders returns a list of forwarders .
7907	GetForwarder returns a forwarder for the given domain .
7908	New creates a new CGP .
7909	EscapeCommaSeparated escapes a comma separated string
7910	Alias creates a new alias for an account .
7911	Email returns the email address of the alias .
7912	Aliases returns a list of all the aliases for the account .
7913	RealName returns the real name of the account .
7914	Email returns the email address of the account .
7915	Account creates a new account for the given domain .
7916	Accounts returns a list of accounts in the domain .
7917	Exists returns true if the domain exists .
7918	Aliases returns the aliases of the domain .
7919	Domain creates a new domain .
7920	Domains returns a list of domains .
7921	New creates a new Err .
7922	Wrap wraps the given error with the given info and publicMsg .
7923	mergeIn merges info and publicMsgParts into e .
7924	wrappedErrStr returns the string representation of the wrapped error .
7925	concatArgs concatenates the given arguments into a single string .
7926	MailingList returns a MailingList for the given domain .
7927	Subscriber returns a subscriber for the given email and name .
7928	Subscribers returns a slice of Subscribers .
7929	MailingLists returns a list of MailingLists for the domain .
7930	NewByteKeyItem creates a new byte key item .
7931	CompareBytes compares two pointers .
7932	CompareInt compares two int pointers .
7933	Malloc returns a pointer that can be used to allocate l bytes .
7934	Free frees a pointer .
7935	Stats returns a string representation of the stats .
7936	FreeOSMemory frees OS memory .
7937	Add adds a pointer to the segment .
7938	NewSegment creates a new segment .
7939	Assemble creates a new Skiplist from the given segments .
7940	CompareNodeTable compares two pointers .
7941	New creates a new NodeTable .
7942	Stats returns the statistics for the node table .
7943	MemoryInUse returns the amount of memory in use for this node .
7944	Get returns a pointer for the given key or nil if the key is not found .
7945	Update implements the Node interface for NodeTable .
7946	Remove removes a node from the table .
7947	Close closes the node table .
7948	MemoryInUse returns the number of memory instances in use .
7949	debugMarkFree debugs a node .
7950	Seek moves the iterator to the given byte slice .
7951	Next moves the iterator to the next element .
7952	Refresh refreshes the iterator .
7953	Close closes the iterator .
7954	NewIterator creates a new Iterator from a Snapshot .
7955	SeekFirst returns the first element in the iterator .
7956	Next moves the iterator to the next node .
7957	Seek iterates over all the elements in the iterator and returns true if the iterator succeeded .
7958	Keys returns the keys of the node list .
7959	Remove removes a node from the list .
7960	Add adds a node to the list .
7961	NewWithConfig creates a new Skiplist with the given config .
7962	FreeNode frees a node from the Skiplist .
7963	MakeBuf creates a new ActionBuffer .
7964	Size returns the number of items in the skiplist .
7965	NewLevel creates a new Skiplist .
7966	Insert implements the Insert method of the Skiplist interface .
7967	Insert2 inserts a new item into the Skiplist .
7968	Insert3 inserts a new item into the Skiplist .
7969	Delete removes a node from the Skiplist .
7970	DeleteNode removes a node from the skiplist .
7971	GetRangeSplitItems returns a slice of nways items from the Skiplist .
7972	Bytes returns a byte slice of the item .
7973	ItemSize returns the size of the item .
7974	KVFromBytes converts a byte slice to a k and v slice .
7975	CompareKV compares two KV values .
7976	Emit emits an event .
7977	UnregisterHandler removes a handler from the event controller .
7978	IsHandlerRegistered returns true if n handlers are registered .
7979	CompareNitro compares two pointers .
7980	DefaultConfig returns the default configuration .
7981	Delete implements the Writer interface .
7982	GetNode returns a skiplist . Node from bs .
7983	SetKeyComparator sets the KeyComparator .
7984	UseMemoryMgmt sets cfg . useMemoryMgmt .
7985	NewWithConfig creates a new Nitro instance with the given config .
7986	MemoryInUse returns the amount of memory in use .
7987	Close shuts down the gc channel .
7988	NewWriter returns a new Writer .
7989	SnapshotSize returns the size of a snapshot .
7990	Encode writes the snapshot to w .
7991	Decode decodes a snapshot from r .
7992	Open returns true if the snapshot is open .
7993	CompareSnapshot compares two snapshots .
7994	GC collects dead nitrous oxides .
7995	GetSnapshots returns a slice of snapshots .
7996	MemoryInUse returns the number of memory instances in use .
7997	CompareBS compares two BarrierSessions .
7998	Acquire returns a new BarrierSession .
7999	Release releases the BarrierSession .
8000	FlushSession flushes the current session .
8001	Apply applies the stats to the report .
8002	AddInt64 adds an int64 value to src .
8003	AddUint64 adds a uint64 to src .
8004	Merge merges the stats into s .
8005	GetStats returns the Skiplist s statistics .
8006	NewIterator creates a new iterator .
8007	SeekFirst returns the first element in the iterator .
8008	SeekWithCmp returns true if the iterator is found .
8009	Seek returns true if the iterator is found .
8010	Valid returns true if the iterator is valid .
8011	Delete deletes the iterator .
8012	Next returns the next item in the iterator .
8013	Init initializes SkuM1SmallBuilder .
8014	FromURL converts a URL to a string .
8015	ToURL converts a folder to a URL .
8016	Size returns the size of the header .
8017	WriteTo writes the TupleHeader to the given writer .
8018	Static creates a handler that handles static requests .
8019	Read reads the config file .
8020	Del deletes the specified section and key from the config .
8021	WriteTo writes the config to a file .
8022	checkSection checks if a line is a section .
8023	checkLine checks if a line is valid .
8024	checkComment checks if a line has a comment prefix .
8025	NewResponseWrapper creates a new ResponseWrapper
8026	Hijack implements the http . Hijacker interface .
8027	CloseNotify implements the http . CloseNotifier interface .
8028	DateFormat sets the DateFormat field .
8029	Logger returns an http . HandlerFunc that logs the request to stdout .
8030	GetAvailableInventory returns the available inventory for the given task collection .
8031	Expiration sets the expiration time .
8032	Claimer returns a TokenOpt that sets the claimer function .
8033	Issuer returns a TokenOpt that sets the token issuer .
8034	User returns a TokenOpt that sets the user field .
8035	Password returns a TokenOpt that sets the password for the token .
8036	Extractor returns a TokenOpt that sets the requested extractor .
8037	TokenGenerator creates a new token .
8038	Token returns the token associated with the request .
8039	Claims returns a jwt . Claims object from the request context .
8040	String returns a string representation of a Token .
8041	NewLexer creates a new Lexer .
8042	run runs the lexer .
8043	emit emits a token .
8044	skipWhitespace skips whitespace .
8045	next moves the cursor to the next rune .
8046	LineNum returns the number of lines in the input .
8047	Offset returns the line offset of the input .
8048	errorf is a wrapper for stateFn .
8049	lexText lexes text .
8050	lexComment lexes a comment .
8051	New creates a new TupleType .
8052	AddVersion adds the given fields to the version list .
8053	Contains returns true if the given field exists in the TupleType .
8054	Offset returns the offset of the given field .
8055	Versions returns the versions of the TupleType .
8056	SetPrivateMeta sets the private metadata for the task .
8057	SetPublicMeta sets the metadata for the task .
8058	GetRedactedVersion returns the redacted version of the task .
8059	Equal returns true if two tasks are equal .
8060	HTTP implements the http . Handler interface .
8061	PutUint8 writes a uint8 to the buffer .
8062	PutInt8 writes an int8 value to the buffer .
8063	PutUint16 puts a uint16 value into the buffer .
8064	PutInt16 writes an int16 value to the buffer .
8065	PutUint32 writes a uint32 to the buffer .
8066	PutInt32 writes an int32 to the buffer .
8067	PutUint64 writes a uint64 to the buffer .
8068	PutInt64 writes an int64 to the buffer .
8069	NewPackageList creates a new PackageList .
8070	PutFloat32 writes a float32 value to the buffer .
8071	Classic creates a new Martini .
8072	Languages is an Option that sets the languages of the xlang . Tags .
8073	Session adds a session to a handler .
8074	Data returns a ContextValue from an http . Request .
8075	URL returns a string representation of a URL .
8076	Size returns the number of bytes in bytes and the number of bytes in bytes .
8077	Returns the request ID from the task response .
8078	PutString adds a string value to the buffer .
8079	LoadDirectory loads a directory .
8080	LoadFile loads a package from a file .
8081	LoadPackage loads a package from the given parser .
8082	NewDecoder returns a new Decoder .
8083	NewDecoderSize returns a new Decoder that reads from the given io . Reader .
8084	Panic creates a new panic handler .
8085	DeployVApp is part of the VCDClient interface
8086	UnDeployVApp is part of the VCDClient interface
8087	Auth is part of the VCDClient interface .
8088	QueryTemplate is part of the VCDClient interface
8089	NewEncoder creates a new Encoder .
8090	Getter sets the nonce getter .
8091	Setter sets the NonceSetter .
8092	Age is an Option to set the age of a user .
8093	Nonce implements the http . Handler interface .
8094	NonceValueFromRequest returns a NonceStatus from an http . Request .
8095	StoreNonce stores a nonce .
8096	PutFloat32Array adds a float32 array to the buffer .
8097	PutFloat64Array adds a float64 array to the buffer .
8098	Do implements the http . Doer interface .
8099	NewLease creates a new lease
8100	Delete deletes a lease .
8101	Post implements the http . Poster interface .
8102	ReStock returns a task manager . Task that can be used to restack a lease .
8103	Procurement returns the task for the lease .
8104	InitFromHTTPRequest initializes the lease from an http . Request
8105	Is returns true if tupleType is a TupleType .
8106	Offset returns the offset of a field .
8107	WriteTo implements io . WriterTo interface .
8108	PutTuple adds a Tuple to the buffer .
8109	WriteString writes a string to the response writer .
8110	NotFound writes a 404 response .
8111	Run runs the given process .
8112	NewWaitGroup creates a new WaitGroup .
8113	Add adds the wait group to the queue .
8114	Wait waits for the WaitGroup to complete .
8115	Gzip wraps an http . Handler with gzip .
8116	New creates a new InnkeeperClient
8117	Error renders a message with the given status .
8118	Renderer returns a handler that renders the given options .
8119	NewClient creates a new PDClient .
8120	GetTask retrieves a task .
8121	WriteImageToHTTP writes an image to the http . ResponseWriter
