0	Fast - path - ordered emit .
1	Wraps an observable .
2	Returns a list of objects sorted using the given sort function .
3	Observes a ConnectableObservable on a Scheduler .
4	Creates a new UnicastProcessor with the given capacity hint .
5	Creates a new instance of UnicastProcessor .
6	Try scalar x map subscribe .
7	Creates a scalar x map .
8	Resets this instance to the default state .
9	Creates a Maybe object from a CompletableSource .
10	Creates a Maybe object from a single source .
11	Retries the given predicate multiple times .
12	Throws a NullPointerException if the given object is null .
13	Returns the identity function .
14	Creates a just callable for a given value .
15	Creates a just function for a given value .
16	Casts a function to the specified class .
17	Creates a new UnicastSubject .
18	Creates a new UnicastSubject with the given capacity hint .
19	Creates a new UnicastSubject .
20	Creates a new UnicastSubject .
21	Returns the blocker error .
22	Gets a blocker error .
23	Waits for a blocker to complete .
24	Drains the maximum loop of a queue .
25	Requests a subscription with the specified prefetch value .
26	Post - complete .
27	Called when the backpressure is complete .
28	Returns the value associated with this notification .
29	Returns the exception associated with this notification .
30	Validates two Disposable objects .
31	Sets the next disposable once .
32	Validate a subscription .
33	Sets a subscription once .
34	Adds a cap to a long .
35	Multiply the caps of two longs .
36	Adds an AtomicLong to an AtomicLong .
37	Converts a Throwable to a NullPointerException .
38	Adds a new object to the list .
39	Shuts down this executor .
40	Creates a ScheduledExecutorService .
41	Sets the subscription .
42	Emits a loop .
43	Wraps or throws a Throwable into a RuntimeException .
44	Flattens a throwable into a list of throwables .
45	Throws an exception if it is a Throwable .
46	Clears the cache .
47	Returns the size of the set .
48	Try to subscribe to a scalar x map .
49	Creates a scalar x map .
50	Checks if the given subscriber accepts the notification .
51	Returns true if the given observer accepts the notification .
52	Starts the spsc queue .
53	Starts the unbounded queue .
54	Returns true if the given object should be offered .
55	Returns the Disposable .
56	Completes the collection of the given value .
57	Called when an error occurs .
58	Called when the process is complete .
59	Concatenates a MapDelayError with a Publisher .
60	Returns a concatenated map iterable .
61	Returns a sorted list .
62	Waits until the given number of bytes has been consumed .
63	Requests a subscription .
64	Adds a new PublishDisposable to the list .
65	Removes a PublishDisposable from the list .
66	Observes a ConnectableFlowable on a Scheduler .
67	Parse an HttpServiceMethod .
68	Sets the delay in milliseconds .
69	Creates an error response .
70	Calculates the call delay in milliseconds .
71	Creates the sample data .
72	Returns the value of the given method .
73	Searches the directory for a user .
74	Encodes a raw password into a string .
75	Returns true if the raw password matches the encoded password .
76	Performs version checks .
77	Disable checks .
78	Gets the Spring security core version .
79	Creates an AttributeExchangeConfigurer with the specified identifier pattern .
80	Gets or applies an OAuth2ClientConfigurer .
81	Configures the OAuth2 resource server .
82	Returns a new instance of the ChannelSecurityConfigurer .
83	Compares the given attribute with the given value .
84	Retrieves an entry from the DirContext .
85	Searches for single attribute values .
86	Search for multiple attribute values .
87	Searches the DirContext for a single entry .
88	Builds a new SearchControls instance .
89	Lookup primary keys .
90	Builds a PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails object .
91	Creates the embedded server .
92	Creates the servlet api filter .
93	Creates the Jaas API filter .
94	Creates a whitelisted default tying builder .
95	Inserts a Spring SecurityFilterChain .
96	Gets the token for a series .
97	Returns a list of granted authorizations for the given attributes .
98	Creates a new cipher instance .
99	Sets the AuthenticationManager .
100	Performs a ServletFilter on the given request .
101	Checks if the pre - authenticated principal has changed .
102	Performs the authentication .
103	Checks the content length .
104	Maps a collection of authorities to a set of authorities .
105	Gets the login processing url .
106	Update authentication defaults .
107	Updates the access defaults for the given http .
108	Maps a password value to a byte array .
109	Extracts the remember me cookie from the request .
110	Encodes the given cookie tokens into a string .
111	Sets the cookie .
112	Resolves an argument .
113	Gets the query string .
114	Returns the service port for the given URL .
115	Returns the principal property of the authentication .
116	Logout the user from the server .
117	Authenticate the user with the given authentication token .
118	Build the provider URL .
119	Sets the context environment properties .
120	Gets the redirect url .
121	Do end tag .
122	Initializes the user details service .
123	Gets the UserDetailsService .
124	Adds the PkceParameters .
125	Returns true if the request requires authentication .
126	Returns true if the request requires authentication .
127	Proxy ticket request .
128	Returns true if the user is authenticated .
129	Returns true if the request matches the proxy request .
130	Creates the security expression root .
131	Gets the JWKSet .
132	Encodes the given string using UTF - 8 .
133	Gets websse groups based on granted authorities .
134	Loads the user details for the given assertion .
135	Gets the pre - authenticated principal .
136	Concatenates the given byte arrays into one byte array .
137	Returns a subarray of the given byte array .
138	Returns a list of granted authority from a collection of attributes .
139	Returns a preprocessed map of attributes2grantedAuthorities .
140	Returns a collection of granted authority for the given value .
141	Adds a GrantedAuthorityCollection to the result .
142	Gets the pre - authenticated J2EE principal .
143	Returns the shared object of the given type .
144	Builds the http redirect URL for the given request .
145	Invokes a method on a join point .
146	Checks if the given string has a role .
147	Returns an array containing any of the given roles .
148	Process the auto login cookie .
149	On login success .
150	Attempt to switch to a user .
151	Attempts to exit the user associated with the given request .
152	Sets the exit user URL .
153	Displays the public index of the current contact .
154	Spring security filter chain .
155	Decodes the given token into a JWT .
156	Generates a boolean expression to authorize the user to use the given access expression .
157	Checks if the current user is allowed to use the given url .
158	Converts a JWT object to a Collection of GrantedAuthority objects .
159	Generates a token for the given request .
160	Displays the admin page for the given contact .
161	Displays the AddPermission page for a contact .
162	Adds a permission .
163	Deletes a permission .
164	Gets the role with the default prefix .
165	Creates a UserDetailsResourceFactoryBean from a String .
166	Returns the value of the attribute with the given name .
167	Returns the first attribute value for the given name .
168	Encodes a string into a byte array .
169	Decodes a byte array into a string .
170	Lookup the parameter names in the given parameter name factory .
171	Adds a new secure contact .
172	Returns a collection of ConfigAttributes for the given method and target class .
173	Adds a secure method .
174	Returns a collection of all ConfigAttributes .
175	Returns true if the method name matches the mapped name .
176	Configures any request .
177	Handles a bind exception .
178	Returns a random contact .
179	Clear authentication attributes .
180	Returns the field with the given name on the given class .
181	Create service url .
182	Create redirect url .
183	Extracts SHA prefix from encPass .
184	Called when a pre - authenticated entry point is called .
185	Checks the filter stack .
186	Returns the registered types .
187	Extracts the cause of the given throwable .
188	Registers the access manager .
189	Converts a collection of granted authority to a set .
190	Checks if the byte array matches the expected byte array .
191	Sets the default failure URL .
192	Resolve hidden inputs .
193	Builds the request url .
194	Checks if the given URL is an absolute URL .
195	Create a list of OpenIDAttribute objects with the given identifier .
196	Converts a serializable identifier to a class identifier .
197	Create the entries for the given MutableAcl .
198	Creates the object identity .
199	Method updateObjectIdentity .
200	Saves a request to the session .
201	Returns a new instance of ServerWebExchangeMatcher .
202	Returns a matcher that matches any exchange .
203	Creates a new TextEncryptor with the given password and salt .
204	Creates a new TextEncryptor for the given password and salt .
205	Creates a TextEncryptor for queryable text .
206	Writes the headers to the response .
207	Determine the target URL for the given request and response .
208	Determines the target URL for the given request .
209	Sets the target URL parameter .
210	Gets the directory with immediate parent populated .
211	Builds a DistinguishedName from the given username .
212	Creates a map of shared objects .
213	Configures Jaas using a loop .
214	Returns the current date .
215	Parse a date from a string .
216	Updates the cache with the given key and value .
217	Sets the authentication details for the given request .
218	Returns the security name for the given subject .
219	Returns a list of WebSphere groups for the given security name .
220	Changes the password of the current user .
221	Builds a DistinguishedName for a group .
222	Throws an exception if the maximum allowed sessions are exceeded .
223	Copy the details from the source authentication to the destination authentication .
224	Returns a list of all SecurityFilterChains that match the request .
225	Returns a list of filters for the given URL .
226	Returns the application context for the given page context .
227	Returns the full DistinguishedName for the given DistinguishedName .
228	Sets the session attributes .
229	Creates a basic authentication scheme .
230	Adds a list of filters .
231	Adds a filter to the list of additional filters .
232	Creates a basic authentication scheme .
233	Creates an NTLM authentication scheme .
234	Creates a new AuthenticationScheme .
235	Create a proxy for the given URI .
236	Prints the given log detail to the given stream .
237	Creates a new RestAssuredConfig based on the given RedirectConfig .
238	Returns a new EncoderConfig that uses the default charset for query parameters .
239	Creates a default object mapper configuration .
240	Create a JAXBObjectMapperFactory .
241	Returns a new RestAssuredMockMvcConfig instance .
242	Creates a RestAssuredMockMvcConfig from the given session config .
243	Creates a mock object mapper config .
244	Creates a new RestAssuredMockMvcConfig from the given JsonConfig .
245	Creates a new RestAssuredMockMvcConfig instance .
246	Creates a mock mvc config .
247	Creates a mock MVC header config .
248	Create an async mock mvc config .
249	Creates a mock MockMvcConfig .
250	Creates a RestAssuredMockMvcConfig from the given MultiPartConfig .
251	Creates a mock MVC param config .
252	Creates a RestAssuredMockMvcConfig .
253	Returns a new CertificateAuthSettings instance that allows all hostnames .
254	Declare namespaces .
255	Declares a namespace .
256	Sends a request to the server .
257	Sets the headers for this request .
258	Sets the proxy .
259	Sets the control name .
260	Adds a header to the specification .
261	Basic authentication .
262	Sets the authentication credentials for the given user workstation and domain .
263	Creates a new Headers object with the given headers and additional headers .
264	Resets the mock mvc factory .
265	Sets a header .
266	Builds the response .
267	Matches a cookie s value with the given matcher .
268	Returns a new cookie matcher with the specified comment matcher .
269	Returns a new DetailedCookieMatcher with the specified expiry date .
270	Returns a cookie matcher for the domain matcher .
271	Returns a cookie matcher that matches the cookie path .
272	Returns a new DetailedCookieMatcher with a secured matcher .
273	Returns a new DetailedCookieMatcher that matches the given httpOnly Matcher .
274	Returns a cookie matcher that matches the version of the cookie .
275	Returns a new DetailedCookieMatcher with the maximum age of the cookie .
276	Expect a header .
277	Expect a header .
278	Expect a cookie with the given name and value .
279	Returns a new ProxySpecification with the given host .
280	Returns a JsonPathConfig with the specified number return type .
281	Returns a new JsonPathConfig with the default parameters .
282	Creates a default log stream .
283	Enables logging of request and response if validation fails .
284	Creates an HttpRequestBase from the given URI .
285	Returns a new MultiPartConfig with a default boundary .
286	Adds an attribute to the request spec .
287	Adds a header to the request .
288	Add a multi - part request spec .
289	Add additional result handlers to the request spec .
290	Sets the given parameter to the given value .
291	Adds the given httpClientParams to the configuration .
292	Returns a new instance of HttpClientConfig .
293	Creates a new http client configuration .
294	Returns the value associated with the given path .
295	Returns the value of the given path as an integer .
296	Returns a byte representation of the given path .
297	Returns the short value associated with the given path .
298	Get a float value from a path .
299	Returns the value of the given path as a Double .
300	Returns the value of the given path as a long .
301	Returns a list of objects of the given generic type .
302	Returns a map for the given path .
303	Gets an object from a path .
304	Sets the body of the request spec .
305	Adds a cookie to the request specification .
306	Adds a parameter to the request spec .
307	Add a parameter to the request spec .
308	Create a mock mock mvc parameter config with the given update strategy .
309	Creates a filter that logs a response to the given print stream if it matches the given matcher .
310	Creates a new Cookies object with the specified cookie and additional cookies .
311	Cleans up a set of keys and sources for a collected state .
312	Index all implicit bindings at this level .
313	Returns the binding for the given key or throws an ErrorsException if the key does not exist .
314	Converts a String binding to a String binding .
315	Cleanup jit bindings .
316	Removes a failed jit binding .
317	Returns the internal dependencies of the given binding .
318	Creates an uninitialized binding for the given key .
319	Gets all the parameters from the given parameter injectors .
320	Binds an injector to the provider .
321	Bind a logger to the injector .
322	Check for misplaced binding annotations .
323	Returns true if method a overrides method b .
324	Initializes the delegate .
325	Returns the provider type .
326	Resolves all types .
327	Canonicalizes a type literal for a key .
328	Prepare build - in converters .
329	Canonicalize a ClassLoader .
330	Checks if the class loader has the same version of cglib .
331	Checks if a member is publicly callable .
332	Fixes the annotations for the given key .
333	Request member injection .
334	Validate pending injections .
335	Creates a new instance of the constructor .
336	Adds a request dispatcher to the given servlet request .
337	Creates a scope for the given key .
338	Makes the scope injectable .
339	Normalizes a path .
340	Generates an annotation for the given annotation type .
341	Returns true if the annotation is retained at runtime .
342	Finds a scope annotation .
343	Returns the key for the given type .
344	Returns the name of the given key .
345	Initializes the delegate .
346	Adds a direct type binding .
347	Gets a constructor injector from the cache .
348	Returns true if the interceptor class has scope annotations .
349	Creates a new RealMapBinder .
350	Gets the key for new value .
351	Creates a new instance of the provisioner .
352	Writes a replacement object to the stream .
353	Returns a new instance of the given module .
354	Returns a collection of AssistedMethod objects .
355	Returns true if the given type literal is not specified .
356	Checks if the given constructor has the specified parameters .
357	Returns the dependencies for the given injection point and implementation .
358	Removes all AssistedDeps from a set of Dependencies .
359	Checks if the given dependencies are valid for an OptimizedAssistedInject .
360	Gets a binding from a new injector .
361	Invokes the given method with the given arguments .
362	Checks if there is an implementation for the given key with the given hint .
363	Creates a new RealSetBinder .
364	Returns the key for a new item .
365	Finds the next filter matching the request .
366	Returns true if the constructor has an annotation at inject time .
367	Returns the internal constructor .
368	Gets the internal dependencies .
369	Creates a Module object for a given module .
370	Returns the annotation for the given method or null if not found .
371	Returns the line number of the specified member .
372	Initializes the injector .
373	Wraps a callable and continues a request .
374	Transfers a request to another callable .
375	Validate and canonicalize value .
376	Returns a member injector for the specified key .
377	Creates a new instance of a type literal with a set of listeners .
378	Returns an immutable list of injectors for the given set of injection points .
379	Returns the key for the given type with the given annotation strategy .
380	Creates an AnnotationStrategy for the given annotation .
381	Creates an AnnotationStrategy for the given annotation type .
382	Removes all exceptions from the stack trace .
383	Returns the binding source .
384	Formats a collection of error messages .
385	Creates a new message .
386	Creates a new message .
387	Creates a new message .
388	Converts a Object to a DeclaringSource .
389	Returns true if the given class name should be skipped .
390	Gets the module class name from a list of class names .
391	Starts the jmxremote .
392	Pushes the given dependency to the given source .
393	Pushes the given state to the given source .
394	Returns an initializable instance of the given instance .
395	Provides a dependency to a provider .
396	Called when a connection event occurs .
397	Adds a connection event processor .
398	Gets the result of a FutureTask .
399	Launders a Throwable .
400	Registers a remote processor for the given command code .
401	Register a new RemotingProcessor .
402	Returns the remote processor for the given command code .
403	Tries to get the given URL .
404	Decodes a protocol code from a byte buffer .
405	Returns a map of all connections in the pool .
406	Scan the ConnectionPool .
407	Gets a connection from the pool and creates a new one if it does not exist .
408	Create connection and heal if need .
409	Removes a task from the pool .
410	Heal the connection if needed .
411	Creates a connection to the given url .
412	Closes a connection .
413	Called when the connection is closed .
414	Closes the connection to the remote address .
415	Sets an attribute if it is not already present .
416	Registers a user processor .
417	Registers a processor with the RPC server .
418	Dispatches the RpcRequestCommand to the user processor .
419	Deserialize the RpcRequestCommand .
420	Pre - process a remote context .
421	Timeout log .
422	Log a RpcRequestCommand .
423	Executes the given message using the given ExecutorService .
424	Invokes the given command with the given callback .
425	Sends a one way request to the remote server .
426	Converts a bit set to a byte .
427	Converts an integer to a bit set .
428	Adds a new ReconnectTask .
429	Stops the connection .
430	Converts a request to a remote command .
431	Filter a list of connections .
432	Monitors the connection pools .
433	Close fresh select connections .
434	Gets a boolean property .
435	Logs the given format and addr .
436	Is this request timeout?
437	Returns the user processor for the given class name .
438	Returns a random connection from a list of connections .
439	Returns the value associated with the given key or the default if not found .
440	Returns the property for the given key .
441	Resolves a response object .
442	Converts a response command to a response object .
443	Converts a ResponseCommand to a Throwable .
444	Detail error message .
445	Creates an RpcServerException from a Throwable .
446	Print connection trace log .
447	Creates a new event loop group .
448	Parse remote address .
449	Parse local address .
450	Parse remote IP address .
451	Parse remote host name .
452	Parse local IP address .
453	Parse remote port .
454	Parse local port .
455	Parse socket address to host ip .
456	Adds a connection to the list .
457	Removes a connection and attempts to close it .
458	Gets a connection .
459	Registers a custom serializer for a class .
460	Returns the CustomSerializer for the given class name .
461	Registers a custom serializer for the given command code .
462	Returns a CustomSerializer for the given command code .
463	Starts the connection monitor .
464	Checks if the remote address is connected .
465	Initializes the write buffer water mark .
466	Returns a FramedataImpl1 based on the supplied Opcode .
467	Checks if the given WebSocketImpl needs to be written .
468	Sets the code .
469	Validate a UTF - 8 encoded payload .
470	Updates the payload .
471	Checks if the handshake contains the requested protocol .
472	Translates a single frame check length limit .
473	Translate single frame check packet size .
474	Generates the final key .
475	Processes a continuous and non - finish frame .
476	Process websocket frame binary .
477	Log a RuntimeException during onWebsocketMessage .
478	Processes the frame data .
479	Processes a frame and checks if it is a final frame .
480	Processes the current continuous frame sequence and adds it to the buffer list .
481	Processes a frame closing .
482	Checks if the payload limit is reached .
483	Get payload from byte buffer list .
484	Returns the total size of the byte buffer list .
485	Translates a HTTP server handshake into a client handshake .
486	Translates a HTTP client to a HandshakeBuilder .
487	Decodes the given ByteBuffer .
488	Close connection due to wrong handshake .
489	Close connection due to internal server error .
490	Generates the HTTP response due to an error .
491	Send the given text to the WebSocketImpl .
492	Resets the websocket thread .
493	Connects to the websocket client .
494	Returns the port .
495	Sends a handshake to the client .
496	Sets the connection lost timeout .
497	Stops the connection lost timer .
498	Starts the connection lost timer .
499	Restarts the connection lost timer .
500	Executes the connection loss detection .
501	Cancels the connection lost timer .
502	On websocket handshake received as server .
503	On websocket ping .
504	Stops the server with the specified timeout .
505	Returns the local port .
506	Do an additional read .
507	Accepts a selection key .
508	Reads a selection key .
509	Writes a selection key .
510	Setup selector and server thread .
511	Ensures that the selector thread is only started once .
512	Shuts down the server .
513	Get the socket for the given WebSocket .
514	Broadcast a byte array to a collection of clients .
515	Broadcasts the specified text to the specified list of clients .
516	Broadcasts the given data to all clients .
517	Fills the frames with the data from the given draft .
518	Transfers a ByteBuffer to another ByteBuffer .
519	Starts JPAApi .
520	Returns the entity manager with the given name .
521	Adds a transaction to the entity manager .
522	Converts the given arguments to a scala buffer .
523	Wraps the given arguments into a list if needed .
524	Gets a scala message .
525	Converts a list of keys to scala arguments .
526	Returns true if the specified key is defined at the specified time .
527	Returns a list of preferred messages .
528	Returns the preferred message for the given request .
529	Sets the language of the message .
530	Returns a new self - binding for the given modules .
531	Returns the bindings for the given modules .
532	Returns a list of self - bindings .
533	Returns a new builder that overrides the given modules .
534	Returns a self - overrides for the specified modules .
535	Returns a self - overrides for the given bindings .
536	Disables the given module classes .
537	Call this method from a context .
538	Creates a new CompletionStage and returns the result .
539	Returns the file with the given relative path .
540	Returns an annotation binding for the given scope .
541	Creates a tuple from the given tuples .
542	Returns a tuple of degree 5 .
543	Converts the given ExecutionContext to an Executor .
544	Creates a JPAConfig from the given name and unit name .
545	Creates a new JPAConfig from the given strings .
546	Creates a new JPAConfig from the given map .
547	Creates a flow from a string .
548	Creates a flow from a JSON string .
549	Adds a constraint validator for the given key .
550	Creates a new instance of the constraint validator .
551	Returns the best accessible method for the given method name and parameter types .
552	On client error .
553	On bad request .
554	On forbidden .
555	On not found .
556	Handles a server error .
557	Log server error .
558	Converts a Throwable to a UsefulException .
559	On dev server error .
560	Called when a server error occurs on a request .
561	Build doc handler from resources .
562	Creates a DocumentationHandler from a directory .
563	Build doc handler from directory and jar file .
564	Creates a DocumentationHandler from a JAR file and a directory .
565	Creates a DocumentationHandler from a jar file .
566	Consumes the data .
567	Creates an HttpEntity from a Content .
568	Converts a String to a HttpEntity .
569	Creates a chunked HttpEntity .
570	Returns the status of a JsonNode .
571	Returns the status of a JsonNode with the specified encoding .
572	Creates a Result object from a byte array .
573	Sends an InputStream to the server with the specified content length .
574	Returns the status of a file .
575	Returns the user with the given id .
576	Returns a preferred Lang from a collection of Langs .
577	Creates a unique call .
578	Create a new call with a fragment .
579	Returns the absolute URL of the given HTTP request .
580	Returns the websocket URL for the given HTTP request .
581	Creates a connection function .
582	Creates a connection function .
583	Creates a new server for the given mode and port .
584	Converts an object to a JsonNode .
585	Converts a JsonNode to a Class .
586	Parse a JsonNode from a string .
587	Parse a JsonNode from an input stream .
588	Returns the relative path between the startPath and the targetPath .
589	Returns a canonical representation of the given URL .
590	Returns a list of displayable constraints .
591	Returns a displayable constraint tuple .
592	Timeout a CompletionStage .
593	Checks if the given class array is assignable to the given class array .
594	Parse a CRON expression .
595	Returns the next cron interval for a given date .
596	Creates a new AhcWSClient .
597	Creates a Guice application builder .
598	Renders the given request as a TODO .
599	Sets a session key and value .
600	Flashes the specified value to the specified key .
601	Returns a binding key that is qualified with the given instance .
602	Returns the binding key for the given annotation .
603	Converts the given implementation to the given implementation .
604	Converts a provider to a binding .
605	Converts a Supplier to a Binding
606	Converts a key to a binding .
607	Returns a binding for the given provider .
608	Returns a list of available languages for the given application .
609	Creates a preferred Lang object from the given list of available languages .
610	Creates a SimpleEvolutionsReader from a map of evolutions .
611	Reads the default evolutions .
612	Cleans up the evolutions for the given database .
613	Adds a configuration loader to the Guice application .
614	Creates a new GuiceApplicationBuilder with a module loader .
615	Loads a builder from a set of Guiceable modules .
616	Loads a set of Guiceable modules .
617	Loads a set of Guiceable modules .
618	Loads a set of bindings from the API .
619	Creates a new Guice application builder .
620	Encodes a cookie into a string .
621	Returns the EntityManager .
622	Returns a stack of EntityManager objects .
623	Pushes or pops an EntityManager from the stack .
624	Creates a flow that bypasses the given splitter .
625	Creates a Flow that bypasses the given splitter .
626	Creates an actor reference flow .
627	Converts a set of error arguments to an unmodifiable list .
628	Fills a form with the given value .
629	Returns an unmodifiable list of global validation errors .
630	Converts an error to a JsonNode .
631	Returns the value associated with the given key .
632	Creates a new dynamic form with the given value .
633	Parses the given text and converts it to the given class .
634	Converts a field to a type descriptor .
635	Prints the given object as a string .
636	Prints a field as a string .
637	Prints the given type descriptor to a string .
638	Registers an optional formatter .
639	Registers a formatter for a given class .
640	Registers a formatter for a given annotation .
641	Encodes a cookie into a string .
642	Returns a list of nodes for a given path .
643	Converts a java . util . List to a scala array .
644	Converts an array to a scala . collection . immutable . Seq .
645	Returns a scala . collection . immutable .
646	Creates a MappedWebSocketAcceptor for a JSON message .
647	Accept or result WebSocket .
648	Sets the accessible workaround for the given object .
649	Returns the cost of a primitive promotion for a given class .
650	Returns the total transformation cost of the given executable .
651	Gets the object transformation cost .
652	Returns the message at the given key .
653	Returns the message at the given keys and arguments .
654	Creates a database from the given parameters .
655	Creates a parallel sorter for the given arrays .
656	Quick sort .
657	Merge the given index with the given comparator .
658	Invokes a protected method on an object .
659	Casts a type to a numeric type .
660	Loads the argument at the given index .
661	Emit a field .
662	Pushes a type to zero or null .
663	Unboxes a type .
664	Process an array .
665	Creates a null code emitter .
666	Resolves all bridges .
667	Get a list of methods from a superclass .
668	Filter the constructors for the given class .
669	Sets the superclass .
670	Gets the value of a field .
671	Adds a method .
672	Returns the cardinality of the value .
673	Sets the naming policy .
674	Returns an array of methods with the given names and descriptors .
675	Resolves a path .
676	Reads a string from a file .
677	Sets the request host .
678	Creates a new HTTP request .
679	Returns a new HTTP request that connects to the specified destination .
680	Creates a new HTTP request with the specified destination .
681	Creates a new HTTP POST request .
682	Creates a new HTTP PUT request .
683	Creates a new HTTP PATCH request .
684	Creates a DELETE request .
685	Creates a HEAD request .
686	Creates a new HTTP TRACE request .
687	Creates an HttpRequest with options set to the specified destination string .
688	Sets the request path .
689	Returns a list of cookies .
690	Adds a query parameter to the request .
691	Adds a query to the request .
692	Parse a query string and return the result .
693	Returns the query string .
694	Returns the host URL .
695	Set basic authentication .
696	Sets the host header .
697	Returns a buffer containing the contents of the request .
698	Sends the request and receives the response .
699	Remove a range handler .
700	Returns the length of the exception table for the given handler .
701	Collects the action interceptors .
702	Collects the action filters .
703	Collects the action results .
704	Collects all action runtimes .
705	Sets a simple property .
706	Returns a property with the given name .
707	Extracts this reference from the given property name .
708	Gets the print writer .
709	Sets a reference to an object .
710	Returns the object reference for the given name .
711	Looks up the value of the given object reference .
712	Returns the table descriptor for the given table reference .
713	Find table descriptor by column ref .
714	Returns the alias for the given table reference .
715	Register a table reference .
716	Lookup table reference .
717	Registers a hint .
718	Serializes a value to a JsonContext .
719	Inject attributes .
720	Inject parameters .
721	Inject uploaded files .
722	Convert a property name to a column name .
723	Convert a column name to a property name .
724	Applies this method to the given column name .
725	Store a value in a PreparedStatement .
726	Prepare get value .
727	Returns a set of all wrappers .
728	Resolves a wrapper class .
729	Creates a new Madvoc wrapper .
730	Returns the system separators for the given path .
731	Returns the path of a file .
732	Splits a filename into an array of strings .
733	Returns the relative path between the target path and base path .
734	Registers a component .
735	Adds a consumer to the action config .
736	Starts the Madvoc WebApp .
737	Configure defaults .
738	Registers the Madvoc WebApp components .
739	Specifies which jars should be excluded from the scan .
740	Adds a list of included jars to the class scanner .
741	Adds a list of entries to be included in the scan .
742	Specifies which entries should be excluded from the scan .
743	Scan a jar file .
744	Scan classpath .
745	Returns the bytecode signature of the given type .
746	Scan a list of classes .
747	Starts the scan .
748	Create a new transaction .
749	Returns the default scope or scope type .
750	Gets or initializes a scope .
751	Gets or initializes a scope .
752	Decodes a char array .
753	Prepare csrf token .
754	Ensures that a set of tokens is valid .
755	Checks if a CSRF token is valid .
756	Creates a new BeanCopy from the given Object .
757	Creates a copy of this bean .
758	Overrides the visitor to set a property .
759	Initializes the template .
760	Resolves a scope .
761	Registers a petite bean .
762	Registers a bean .
763	Removes a bean from the list of bean definitions .
764	Resolves the bean names for the given type .
765	Registers a PetiteCtor injection point .
766	Registers a property injection point .
767	Registers a set injection point .
768	Registers a Petite method injection point .
769	Register petite init methods .
770	Register petite destroy methods .
771	Registers a PetiteProvider .
772	Registers a provider for the given type and static method .
773	For each bean type .
774	Defines the parameters .
775	Intercepts the given action request .
776	Resolve java version .
777	Push an int value to the method visitor .
778	Checks that the given argument index is valid .
779	Returns the advice field name .
780	Returns the name of a advice method .
781	Load special method arguments .
782	Load static method arguments .
783	Load virtual method arguments .
784	Load a method argument .
785	Stores a method argument at the given index .
786	Prepare return value .
787	Create method signatures key .
788	Creates a new array .
789	Stores the given component type into an array .
790	Extracts the encoding from the content type .
791	Returns true if the given flags are empty .
792	Resolve auth bearer token .
793	Require authentication .
794	Prepares a file to be downloaded .
795	Prepares the response .
796	Gets all cookies with the given name .
797	Read request body from reader .
798	Read request body from stream .
799	Stores a context path variable .
800	Stores a context path variable .
801	Checks if the given parameter is a get parameter .
802	Prepare parameters .
803	Copy parameters to attributes .
804	Invokes the body tag .
805	Renders the given fragment as a char array .
806	Renders a JSP fragment to a string .
807	Invokes all init methods in the bean definition .
808	Calls all the DestroyMethods .
809	Returns a new bean instance .
810	Injects the specified parameters into the bean .
811	Rewrites the given action path .
812	Adds a header with the specified name and value .
813	Adds a property to the profile .
814	Adds a base property .
815	Adds a profile property .
816	Gets the profile property .
817	Resolves a set of macros .
818	Extracts a map from a set of profiles .
819	Converts a byte array to a word .
820	Hash a password into a salt .
821	Checks if the given plaintext has been hashed .
822	Copies all bytes from the input stream to the output stream .
823	Copies the maximum number of bytes from the input stream to the output stream .
824	Parse an action .
825	Resolves the action config .
826	Detect and register alias .
827	Reads the action interceptors from the given AnnotatedElement .
828	Read the ActionFilters from an AnnotatedElement .
829	Read package action path .
830	Read method action path .
831	Parse method alias .
832	Creates an ActionRuntime .
833	Pre - response commit .
834	Applies advice to the given class .
835	Injects the target object into the proxy .
836	Visits an annotation .
837	Resolve a real name from a json name .
838	Resolves a json name .
839	Looks up the type data for the given type .
840	Lookup the type data for the given type .
841	Find subclass type data .
842	Resolves the json name for the given type .
843	Resolves the real name of a class .
844	Reads the content of the temp file .
845	Copies bootstrap methods from the input stream to the output stream .
846	Sets the major version and class name .
847	Puts the constant pool .
848	Put bootstrap methods .
849	Adds a constant field reference .
850	Adds a constant method reference .
851	Adds a constant member reference .
852	Adds a constant member reference .
853	Adds a constant int value to the constant pool .
854	Adds a constant integer or float .
855	Adds a constant long or double to the constant pool .
856	Adds a constant long or double entry .
857	Add a constant name and type to the constant pool .
858	Adds a new constant name and type .
859	Adds a constant to the constant pool .
860	Add a constant utf8 value .
861	Adds a constant method handle .
862	Add a constant method handle .
863	Adds a dynamic constant to the bootstrap method .
864	Adds a dynamic call to a constant .
865	Adds a constant dynamic or invoke dynamic reference .
866	Add constant dynamic or invoke dynamic reference .
867	Add a constant utf8 reference to the constant pool .
868	Adds a constant utf - 8 reference .
869	Adds a bootstrap method to the given handle .
870	Adds a merged type to the table .
871	Returns the hash value of the given name .
872	Removes all entries from the map .
873	Returns a list of all values for the given name .
874	Returns an iterator over the elements in this map .
875	Returns all the entries in this map .
876	Grows the buffer to the specified capacity .
877	Appends a single character sequence to the end of the buffer .
878	Visits an annotation .
879	Visits the end of the chain .
880	Create the first chain delegate start .
881	Create first chain delegate_continue .
882	Parse a path .
883	Pushes a field to the path .
884	Configures the servlet context .
885	Executes the method .
886	Gets all field descriptors .
887	Creates a bean definition for registration .
888	Convert JtxTransactionMode to DbTransactionMode .
889	Reads a property from a JSON object .
890	Puts all elements of the given map into this map .
891	Appends a buffer to this buffer .
892	Writes all objects to the specified writer .
893	Writes the list of objects to the given OutputStream .
894	Writes the list of objects to the output stream .
895	Returns the string representation of the given key .
896	Returns the Integer value associated with the given key .
897	Returns the value of the given key as a Long .
898	Returns the value of the given key as a Double .
899	Returns the float value associated with the given key .
900	Returns the value associated with the given key .
901	Adds a value to the map .
902	Opens the folder with the given name .
903	Returns an array of messages that match the specified filter .
904	Updates the flags of the received email .
905	Closes the folder if it has been opened .
906	Lookup a named parameter .
907	Concatenates the given string with the given target string .
908	Validate action .
909	Add a new violation .
910	Gets the mime type .
911	Download the raw data as a file .
912	Sets the target input stream .
913	Sets the target class name .
914	Sets the target class .
915	Processes the class input stream .
916	Creates the proxy .
917	Defines a class .
918	Returns a new instance of Proxetta .
919	Dump the proxy class in the debug folder .
920	Creates a new instance from the given personal name and from email address .
921	Adds the specified email address to the end of the list .
922	Returns a new email address .
923	Sends a reply to the specified email address .
924	Returns the cc for the given email address .
925	Create a new email message with the specified text and encoding .
926	Creates an email message with the specified html and encoding .
927	Add a header with the given name and value .
928	Returns the value of a property .
929	Gets a boolean .
930	Returns the int value for the given name .
931	Get a long value from a string .
932	Returns the resolvable parameters for this method .
933	Serialize key value .
934	Lookup an alias .
935	Resolves an alias .
936	Resolve a ResultPath .
937	Resolve result path string .
938	Returns the index of the last slash dot in the given string .
939	Returns the index of the last dot after the slash .
940	Returns the index of the dot after the slash .
941	Removes the last Chameleon word from the given name .
942	Resolves the schema name for the given type .
943	Resolve column descriptors .
944	Initializes this object with the given key and tweak .
945	Mixes two integers .
946	Demixes j and d .
947	Schedules a key .
948	Initializes the cache with the given key message and tweaks .
949	Encrypts a block .
950	Converts a byte array to a long array .
951	Remove any bounding .
952	Returns the path to the target .
953	Creates a zlib file .
954	GZip a file .
955	Unzips a file .
956	Returns an unmodifiable list of entries in a zip file .
957	Unzips a zip file to a destination directory .
958	Adds a file to a zip file .
959	Adds a byte array to a zip file .
960	Returns the field descriptor with the given name .
961	Gets the property descriptor .
962	Sets the request bundle name .
963	Sets the localization of the session .
964	Gets the session locale .
965	Filter parameters for bean name .
966	Adds a profile to the PropsEntries .
967	Returns the little - endian value of the given byte array at the given offset .
968	Reads data from an input stream .
969	Reads a label from the bytecode offset .
970	Gets the type annotation bytecode offset .
971	Reads the element values from the input stream .
972	Reads the verification type information .
973	Read a BootstrapMethods attribute .
974	Inspect the constructors of the class .
975	Returns the ctor descriptor for the given arguments .
976	Gets the request map .
977	Create request map .
978	Converts an array to an array .
979	Initializes the decora manager .
980	Adds a file consumer to the list of file consumers .
981	Searches for a file by its URI .
982	Adds a file to the search path .
983	Adds a list of patterns to the list of patterns .
984	Specifies which patterns should be excluded from the file .
985	Adds a path to the list .
986	Returns a list of all files .
987	Initializes the file system .
988	Returns an iterator over the contents of this file .
989	Resolve petite bean wiring mode .
990	Resolve bean name .
991	Returns a Writer .
992	Returns the servlet output stream .
993	Returns the class name .
994	Gets the constructor descriptor .
995	Gets the method descriptor .
996	Gets the method descriptor .
997	Appends the descriptor .
998	Returns the size of this object .
999	Gets the arguments and return sizes .
1000	Sets the status of the transaction as rollback only .
1001	Commit or rollback a transaction .
1002	Rollback all resources .
1003	Request a resource .
1004	Pops the name .
1005	Write a string to the output stream .
1006	Writes the given unicode character .
1007	Writes a charSequence to the output .
1008	Sets the parsing error log level .
1009	Starts a new region .
1010	Checks if the given include string is a valid include string .
1011	Registers a pseudo function .
1012	Lookup a pseudo function by name .
1013	Overrides the visitor to resolve the proxy aspects .
1014	Visits an annotation .
1015	Makes the static init block .
1016	Make the proxy constructor .
1017	Process super methods .
1018	Returns the index of the last occurrence of the given value .
1019	On .
1020	Replaces the asm instruction file with the given class file .
1021	Returns an array of Attribute prototypes .
1022	Registers the default values .
1023	Registers a type with the database .
1024	Looks up the SqlType for the given class .
1025	Lookup a SQL type .
1026	Creates a SOCKS4 proxy .
1027	Creates a SOCKS5 proxy .
1028	Creates a new HTTP proxy .
1029	Returns the total number of thread transactions .
1030	Returns the total number of thread transactions with the given status .
1031	Associates a transaction with this stack .
1032	Continues a transaction .
1033	Lookup a resource manager for the given resource type .
1034	Creates a proxy object for the given class .
1035	Appends a method name to the path .
1036	Align left and pad .
1037	Converts an object to a pretty string .
1038	Converts a String to a Chameleon case .
1039	Formats a paragraph .
1040	Converts a line of text to spaces .
1041	Escapes java characters from a string .
1042	Unescapes Java characters from a string .
1043	Returns the bean of the specified type .
1044	Returns the bean with the given name .
1045	Initializes the bean definition .
1046	Invokes a provider .
1047	Adds a bean to the table .
1048	Sets the bean property .
1049	Get bean property .
1050	Shuts down the server .
1051	Resolves the parameters of a method or a constructor .
1052	Do after body .
1053	Returns the value of a profile .
1054	Ends this node .
1055	Creates a new node for the given tag .
1056	Adds a tag to the DOM .
1057	Remove last child node if empty text .
1058	Returns the query string .
1059	Returns the class name of the action .
1060	Calculate to .
1061	Iterate a collection .
1062	Iterate an array of objects .
1063	Replaces the given substring with the given string .
1064	Replaces a character in a string with a new character .
1065	Replaces all chars in the given string with the given char array .
1066	Replaces the first substring of the given string with the given substring .
1067	Replaces the first character of the given string with the given sub - character .
1068	Replaces the last substring of the given string with the given substring .
1069	Replaces the last character in the string with the given sub - character .
1070	Removes a substring from a string .
1071	Removes a character from a string .
1072	Checks if all strings are empty .
1073	Checks if all strings are blank .
1074	Converts an Object to a String array .
1075	Changes the first character case of a string .
1076	Returns the title of the given string .
1077	Compresses the given chars into a string .
1078	Checks if src starts with subS ignoring case .
1079	Checks if a string ends with a character .
1080	Counts the number of occurrences of a substring ignoring case .
1081	Returns true if the two arrays are equal ignoring case .
1082	Returns the index of the first whitespace character in the given string .
1083	Strip leading char from string .
1084	Strip trailing char from string .
1085	Strips a character from a string .
1086	Strips a character from a string .
1087	Strips a character from a string .
1088	Crops all strings .
1089	Removes all whitespace from the end of a string .
1090	Removes all whitespaces from the end of a string .
1091	Returns the index of a region in a string .
1092	Joins a collection into a single string .
1093	Joins an array of objects with a given separator .
1094	Converts a charset name to a new one .
1095	Checks if a character at the given index is equal to another .
1096	Surrounds a string with the given prefix and suffix .
1097	Converts a string to a prefix .
1098	Returns the suffix of the given string if it ends with the given suffix .
1099	Cuts a string to an index of the given substring .
1100	Cuts the given string from the index of the given substring .
1101	Cut a prefix from a string .
1102	Cuts a suffix from a string .
1103	Cuts the string surrounding the given prefix and suffix .
1104	Inserts the specified string at the specified offset in the specified string .
1105	Returns a string that repeats the specified number of times .
1106	Reverses a string .
1107	Returns the maximum common prefix between two strings .
1108	Find common prefix .
1109	Shortens a string by a suffix .
1110	Converts a string to upper case .
1111	Removes quotes from a string .
1112	Converts a byte array to a hexadecimal string .
1113	Returns a string as a byte array .
1114	Detect a quoting character in a string .
1115	Visits the object with the given name and value .
1116	Visits an enum value .
1117	Visits an annotation .
1118	Registers a type in the database .
1119	Registers an entity of the given type .
1120	Removes the entity descriptor for the given type .
1121	Create entity instance .
1122	Sets the target interface .
1123	Inject target into wrapper .
1124	Lookup annotated properties for a given type .
1125	Detect database and configure db oom .
1126	Closes the gzipstream .
1127	Writes a byte to the output stream .
1128	Executes a request - response filter .
1129	Gets the encoded name .
1130	Returns a byte array .
1131	Writes the data source to a file .
1132	Writes the data source to the given output stream .
1133	Appends an argument to the end of a string .
1134	Prepends the given argument to the given type .
1135	Changes the return type of the given string .
1136	Strips all whitespace characters from the given text .
1137	Registers a converter for a given type .
1138	Lookup a converter for a given type .
1139	Selects a node based on the query string .
1140	Selects nodes from a collection of CSS selectors .
1141	Processes a list of CssSelectors .
1142	Selects the first node matching the given query .
1143	Walk all descendant nodes iteratively .
1144	Walks a list of nodes through the tree .
1145	Selects a node and adds it to the result .
1146	Filter the current results by the specified node and index .
1147	zzUnpackCMap Method .
1148	Returns true if the buffer has been filled .
1149	Creates a page data object .
1150	Removes the select from the sql .
1151	Remove to from .
1152	Remove last order by .
1153	Decodes the given html string .
1154	Detects the name of an entity .
1155	Build order sql .
1156	Build a page sql .
1157	Resolve columns and properties .
1158	Find a DbEntityColumnDescriptor by column name .
1159	Find a DbEntityColumnDescriptor by property name .
1160	Returns the property name for the given column name .
1161	Returns the column name for the given property .
1162	Returns the id value of the specified object .
1163	Sets the value of an object s id property .
1164	Returns the key value for the given object .
1165	Appends a string to the end of this band .
1166	Sets the index .
1167	Expands the capacity .
1168	Calculates the length of the array .
1169	Creates the mixing message .
1170	Creates a Scoped proxy bean .
1171	Loops the JSP body .
1172	Initializes the map .
1173	Checks if the given file is a file .
1174	Uses a watch file .
1175	Starts the timer .
1176	Called when a DirWatcherEvent is received .
1177	Adds an enumeration to the list of enumerations .
1178	Computes the field info size .
1179	Put field info .
1180	Creates a new Target with the given value and scope data .
1181	Writes a property value to the output stream .
1182	Decorate a page .
1183	Parse a page .
1184	Writes a page to a Writer .
1185	Writes the region .
1186	Starts the server .
1187	Runs a process .
1188	Returns the IMAPSSLStore for the given session .
1189	Creates a servlet output stream .
1190	Initialize this template with the given template data .
1191	Append column alias .
1192	Append column name .
1193	Adds a rule to the list .
1194	Applies a rule to a value .
1195	Processes a value and determines if it should be included .
1196	Process excludes .
1197	Returns the pseudo class name .
1198	Adds all elements in the given collection to this list .
1199	Finds the insert point .
1200	Binds an annotation to an action configuration .
1201	Register a new action configuration .
1202	Looks up the action configuration for the given action type or annotation type .
1203	Adds a consumer to the action config .
1204	Sets the system mail properties .
1205	Validates the given value within the validation context .
1206	Finds the last table .
1207	Fixes the elements in the last table .
1208	Registers the session beans for the given http session .
1209	Gets the session map .
1210	Initialize this class with the given name superName and suffix .
1211	Adds the advice initialization method .
1212	Ends the action .
1213	Adds a value to a StringBuilder .
1214	Extracts the profile from the key and value and adds it to the key profile .
1215	Adds a value to a key - value pair .
1216	Convert a typedesc to a class name .
1217	Converts a type reference to a name .
1218	Converts a typedescRIPtion string to a signature .
1219	Converts a type to a typeref .
1220	Adds all the specified consumers to the list of consumers .
1221	Creates a collection .
1222	Converts the given value to a single element collection .
1223	Converts a value to a collection .
1224	Converts a collection to a collection .
1225	Converts a primitive array to a collection .
1226	Adds a line number .
1227	Accepts a method visitor .
1228	Puts the given code into the given ByteVector .
1229	Add a forward reference .
1230	Resolves the given bytecode .
1231	Marks a subroutine .
1232	Adds the subroutine ret successors .
1233	Compares two digits .
1234	Fix the accent of a character .
1235	Puts a byte value into the vector .
1236	Puts two bytes into the byte vector .
1237	Puts a short value into the vector .
1238	Puts a 12 - byte value into the vector .
1239	Puts two bytes into the vector .
1240	Puts an int value into the vector .
1241	Put a 122 - byte value into the vector .
1242	Puts a long value into the vector .
1243	Puts a byte array into the vector .
1244	Enlarges the byte array to the specified size .
1245	Authenticate user via HttpSession .
1246	Authenticate user via token .
1247	Authenticate user via basic auth .
1248	Returns the default message for the given locale and key .
1249	Returns a resource bundle .
1250	Returns the first element of the specified array at the specified index .
1251	Sets the entity id .
1252	Saves an entity to the database .
1253	Updates the given entity .
1254	Updates a property of an entity .
1255	Updates a property .
1256	Find entity by id .
1257	Find one by property .
1258	Returns the first entity matching the specified criteria .
1259	Delete an entity by id .
1260	Delete an entity by id .
1261	Counts the number of entities of the given type .
1262	Increases the value of a property .
1263	Reduces the value of a property .
1264	Returns a list of entities that are related to the given object .
1265	Returns a list of all entities of the specified class .
1266	Removes all attributes from the list .
1267	Returns a set of entries for this object .
1268	Sets a new value for the given key .
1269	Removes the value associated with the given key .
1270	Returns the current stack trace .
1271	Returns the stack trace for the given throwable .
1272	Returns the StackTraceChain for the given Throwable .
1273	Returns the chain of exceptions for a given throwable .
1274	Converts an exception stack trace to a string .
1275	Converts an exception chain to a string .
1276	Builds a message from a throwable .
1277	Unwraps a Throwable .
1278	Registers the Madvoc component as a consumer .
1279	Accepts a madvoc component class .
1280	Returns the system class loader .
1281	Gets the resource as stream .
1282	Gets the resource as stream .
1283	Gets the class as stream .
1284	Gets the class as stream .
1285	Adds a new value to this route .
1286	Finds or creates a new RouteChunk .
1287	Parse a request .
1288	Converts a value to a collection .
1289	Invokes the setter function .
1290	Forces the value of an array to be set .
1291	Creates a bean property .
1292	Extracts the type from a bean property .
1293	Stops the servlet request .
1294	Starts the servlet .
1295	Converts a LocalDate to a Date .
1296	Converts a LocalDateTime to a Calendar .
1297	Defines the proxy for the given class .
1298	Adds a check to the list .
1299	Resolves the ValidationContext for the given class .
1300	Adds all class checks for a given class .
1301	Collect annotation checks for a property .
1302	Collect annotation checks .
1303	Copy default check properties .
1304	Encodes a URI component .
1305	Encodes the given string with the given encoding .
1306	Encodes the given URI scheme with the given encoding .
1307	Encodes the given host with the given encoding .
1308	Encodes the given port with the given encoding .
1309	Encodes the given path with the given encoding .
1310	Encodes the given query with the given encoding .
1311	Encodes the given query parameter into the given encoding .
1312	Encodes the given fragment with the given encoding .
1313	Inspect properties .
1314	Returns all the property descriptors .
1315	Returns an array of cookies .
1316	Unzips the response .
1317	Closes the http connection .
1318	Returns true if this scope accepts the given reference scope .
1319	Prints the routes .
1320	Encrypts the given byte array .
1321	Decrypts the given byte array .
1322	Converts a map to a bean .
1323	Generates a list .
1324	Sets the value of a property descriptor on the target object .
1325	Generates a map with the given key type and value type .
1326	Compares this entity to another entity .
1327	Sets the default header .
1328	Sends a request to the server .
1329	Sends a request to the server .
1330	Add default headers .
1331	Reads the cookies from the response .
1332	Adds the cookies to the http request .
1333	Sends an email to all recipients .
1334	Sets the subject of the message .
1335	Sets the sent date .
1336	Sets the message headers .
1337	Set people .
1338	Sets the recipients of the MimeMessage .
1339	Adds the body data to the email .
1340	Sets the content of the email message .
1341	Create the attachment body part .
1342	Returns the content - type of the given header .
1343	Saves a ResultSet .
1344	Close all associated ResultSets .
1345	Closes the query .
1346	Closes the connection to the database .
1347	Sets the fetch size .
1348	Sets the maximum number of rows .
1349	Executes the update .
1350	Executes a count .
1351	Returns the set of generated columns .
1352	Returns the query string .
1353	Creates a proxy instance of the given aspect class .
1354	Returns a collection of elements from the given iterator .
1355	Splits an Iterator into a Stream .
1356	Compares two objects .
1357	Sets the default wiring mode .
1358	Prints a message at the given level .
1359	Returns the class name of the caller .
1360	Shortens a class name .
1361	Specifies the types that should be excluded from serialization .
1362	Serialize the source object to the target appendable .
1363	Serialize a source object to a string .
1364	Clones an object via serialization .
1365	Writes an object to a file .
1366	Reads an object from a file .
1367	Converts an object to a byte array .
1368	Converts a byte array to an object .
1369	Resolves the table names for the mapped types .
1370	Creates the table names for the given types .
1371	Reads a column value from the result set .
1372	Caches the result set of entities in the cache .
1373	Resolves a provider definition .
1374	Converts a table name to an entity name .
1375	Checks if the connection is valid .
1376	Renders a view to the specified target .
1377	Locates the target view .
1378	Returns the print writer for the response .
1379	Returns the ServletOutputStream .
1380	Writes the content to the response .
1381	Sets the content type .
1382	Prints a string to the output stream .
1383	Login to the server .
1384	Converts an auth token to a JSON object .
1385	Login via BasicAuth .
1386	Logs out the user .
1387	Converts a URL to a container file .
1388	Checks if a directory exists and creates it if it does .
1389	Creates a new directory if it does not exist .
1390	Copies srcFile to destFile .
1391	Copy a directory to another directory .
1392	Move a file to a directory .
1393	Moves a directory to a new location .
1394	Deletes all files in the given directory .
1395	Reads UTF - 8 characters from a file .
1396	Read chars from a file .
1397	Writes a char array to a file .
1398	Writes a string to a file .
1399	Appends a string to a file .
1400	Read a number of bytes from a file .
1401	Writes a byte array to a file .
1402	Appends a byte array to a file .
1403	Copy a file from src to dest
1404	Deletes a file .
1405	Creates a temporary directory .
1406	Checks if the given file is binary .
1407	Check if srcDir is the same as destDir .
1408	Checks if srcFile is a copy of destFile .
1409	Prints the usage of a command .
1410	Resolve the method with the given name for the given action class .
1411	Registers an action .
1412	Register a path alias .
1413	Returns true if this is the next iteration .
1414	Creates a CharArraySequence from a char array .
1415	Executes the method .
1416	Returns true if all characters in the input array are uppercase .
1417	Returns a char sequence .
1418	Returns an array of URLs for the given class .
1419	Returns the bcc of an email address .
1420	Registers the given type with the given serializer .
1421	Lookup the serializer for the given type .
1422	Parse a request stream .
1423	Returns the value of the parameter with the given name .
1424	Returns the value of the parameter with the given name .
1425	Returns the file with the given param name .
1426	Returns an array of file uploads for a given request parameter .
1427	Initializes the filter .
1428	Parse a template .
1429	Finds the macro end .
1430	Counts the number of escapes from a template .
1431	Build a query from a query map .
1432	Parse a query .
1433	Prepare header parameter name .
1434	Extracts the media type from the given content type .
1435	Returns the HTML representation of the given appendable .
1436	Converts the given appendable to an inner HTML string .
1437	Configure the madvoc configuration with the given servlet context .
1438	Resets this object to its original state .
1439	Sets whether the parser should be lazy .
1440	Replaces the given class with a mapping for the given path .
1441	Parse a string into a list .
1442	Parse a string as a map .
1443	Resolves a value that is not a Supplier .
1444	Skips a single object .
1445	Parse a string .
1446	Parse string content .
1447	Parse unicode .
1448	Parse unquoted string content .
1449	Parse a number .
1450	Parse array content .
1451	Create empty ctor .
1452	Create a simple method wrapper .
1453	Resolves the raw type name .
1454	Resolve reference from value .
1455	Resolve reference from values .
1456	Read all references from an annotation .
1457	Builds the default references for the given Executable .
1458	Build default reference .
1459	Removes all duplicate names .
1460	Converts a string array of references to BeanReferences .
1461	Converts a string value to a list of references .
1462	Runs a JoddJoy .
1463	Finds the method with the given name in the given class .
1464	Finds a constructor for the given parameter types .
1465	Resolves all interfaces for the given type .
1466	Compares two classes .
1467	Force access to the given AccessibleObject .
1468	Creates a new instance of the specified class with the specified parameters .
1469	Returns the superclasses of the given type .
1470	Returns the child class of the given instance .
1471	Returns the jar file of the given class .
1472	Sleeps for a specified amount of time .
1473	Sleeps for a period of time .
1474	Waits for the given object to complete .
1475	Creates a daemon thread factory .
1476	Returns the value associated with this object .
1477	Visits a parameter .
1478	Visits an annotation .
1479	Visits a type annotation .
1480	Visits a parameter annotation .
1481	implements the visitor to visit a field .
1482	implements the visitor to look for methods that require ASM5 .
1483	implements the visitor to invoke a dynamic insn .
1484	implements the visitor to set the opcode and label .
1485	visitMultiANewArrayInsn Method .
1486	Visits a try catch block .
1487	Visits a local variable annotation .
1488	Converts the properties to a writer .
1489	Processes a stream of data .
1490	Returns the next element in the list .
1491	Moves to the next row .
1492	Joins the given arrays into one .
1493	Joins the specified arrays with the specified component type .
1494	Resizes the given buffer to the given size .
1495	Appends a new element to the end of the buffer .
1496	Removes a component from an array .
1497	Returns the index of the first occurrence of the given value in the array .
1498	Returns the index of the given value in the array .
1499	Returns the index of a subset of a byte array .
1500	Enables the XHTML mode .
1501	Parse a document .
1502	Parses a Lagarto document .
1503	Compute the maximum stack and local .
1504	Ends the current basic block with no successor .
1505	Collect attribute prototypes .
1506	Injects the target object into the madvoc context .
1507	Register a pseudo class .
1508	Lookup the pseudo class with the given name .
1509	Invokes the specified action .
1510	Get all bean property names .
1511	Overrides the visitor to look for properties that match the rules .
1512	Returns true if the specified property name matches the specified rule .
1513	Resolves a class to a method injection point .
1514	Read parameters from filter config .
1515	Send a bundle file .
1516	Lookup a bundle file .
1517	Lookup a GZIP bundle file .
1518	Registers a bundle .
1519	Creates a digest from the given source string .
1520	Creates a bundle .
1521	Resets the state of this bundle .
1522	Fixes CSS relative URLs .
1523	Update a column .
1524	Create table reference name .
1525	Gets the DbSession .
1526	Converts the given value to a single element array .
1527	Parse signature for generics .
1528	Resolves a class to a set of injection points .
1529	Checks if the given property type matches one of the ignored types .
1530	Open a connection for a query .
1531	Opens a transaction .
1532	Closes a transaction .
1533	Commits a transaction .
1534	Rolls back the transaction .
1535	Creates a new Properties object from a file .
1536	Creates a Properties object from a String .
1537	Load properties from a string .
1538	Returns a subset of a Properties object .
1539	Creates a new Properties object from the classpath .
1540	Get a property from a map .
1541	Resolve all variables .
1542	Resolves a property .
1543	Resolves a scope .
1544	Gets the transaction mode .
1545	Register annotations .
1546	Read TransactionAnnotationValues .
1547	Accepts a node .
1548	Checks if the given node is an element .
1549	Returns true if the given node accepts the current results .
1550	Unescapes the given value .
1551	Build jre packages .
1552	Clones the given node to the given node .
1553	Detaches this node from its parent .
1554	Adds a child node to this node .
1555	Inserts a child node at the specified index .
1556	Inserts a new child before a refChild .
1557	Inserts newChilds before refChild .
1558	Inserts a child node after a new child node .
1559	Inserts a child node after a new child node .
1560	Removes all children of this node .
1561	Find a child node with the given name .
1562	Filter child nodes by predicate .
1563	Checks if this node is a child of this node .
1564	Initializes the child element nodes .
1565	Initialize the sibling names .
1566	Initialize the child nodes .
1567	Changes the owner document of the given node .
1568	Returns the previous sibling name of this node .
1569	Gets the text content .
1570	Returns the HTML representation of this document .
1571	Returns the inner HTML of this document .
1572	Visit all child nodes of the given node visitor .
1573	Returns the CSS path for this node .
1574	On decora tag .
1575	On IDAttrStart .
1576	Defines the decora tag .
1577	Add a proxy aspect to the JoyProxetta .
1578	Adds a mapping to the given root package .
1579	Adds the root package of the given action class .
1580	Finds the root package for the given action path .
1581	Resolve validation message .
1582	Removes duplicate bean references .
1583	Adds a name pattern to the props file .
1584	For each target .
1585	For each target and in .
1586	For each target and out .
1587	Extracts the parameters values from the target array .
1588	Creates an array of target objects for the given action and method parameters .
1589	Creates a method argument for the given type .
1590	Called when a session is created .
1591	Called when a session is destroyed .
1592	Adds a value to the list .
1593	Adds all elements of the given JsonArray to this JsonArray .
1594	Removes the object at the given position .
1595	Resolve target .
1596	Method targetNotFound .
1597	Converts a value to a string .
1598	Filters the MadvocRouter by the specified actionFilter class .
1599	Returns the pseudo function name .
1600	Resolves all properties of the given type .
1601	Creates a socket for a SOCKS4 proxy .
1602	Returns the number of attributes .
1603	Returns a set of all ActionResults .
1604	Checks if a character is equal to another .
1605	Finds the first equal .
1606	Finds the first equal char in the array at the specified index .
1607	Adds command line arguments .
1608	Sets a command line environment .
1609	Runs the process .
1610	Invokes the given listener with the given type .
1611	Copies the input frame to the output frame .
1612	Get abstract type from api format .
1613	Get abstract type from descriptor .
1614	Sets the input frame from the api format .
1615	Returns the local type .
1616	Sets the local index and abstract type .
1617	Pushes an abstract type to the output stack .
1618	Pushes a descriptor to the symbol table .
1619	Pops the specified number of elements from the output stack .
1620	Pop a descriptor .
1621	Adds the initialized type .
1622	Gets the initialized type .
1623	Puts an abstract type into the given symbol table .
1624	Removes expired values from the cache .
1625	Schedules a prune task .
1626	Visits a module .
1627	implements the visitor to check if this feature requires ASM7
1628	Visit an outer class .
1629	Visits an annotation .
1630	Visit a nest member .
1631	Visits an inner class .
1632	Visits a field .
1633	Gets the DbThreadSession .
1634	Closes the thread session .
1635	Creates the execution array .
1636	Invokes the action method .
1637	Reads the request body from the stream .
1638	Calculates the index of the first item of a page .
1639	Calculates the index of the first item of a page .
1640	Returns true if the given int is equal to the given value .
1641	Converts a char array to a byte array .
1642	Finds the first difference between the source and the match .
1643	Resolves the name of a node .
1644	Resolve attribute name .
1645	Renders an attribute .
1646	Loads the properties from a file .
1647	Loads the props from a file .
1648	Loads the Props from an InputStream .
1649	Loads the props from a map .
1650	Loads a property from a map .
1651	Load Props from the classpath .
1652	Returns the value for the given key or the default value if the key does not exist .
1653	Sets the value of a profile .
1654	Extracts the properties from the target map .
1655	Extracts a set of profiles from the target map .
1656	Extracts the sub - properties from the active profiles .
1657	Returns a map of active profiles with the given prefix .
1658	Adds a profile to a map .
1659	Resolves the active profiles .
1660	Gets all profiles .
1661	Returns the profiles for the given wildcard .
1662	Adds a property injection point .
1663	Adds a set injection point .
1664	Adds a method injection point .
1665	Adds an array of InitMethodPoints .
1666	Adds a list of DestroyMethodPoints to the list of methods to destroy .
1667	Resolve target class .
1668	Inject target into wrapper .
1669	Gets the target wrapper type .
1670	Returns the field descriptor for the given field name .
1671	Returns the type of this class .
1672	Resolves the key type .
1673	Resolves the component type .
1674	Creates a JsonResult from the given object .
1675	Creates a JsonResult from the given exception .
1676	Resolves the HttpMethod from the method name .
1677	Returns true if sNdx matches pNdx .
1678	Resolves the Loading .
1679	Resolve resource loading .
1680	Loads a class .
1681	Returns the URL of the resource with the given name .
1682	Waits for the current thread to finish .
1683	Detects the type of an annotation .
1684	Builds an injection point .
1685	Overrides the visitor to lookup a class .
1686	Returns an array of URLs for the given class .
1687	Sets the bean .
1688	Updates the bean .
1689	Loads the property descriptor .
1690	Returns the getter for the specified property .
1691	Returns the setter for the given declared property .
1692	Connects to the database .
1693	Adds an iterator to the list of iterators .
1694	Prints the logo .
1695	Stops the joy .
1696	Creates a new socket .
1697	Creates an SSLSocket .
1698	Returns the default SSLSocketFactory .
1699	Returns the socket factory for the given proxy .
1700	Returns a random string with the specified number of characters .
1701	Returns a random string .
1702	Returns a random string containing the specified ranges .
1703	Returns a new array instance for the given target type .
1704	Inject value into object .
1705	Converts the given value to the given type .
1706	Visit a provider .
1707	Creates a default type cache .
1708	Adds a value to the map .
1709	Returns all method descriptors .
1710	Resolves the IP address for the given hostname .
1711	Gets the IP address as an int .
1712	Validate against IPAdress V4 format .
1713	Resolves the host name for the given ip .
1714	Download bytes from a URL .
1715	Downloads a string from a URL .
1716	Downloads a file from a URL .
1717	Injects the specified action request into the madvoc scope .
1718	Outjects the given action request to the madvoc scope .
1719	Creates a new InetSocket with the given hostname and port .
1720	Connects to the given hostname and port using the specified connection timeout .
1721	Gets the primitive class name index .
1722	Loads a class .
1723	Loads an array class by component type .
1724	Shuts down all bean instances .
1725	Returns a binary search for an element in an array .
1726	Returns a binary search for the element at the specified index using the specified comparator .
1727	Adds a list of excludes to this rule .
1728	Adds a string to the list of includes .
1729	Include this bean as a template .
1730	Starts the tag at the given index .
1731	Registers a component .
1732	Resolve column SQL type .
1733	Preprocess a SQL string .
1734	Create result set mapper .
1735	Finds a generated key for the given type .
1736	Populate the generated keys for the given entity .
1737	Creates a wrapper for the given class .
1738	Sets a bean .
1739	Sets the parameters of the map .
1740	Sets the list of objects .
1741	Inserts a new chunk after the given one .
1742	Looks up the type of the given entity .
1743	Returns the entity descriptor for the given column reference .
1744	Resolve table .
1745	Resolve the class of the given object .
1746	Append missing space .
1747	Returns an enumeration of the file parameter names .
1748	Include a page in a request .
1749	Returns the URL of the given request .
1750	Gets the request URI .
1751	Resolve the parameter names for the given action class method .
1752	Starts the petite session scope .
1753	Stops the petite container .
1754	Adds a subject to the filter .
1755	Adds a message id to the filter .
1756	Adds a from string to the filter .
1757	Adds a recipient string to the filter .
1758	Adds a CC recipient to the filter .
1759	Adds a BCC recipient to the filter .
1760	Adds a flag to the filter .
1761	Adds a flag to the filter .
1762	Adds a ReceivedDate term to the filter .
1763	Adds a sent date to the filter .
1764	Sets the size of the filter .
1765	Concatenates the given email filters into a single email filter .
1766	Returns a new EmailFilter with the search term concatenated with the given email filters .
1767	Adds a NotTerm filter to this filter .
1768	Concatenates the given search term with the given search term .
1769	Encodes a byte array into a string .
1770	Convert value to byte array .
1771	Returns true if the request is a valid gzip request .
1772	Validates the given object against this validation context .
1773	Validates the given target object against the given target name .
1774	Adds a profile to the enabled profiles list .
1775	Enables or disables the specified profiles .
1776	Checks if the given string array matches the specified profiles .
1777	Parse request body .
1778	Converts this to milliseconds .
1779	Adds the given JulianDate to this date .
1780	Returns a sub - date .
1781	Sets a fraction .
1782	Initializes the parser with the given input .
1783	Emits a comment .
1784	Called by the visitor when it receives an error .
1785	Creates a hash of the given password .
1786	Generates a PBKDF2 secret key .
1787	Convert a hexadecimal string to a byte array .
1788	Resolve provider definitions .
1789	Sets the name of the attachment .
1790	Sets the content id from the name if missing .
1791	Resolves the content type .
1792	Parse the type of a signature .
1793	Computes the size of the attributes .
1794	Puts the module attributes .
1795	Decodes the given source string using the given encoding .
1796	Decodes a query string using the given encoding .
1797	Starts the connection pool .
1798	Check connection provider .
1799	Visit a method .
1800	Overrides the visitor to inspect all super classes and interfaces .
1801	Create a method signature visitor .
1802	Converts a list of elements to a CSV string .
1803	Converts a line to a string array .
1804	Resolves the ctor injection point for the given type .
1805	Creates a ClassReader for a ProxyAdvice .
1806	Gets the cached advice class reader .
1807	Encrypts the given string using Base64 .
1808	Decrypts a string .
1809	Returns the logger with the given name .
1810	Sets the cookie name .
1811	Creates an action request .
1812	Creates a wrapper for the given class .
1813	Destroys a bean .
1814	Shuts down the server .
1815	Gets a list of all messages in the specified folder .
1816	Starts the clustered service container .
1817	Runs the reporting function .
1818	Prints an error message .
1819	Prints the message rate .
1820	Maps a file to a read - only buffer .
1821	Closes the archive .
1822	Returns the number of times this method has been called .
1823	Returns the current position in the log .
1824	Offers a set of vectors to the client .
1825	Appends padding to the message .
1826	Closes the control session .
1827	Polls for an error response .
1828	Stops a replay .
1829	Event - available image .
1830	Notifies the subscriber that an image is unavailable .
1831	Creates a StatusIndicatorReader for SendChannel .
1832	Reads a ReceiveChannelStatus from a CountersReader .
1833	Sets the limit of the buffer .
1834	Appends a buffer to the end of the buffer .
1835	Returns a poll of the control session ids .
1836	Maps a report file to a new file .
1837	Creates a snapshot of the underlying StreamCompositeKey .
1838	Creates the default header .
1839	Adds a key buffer to the message .
1840	Label a counter message flyweight .
1841	Connects to an Aeron response stream .
1842	Tries to connect to the given response channel .
1843	Closes a session .
1844	Start recording a message .
1845	Sends a stop message to the specified channel .
1846	Replay a message .
1847	Stops a replay .
1848	Lists all records for a given control session .
1849	Returns true if there are any records for a given URI .
1850	Lists a recording .
1851	Returns true if the recording should be extended .
1852	Gets the recording position .
1853	Gets the stop position .
1854	Lists the subscriptions for a given channel fragment .
1855	Checks if the given udp channel matches the given tag .
1856	Returns an InetSocketAddress for the given ChannelUri .
1857	Returns a description of this channel .
1858	Adds a destination to the map .
1859	Inserts a packet into the network .
1860	Finds the control toggle for the given counters .
1861	Adds a value to the params .
1862	Returns the channel tag .
1863	Returns the entity tag .
1864	Adds a session id to a channel .
1865	Returns the tag of the given parameter value .
1866	Appends padding to the header .
1867	Updates the publisher limit .
1868	Allocates a new UnsafeBufferPosition .
1869	Returns the label name for the given type .
1870	Scan for availability .
1871	Clears this channel uri string builder .
1872	Validate that the channel URI string is valid .
1873	Sets the prefix of the channel URI .
1874	Sets the media .
1875	Sets the control mode .
1876	Sets the term length .
1877	Sets the term offset .
1878	Sets the linger value .
1879	Open a datagram channel .
1880	Closes the datagram channel .
1881	Checks if a frame is valid .
1882	Receives a datagram from the server .
1883	On nak .
1884	Process timeouts .
1885	Returns the status of a request .
1886	Allocates an Atomic Counter .
1887	Resets the vector .
1888	Validates this buffer .
1889	Validate and compute length .
1890	Returns the length of the producer window .
1891	Validate socket buffer lengths .
1892	Validate page size .
1893	Validate session id range .
1894	Validate unblock timeout .
1895	Sets the error code .
1896	Resets all parameters to their default values .
1897	Encodes an array of ClusterMembers into a string .
1898	Add member status publications .
1899	Closes all publications of the cluster members .
1900	Returns true if the cluster has an active quorum .
1901	Returns the quorum position of a cluster .
1902	Resets the log positions of the cluster members .
1903	Returns true if all votes in the cluster have reached the given position .
1904	Returns true if candidateTermId has won vote on full count .
1905	Returns true if the candidateTermId has a majority vote .
1906	Determines if the given member is a member of the cluster .
1907	Validate the endpoints of a member .
1908	Checks if two clusters have the same endpoints .
1909	Returns true if the candidate is unanimous .
1910	Returns true if the candidate is a quorum candidate .
1911	Returns true if there are no duplicate endpoints .
1912	Finds the index of a member in the cluster .
1913	Removes a member from the cluster .
1914	Returns the cluster id of the highest member in the cluster .
1915	Maps an existing CnC file to a mapped bytes buffer .
1916	Returns true if the driver is active .
1917	Returns true if the driver is active .
1918	Checks if the driver is active .
1919	Request termination of a driver .
1920	Returns the value of the frameLength variable .
1921	Orders the length of a frame .
1922	Sets the type of a frame .
1923	Sets the flags at the given offset in the buffer .
1924	Frames a term offset .
1925	Frame a term id .
1926	Find counter id by recording id .
1927	Find counter id by session id .
1928	Returns the recording id for a given counter .
1929	Checks if a counter is active .
1930	Add an application specific feedback frame to the status message .
1931	Reloads the file .
1932	Finds the last term .
1933	Creates a recovery plan .
1934	Creates a recovery plan from a list of snapshots .
1935	Appends a term to this record .
1936	Appends a snapshot .
1937	Commits a log position .
1938	Returns a tombstone entry .
1939	Closes the publication .
1940	Returns the number of vectors in the publication .
1941	Unblocks the specified term from the specified buffers .
1942	Returns the channel name .
1943	Sets the channel of the message .
1944	Checks if the given term length is valid .
1945	Checks the page size .
1946	Cas active term count boolean .
1947	Computes the position of a term .
1948	Compute log length .
1949	Store the default frame header .
1950	Apply default header .
1951	Rotate the log .
1952	Initialise the tail with a termId .
1953	Returns the offset between rawTail and termLength .
1954	Returns the raw volatile portion of a metadata buffer .
1955	Cas RawTail .
1956	Writes a token to a DirectBuffer .
1957	Allocates a new counter .
1958	Finds the counter id .
1959	Checks if a counter has a replay .
1960	Gets snapshot recording id .
1961	Convert flags to chars .
1962	Sets the channel of the message .
1963	Offers a buffer to the cluster .
1964	Wraps an AtomicBuffer .
1965	Commits the frame to the buffer .
1966	Aborts the process .
1967	Starts the media driver .
1968	Closes the connection .
1969	Computes the position of the frame .
1970	Allocates a new counter .
1971	Find the counter id .
1972	Creates a snapshot of the underlying StreamCompositeKey .
1973	Allocates a counter .
1974	Closes the cnc buffer .
1975	Dispatches a descriptor to the consumer .
1976	Adds a new slab to the pool .
1977	Sets a byte value at the given index .
1978	Adds the statistics .
1979	Calculates the row ranges for a filter .
1980	Convert an array type to a group type .
1981	Convert a StructTypeInfo to a GroupType .
1982	Annotate a message .
1983	Ends the previous bit - packed run .
1984	Reads a single object from the stream .
1985	Reads a list of footers from a file .
1986	Reads a summary file .
1987	Reads a footer from an input file .
1988	Reads the next row group .
1989	Reads the next filtered row group .
1990	Reads a dictionary from a column chunk .
1991	Adds a writer to the parquet memory manager .
1992	Removes a writer from the list .
1993	Updates the allocation .
1994	Register a Scale callback .
1995	Starts the wizard .
1996	Starts a new block .
1997	Starts a new column .
1998	Writes a dictionary page .
1999	Write data page .
2000	Writes a chunk of data .
2001	Ends the current block .
2002	Copy bytes from the given input stream to the given position output stream .
2003	Ends the parquet .
2004	Merges a list of files into a ParquetMetadata object .
2005	Writes the merged metadata files to the given output path .
2006	Write metadata file .
2007	Merge a file metadata into a global metadata .
2008	Reads a value from the current page .
2009	Returns true if the given schema is null .
2010	Returns null if the given objects are null .
2011	Make a value from a string .
2012	Converts extra metadata to ThriftMetaData .
2013	Converts a thrift class to a ThriftMetaData object .
2014	Returns a JSON representation of this Thrift object as a Map .
2015	Writes a null value .
2016	Writes a page .
2017	Initializes the DeltaBinaryPacking from the given page .
2018	Allocates the values buffer .
2019	Checks if an enum value matches the expected type .
2020	Calculates the bit widths for the delta block buffer .
2021	Throws an exception if it is an instance of the given class .
2022	Gets statistics based on type .
2023	Returns a builder for reading a primitive type .
2024	Merges the given statistics with this one .
2025	Gets the non - null schema .
2026	Creates a new TaskAttemptContext .
2027	Invokes the given method on the given object with the given arguments .
2028	Writes the list of members to a StringBuilder .
2029	Merges all fields of the given group type into a new group type .
2030	Initializes the counter from a Reporter .
2031	Returns a filter based on the given configuration .
2032	Returns a list of all the footers in the task side .
2033	Generates a list of parquet input splits .
2034	Writes a message to the message writer .
2035	Validates the mapping .
2036	Serialize a protobuf message descriptor .
2037	Creates a direct codec factory .
2038	Modify the required fields in the protocol if they are missing .
2039	Checks if the set is valid .
2040	Read FileMetaData from InputStream .
2041	Closes the record writer .
2042	Sets the message type schema for the given job .
2043	Adds a primitive type to a class .
2044	Asserts that the given column is of the given type .
2045	Casts a long to an int throwing an exception if the cast is overflowing .
2046	Creates a SchemaMapping from an arrow schema .
2047	Creates a SchemaMapping object from the given parquet schema .
2048	Maps an arrow schema to a parquet schema .
2049	Write data page V2 header .
2050	Skip to match .
2051	Writes an object to the configuration as Base64 .
2052	Removes a key from the cache .
2053	Adds a new value to the cache .
2054	Returns the current value for the given key .
2055	Writes a value to the output stream .
2056	Write value without conversion .
2057	Sets the glob .
2058	Writes the content to the FSDataOutputStream .
2059	Opens a file .
2060	Creates a record filter for a column .
2061	Convert a StructType to a MessageType .
2062	Creates a new group type based on the given repetition and alias .
2063	Returns a new GroupType that wraps a list of elements .
2064	Gets the merged key value metadata .
2065	Get a ParquetInputSplit .
2066	Gets fields by name .
2067	Resolves the schema access .
2068	Gets the input files .
2069	Check if there are enough parquet files to merge .
2070	Gets the input files from the partition directory .
2071	Creates a PagedRecordFilter .
2072	Creates a ListConsumer for a given consumer .
2073	Initializes the partition .
2074	Merge a tuple into a tuple summary data .
2075	Sums up a tuple .
2076	Reads a struct from the stream .
2077	Reads a map entry .
2078	Writes an integer to the output stream .
2079	Read a little - endian int from a ByteBuffer .
2080	Sets the schema for the given job .
2081	Creates a topic if it doesn t exist .
2082	Duplicate pipeline stage beans .
2083	Creates a stage bean .
2084	Create interceptors .
2085	Creates an interceptor bean .
2086	Parse Avro schema .
2087	Converts milliseconds to days .
2088	Get the Avro schema from the Avro header .
2089	Upgrades from V1 to V2 .
2090	Returns the number of bytes in the text output stream .
2091	Copies blobstore resources to pipeline directory .
2092	Resets this object to its original state .
2093	Report the health of a thread .
2094	Registers a thread .
2095	Store control hub configs .
2096	Checks if the user is authenticated .
2097	Upgrade the pipeline if necessary .
2098	Upgrade if needed .
2099	Upgrades a stage configuration if needed .
2100	Upgrade services if needed .
2101	Upgrades a stage instance if needed .
2102	Gets the fields to null .
2103	Checks if the given name is a system class .
2104	Adds an element to the list .
2105	Add and get evicted .
2106	Returns the value for the given key or the default value if the key isn t present .
2107	Add reported errors if needed .
2108	Creates a Descriptors . Descriptor from a protoDescriptorFile .
2109	Gets all file descriptors .
2110	Populate defaults and extensions .
2111	Get a descriptor from a file descriptor set .
2112	Converts a protobuf to a sdc field .
2113	Convert a sdc field to a protobuf message .
2114	Converts a sdc field to a protobuf message .
2115	Upgrades a list of configs to a Java bean .
2116	Check connection .
2117	Converts a Kudu type to a Field . Type .
2118	Creates a field from a row result .
2119	Intercepts a list of records .
2120	Gets the text .
2121	Add missing configurations to the stage .
2122	Parse a response .
2123	Adds the response headers to the record .
2124	Write response header to field .
2125	Write response header to record header .
2126	Saves the metadata file .
2127	Configures the client .
2128	Parse headers only .
2129	Increments the source offset if pagination is enabled .
2130	Parse a paginated result .
2131	Adds the response headers .
2132	Resolves the headers .
2133	Processes a response .
2134	Returns true if the specified property is defined in the configuration .
2135	Converts a DataParserException to a DataParserException .
2136	Converts a DataGeneratorException to a DataGeneratorException .
2137	Get credentials .
2138	Preview a pipeline with an override .
2139	Copies a string builder to a buffer .
2140	Removes all logical duplicates from a set of packages .
2141	Attempts to empty the current batch .
2142	Finds the next main line .
2143	Resolves a file chunk .
2144	Closes the connection .
2145	Escapes a quoted substring .
2146	Gets the FlowControlSettings .
2147	Gets the channel provider .
2148	Put a batch of data into the data channel .
2149	Compile the given expression into a Grok pattern .
2150	Digests the grok pattern from the original expression .
2151	Adds a dictionary to the given input stream .
2152	Adds a dictionary to the Grok library .
2153	Stops the aggregator .
2154	Rolls the aggregators into a map .
2155	Serializes an object to a string .
2156	Deserialize a type from a string .
2157	Deserializes a type from a file .
2158	Writes a record to the output stream .
2159	Resolve an EL value .
2160	Generates the inner field from the list .
2161	Gets the table name from a metadata record .
2162	Returns the database name for the given metadata record .
2163	Gets the internal field of a metadata record .
2164	Returns the location of the given metadata record .
2165	Returns the custom location for the given metadata record .
2166	Returns the Avro schema for the given metadata record .
2167	Returns the data format for the given metadata record .
2168	Create a new schema metadata field builder .
2169	Validate partition information .
2170	Generate partition path .
2171	Serialize AVRO schema to HDFS .
2172	Sets the parameters for a record .
2173	Gets the configuration .
2174	Parses a rfc3164 time string .
2175	Formats the given template with the given arguments .
2176	Starts a batch .
2177	Check if a record contains solr fields .
2178	Filter a list of autogenerated field names .
2179	Sends an OnRecordErrorException to the handler .
2180	Parse a jar name .
2181	Parse a URL .
2182	Returns an instance of CouchbaseConnector .
2183	Closes the Couchbase bucket and environment .
2184	Validates a Couchbase config .
2185	Gets the label from a string code .
2186	Verifies that a dependency exists .
2187	Reads a key from the vault .
2188	Gets the operation type from the header .
2189	Writes a record to the output stream .
2190	Builds a subdoc mutation .
2191	Creates a SQL string for an ALTER_TABLE table .
2192	Configures this ticket .
2193	Takes a batch of messages .
2194	Commits the given offset to the control channel .
2195	Throws a consumer error on the control channel .
2196	Injects a stage .
2197	Returns a JSON representation of the definitions .
2198	Returns the publisher definition for the given name .
2199	Formats a column name .
2200	Formats the given value ignoring case .
2201	Gets information about a pipeline .
2202	Create a draft pipeline fragment .
2203	Get a list of pipelines .
2204	Import a PipelineFragment .
2205	Gets the file path .
2206	Gets an operation from a record .
2207	Returns the field path for a given column .
2208	Returns an EnrichedEvent from the queue .
2209	Returns a runner .
2210	Returns the idle runner for the given idle time .
2211	Returns a new runner .
2212	Destroys the pipeline .
2213	Validates that the pipeline is not destroyed .
2214	Checks if a stream exists .
2215	Gets the last shard id .
2216	Process a queue of records .
2217	Handles a SQLException .
2218	Returns a hash code for a given column .
2219	Compare two files .
2220	Retrieves the PID value from the field if it is possible .
2221	Validate and extract fields to hash .
2222	Get proxy user .
2223	Returns a new instance of ActiveStats .
2224	Creates a snapshot of this stats object .
2225	Ensures that the directory exists .
2226	Writes a batch of records to the cache .
2227	Writes a batch of records to the cache .
2228	Writes the given key to the given recordIterator .
2229	Generates a No More Data event .
2230	Detects a new partition in the cache .
2231	Update a record for HDFS .
2232	Processes a value from a group .
2233	Checks if two Stages have the same version .
2234	Main method to run mesos .
2235	Configure auth and build client .
2236	Resolves the headers for the given record .
2237	Gets the HttpMethod .
2238	Fills the null types in the bindings .
2239	Gets the field null .
2240	Loads a schema from a schema registry .
2241	Registers a schema with the schema registry .
2242	Loads a schema from the registry .
2243	Gets the schema id from the subject .
2244	Loads a Schema from the registry .
2245	Writes a schemaId to the output stream .
2246	Detect a schema id from a byte array .
2247	Gets the default values from a schema .
2248	Parse a message into a list of records .
2249	Logs the details of this dependency .
2250	Get the bad records from the error sink .
2251	Initializes the schema generator .
2252	Returns the outward edge vertices for the given vertex .
2253	Returns the inward edge vertices for the given vertex .
2254	Serializes an offset map to a string .
2255	Deserializes an offset map from a string .
2256	Queues a report .
2257	Get a report from Omniture .
2258	Checks if the checkpoint file exists on hdfs path .
2259	Writes the given partition offsets to the main offset file .
2260	Deletes a blob .
2261	Handle a GCS error .
2262	Handles an archive request .
2263	Gets a live file reader .
2264	Releases the reader .
2265	Sets the dpm base URL .
2266	Adds a default header .
2267	Parse a date from a string .
2268	Escapes a string using UTF - 8 .
2269	Gets the client .
2270	Initializes the GPUdb .
2271	Gets the table metadata .
2272	Creates a BulkInserter .
2273	Creates a new event builder .
2274	Builds a schema from a map of fields and levels .
2275	Convert an ORACLE code to a SDC code .
2276	Adds jars to a job .
2277	Adds jars to the job .
2278	Check the field order by list .
2279	Checks if the given field name matches the given condition expression .
2280	Gets the offset lag for a file .
2281	Calls the premain method with the given arguments .
2282	Gets the Kafka parallelism .
2283	Runs a query .
2284	Converts a list of fields to a hash map .
2285	Gets the table description .
2286	Validates that the table accepts inserts .
2287	Returns the column type for the given field .
2288	Checks if the given type is nullable .
2289	Gets the schema for a table .
2290	Gets the column properties .
2291	Returns the class for the given type name .
2292	Initializes the Aerospike client .
2293	Returns the topic for the given record .
2294	Upgrades configs from V5 to V6 .
2295	Returns a ProxyInputStream .
2296	Returns a ProxyOutputStream .
2297	Returns true if the file exists .
2298	Parses a permission string into an FsPermission object .
2299	Validates that all services are available .
2300	Creates a simple aggregator .
2301	Returns the aggregator unit for the given class .
2302	Creates a new aggregator .
2303	Creates a new group by aggregator .
2304	Starts the data provider .
2305	Stops the aggregator .
2306	Rolls a new data window .
2307	Acquires a LoginManager for a given login type .
2308	Releases the LoginManager .
2309	Converts a file glob to a regular expression .
2310	List objects lexicographically .
2311	Stops the pipeline .
2312	Produce empty batches for idle runner .
2313	Creates a new failure snapshot .
2314	Converts a record to a bound statement .
2315	Sets a new configuration .
2316	Generate kudu lookup key .
2317	Handles partitioning turned off or on .
2318	Reads a line of text from the stream .
2319	Rolls the timer .
2320	Enable DPM .
2321	Disable DPM .
2322	Normalize dpm base URL .
2323	Retrieve a user token .
2324	Logout the user .
2325	Updates the token file .
2326	Update dpm . properties .
2327	Creates a Schema . Field for the given field .
2328	Creates a complex schema for a given field .
2329	Gets the decimal scale or precision .
2330	Returns the default value for the given schema .
2331	Initialize metrics if needed .
2332	Compares two wrapped files .
2333	Returns the index of the group with the given name .
2334	Returns a list of group names .
2335	Checks if a string is a escaped char .
2336	Returns true if s is a slash escaped character .
2337	Checks if the given string is inside a character class .
2338	Counts the number of open parens in a string .
2339	Extracts group info from a named pattern .
2340	Replaces escaped characters in the given string builder with the given replacement .
2341	Executes a get request .
2342	Refreshes the table schema .
2343	Returns true if the transaction has expired .
2344	Returns the current file s offset .
2345	Fast forward to the next line .
2346	Creates an envelope for a detached stage .
2347	Converts a string to an appropriate number .
2348	Parse a part .
2349	Parse a set of values .
2350	Lookup the primary keys .
2351	Create custom mappings .
2352	Gets the SQL type name .
2353	Returns the table name .
2354	Method setPrimaryKeys .
2355	Handles a SQLException .
2356	Executes a batch .
2357	Prepare a batch context .
2358	Finishes a batch context .
2359	Flattens the entire record .
2360	Creates a detachable stage runtime .
2361	Throws an OnRecordErrorException if the field does not exist .
2362	Gets the columns to parameters .
2363	Gets the condition for a partition column .
2364	Validate stored and specified offset .
2365	Returns a list of requested definitions .
2366	Gets the non - empty arguments .
2367	Returns the specified operation for the specified KuduTable .
2368	Convert bytes to display format .
2369	Scan a LiveFile .
2370	Returns the number of files waiting to be processed .
2371	Checks if a property is whitelisted .
2372	Returns true if the set of versions matches the expected set of versions .
2373	Starts the Spark cluster .
2374	Propagates the runtime configuration .
2375	Validate the report description .
2376	Create a JdbcRecordWriter .
2377	Create a JdbcRecordWriter .
2378	Upgrades a list of configs to V2 .
2379	Extracts the named groups from the raw data .
2380	Writes a consumer commit message .
2381	Creates a new EmbeddedSDC .
2382	Sets the fields in a record .
2383	Gets the remote pipelines with changes .
2384	Creates a new RemoteDataCollectorResult for the given AckEvent .
2385	Creates a new gauge .
2386	Gets the columns to parameters map .
2387	Generate the header attributes for the given file .
2388	Validates a record .
2389	Handles old temp parquet files .
2390	Gets the Avro InputStream for the given record .
2391	Returns a file reader for the given input stream .
2392	Writes a parquet to a file .
2393	Checks if input encryption is enabled .
2394	Checks if input encryption is enabled .
2395	Check input decrypt .
2396	Checks if the input decrypted .
2397	Prepares a field to be encrypted .
2398	Sets the new pattern for this Matcher .
2399	Appends a replacement to the matcher .
2400	Returns a map of named groups .
2401	Replaces all properties with the given replacement string .
2402	Ensures that the avro schema exists .
2403	Gets the global variable .
2404	Creates the start event record .
2405	Creates a stop event record .
2406	Method fixOffset .
2407	Extracts a field as a runtime object .
2408	Executes a query to add a partition to a qualified table .
2409	Executes a SQL query to set the properties of a qualified table .
2410	Executes a query to describe a database .
2411	Executes the given query .
2412	Executes a query .
2413	Executes a batch of metrics .
2414	Throws a consumer for each pipe .
2415	Gets the offset commit trigger .
2416	On record error stop pipeline .
2417	Accepts a consumer .
2418	Gets the insert id for a record .
2419	Gets the value from a field .
2420	Sets a fragment in a record .
2421	Sets a document in a record .
2422	Set N1QLRow in record .
2423	Handles the whole file data format .
2424	Returns true if incomplete transactions contain the given gtid .
2425	Creates a new instance of the given class loader with the given exception supplier .
2426	Sets the state creator .
2427	Logout from Kerberos .
2428	Sets the exceptions .
2429	Replace the variables in the given path .
2430	Ensures that the classloader is allowed access to data collector internal directories .
2431	Initializes BootstrapEmrBatch . main .
2432	Returns the directory path for the given date and record .
2433	Renames the given tempPath to its final name .
2434	Returns true if the given record should be rolled .
2435	Returns true if the given string matches the given pattern .
2436	Returns the offsets of this file .
2437	Returns the remaining wait time between the given startTime and maxWaitTimeMillis .
2438	Gets the offsets lag .
2439	Creates and initializes a StageLibraryDelegate .
2440	Create a stage library delegate .
2441	Creates a new instance of the StageLibraryDelegate .
2442	Gets the value of a metric .
2443	Finds the end of the header .
2444	Returns the body size .
2445	Saves a temporary file to the temp file manager .
2446	Create an SSLServerSocketFactory .
2447	Get the mime type for a file .
2448	Handle a session .
2449	Stops the NanoHTTPD .
2450	Adds the mappings to the router .
2451	Sends a response to the server .
2452	Sends the body data to the output stream .
2453	Creates a new fixed - length response .
2454	Use gzip when accepted .
2455	Adds a cookie to the queue .
2456	Unloads a queue of cookies .
2457	Decodes a base64 cookie value .
2458	Encodes a cookie in Base64 .
2459	Sets the table name .
2460	Returns the name of the principal .
2461	Inserts a session repository filter .
2462	Resolves the principal name for the given session .
2463	Returns a RedisSession with the given id .
2464	Returns the JNDI name for the given model node .
2465	Gets the canonical parameter types for the given view method .
2466	Registers a new InterposedSynchronization .
2467	This method is called before the synchronization is completed .
2468	Returns the current transaction .
2469	Deploys a module .
2470	Does cached persistence unit name identify cache region name .
2471	Gets the server config dependencies .
2472	Decreases the read lock count .
2473	Increments the number of readlocks .
2474	Adds a service to the deployment archive .
2475	Handles the calculation of the next expiration .
2476	Adds a search dependency to the deployment unit .
2477	Make top level bdas visible from static modules .
2478	Creates the JSEArchiveMetaData for the POJO webservice deployment .
2479	Set config name and file .
2480	Gets the security metadata .
2481	Gets the servlet url patterns mappings .
2482	Gets servlet class mappings .
2483	Resolves the EJBViewDescription .
2484	Returns a set of available connectors for the given operation .
2485	Parses the core environment element .
2486	Parses the process id environment element .
2487	Returns the path address for the given operation .
2488	Sets the path address for the given operation .
2489	Returns the value of the attribute of the given operation .
2490	Is include defaults boolean .
2491	Creates a composite operation .
2492	Creates a new add operation .
2493	Creates an add operation .
2494	Creates a READ_ATTRIBUTE_OPERATION node .
2495	Creates a write attribute operation .
2496	Create an operation to undefine an attribute .
2497	Returns the value associated with this context .
2498	Adds a URL context factory .
2499	Remove a URL context factory .
2500	Loads validation providers from the given class loader .
2501	Modify the context root .
2502	Configures the endpoints .
2503	Modify the context root .
2504	Returns the transport class name for the deployment .
2505	Sets the run as identity .
2506	Pop a run as identity .
2507	Process the deployment management .
2508	Injects the specified property into the specified object .
2509	Checks if the argument matches the class type and property type .
2510	Finds the method with the given name and property type .
2511	Finds the field with the given name and type .
2512	Initializes the options .
2513	Derives the useful info for the given HTTP request .
2514	Creates a standalone JdrReport .
2515	Returns a JdrReport object .
2516	Registers a resource adapter deployment .
2517	Unregisters a resource adapter deployment .
2518	Registers the transformations for the given subsystem .
2519	Writes the parameters to the output stream .
2520	Read an exception from an InputStream .
2521	Gets the lock owner .
2522	Releases a stateful session component lock .
2523	Adds a log to the SOS logs file .
2524	Adds the CDI flag to the deployment unit .
2525	Gets the component view .
2526	Invokes the given Invocation on the given endpoint .
2527	Gets the component view method .
2528	Checks if the given method matches the given view method .
2529	Creates the statistics resource for the given management adaptor .
2530	Get the EJB SecurityMetaData for the given endpoint .
2531	Returns the security domain .
2532	Ensures that the old and new security domains are the same .
2533	Sets the IDL name .
2534	Returns the absolute name of this entry .
2535	Creates a new JndiName from the given name .
2536	Deploys IronJacamar . xml .
2537	Handles a request .
2538	Returns true if the transaction is active .
2539	Gets the TransactionSynchronizationRegistry .
2540	Gets the ConnectionFactory .
2541	Returns the last component of a name .
2542	Returns true if the given name is empty .
2543	Creates a NameNotFoundException with the specified name and context name .
2544	Creates a naming exception with the specified message and cause .
2545	Creates a naming exception with the specified message and cause .
2546	Creates a CannotProceedException .
2547	Creates a naming enumeration from the given collection .
2548	Rebinds a value to a Context .
2549	Gets the active MQ component control .
2550	Parse connection attributes .
2551	Creates a ComponentInstance .
2552	Gets the resteasy Spring VirtualFile .
2553	Resolves the runtime name .
2554	Create a PersistentResourceXMLDescription . PersistentResourceXMLBuilder .
2555	Returns the PrimitiveAnalysis for the given class .
2556	Shuts down the updater .
2557	Returns a list of URL patterns for a given URL pattern .
2558	Get the servlets from a JBossWebMetaData
2559	Returns the servlet mappings for the given JBossWebMetaData .
2560	Returns the security constraints for the given JBossWebMetaData .
2561	Get login config from JBossWebMetaData .
2562	Gets the context parameters from the given JBossWebMetaData .
2563	Gets the WebResourceCollectionsMetaData for the given security constraint .
2564	Gets the servlet init params .
2565	Creates a new SecurityConstraintMetaData .
2566	Creates a new WebResourceCollectionMetaData .
2567	Creates a new servlet .
2568	Creates a new servlet mapping .
2569	Creates a new auth constraint .
2570	Create a new UserDataConstraintMetaData .
2571	Creates a new ParamValueMetaData .
2572	Creates a new ParamValueMetaData .
2573	Registers SessionBean interceptors .
2574	Process the injection targets .
2575	Stops the weld container .
2576	Returns the JNDI name for the given model node .
2577	Resolve an attribute definition .
2578	Returns the type of a URL pattern .
2579	Returns true if the given resource adapter targets a pooled connection factory .
2580	Returns true if the given resource adapter targets an external pooled connection factory .
2581	Returns the active MQ server name .
2582	Returns the default persistence unit name .
2583	Starts the activity .
2584	Stops this activity .
2585	Suspends this transaction .
2586	Resumes the deployment .
2587	Called when the invocation is complete .
2588	Called when a new transaction is created .
2589	Starts the service .
2590	Stops the service .
2591	Gets the capability service name .
2592	Creates a list of ResourceRoots .
2593	Returns a set of ClassLoaders for all deployment modules .
2594	Checks if the persistence unit needs a class file transformer .
2595	Allow two phase bootstrap .
2596	Allow default data source use boolean .
2597	skipMixedSynchronizationTypeCheck Method .
2598	Returns the ORB for the given server port and environment .
2599	Init applet ORB .
2600	Initialize the method handlers .
2601	Sets the active naming store .
2602	Validate default values .
2603	Checks if the given type is a parameterized type .
2604	Lookup a DefaultValue annotation .
2605	Validate base type method .
2606	Returns the deferred entity managers .
2607	Converts a status to a string .
2608	Adds the cache dependencies to the event listeners .
2609	Extracts the dialogs from the database .
2610	Attempts to determine if the database is a Dialect .
2611	Identifies a dialect .
2612	Check the database .
2613	Converts a string to a scheduler date .
2614	Sets the node name .
2615	Marks a deployment unit .
2616	Reads the params from an input stream .
2617	Writes a retval to the output stream .
2618	Writes an exception to the output stream .
2619	Looks up a class .
2620	Starts the SFSB creation process .
2621	Ends the SFSB creation .
2622	Returns the current SFSBCallStackInvocation .
2623	Push a call to all of the given entity managers .
2624	Pop a call .
2625	Gets the current call .
2626	Deploys the module .
2627	Process XML managed beans .
2628	Processes the configuration files for the phase listeners .
2629	Returns the type IDL name for the given class .
2630	Insert any primitive .
2631	Converts a java to idl name .
2632	Returns true if the given string is a reserved IDL keyword .
2633	Returns the signature of a class .
2634	Returns the signature of the given method .
2635	Returns the primitive type IDL name for the given type .
2636	Returns the batch permission for the given name .
2637	Gets or creates a transaction scoped entity manager .
2638	Puts a value into the hash table .
2639	Converts a SecurityRole into a ModelNode .
2640	Returns the most recent entity version .
2641	Get a map of timers for a given timed object .
2642	Gets the directory for the given timed object id .
2643	Adds a listener to the target scope .
2644	Remove a naming listener .
2645	Fires an event to all registered listeners .
2646	Closes the value .
2647	Adds a private credential to the subject .
2648	Gets the object instance .
2649	Adds a transaction interceptor for the given view .
2650	Substitutes a String from a StringBuilder .
2651	Creates the in - VM transport configuration .
2652	Add ear prefix if relative name .
2653	Returns the root deployment unit for the given deployment unit .
2654	Returns the service name for this component .
2655	Creates a new view configuration .
2656	Creates an injection source .
2657	Returns the view interceptors for the given method .
2658	Adds an interceptor to the view .
2659	Adds a view interceptor .
2660	Returns a list of client interceptors for the given method .
2661	Adds a client interceptor to this proxy .
2662	Adds a client interceptor .
2663	Put private data .
2664	Throws an unexpected element .
2665	Gets the JAXWS endpoints for the given deployment unit .
2666	Returns a list of all JAXWS POJOs attached to the given deployment unit .
2667	Returns the name of the endpoint .
2668	Gets the endpoint class name .
2669	Returns the servlet metadata for the given servlet name .
2670	Returns the required attachment for the deployment unit .
2671	Returns the optional attachment for the given key .
2672	Returns the JBossWebMetaData for the given deployment unit .
2673	Gets the JBossPortComponentMetaData .
2674	Get webservice metadata EJBEndpoint .
2675	Gets the context root .
2676	Returns the class for the given name .
2677	Returns the resource with the given name .
2678	Returns a collection of all resources with the given name .
2679	Returns a list of resources for the given path .
2680	Pops the container managed entity manager .
2681	Returns the entity manager with the given scoped name .
2682	Registers a clean up listener .
2683	Declarative Services method for deployment .
2684	Method updateServerConfig .
2685	Returns true if all fields of a class are public .
2686	Creates a new HTTP endpoint .
2687	Creates a new ArchiveDeployment .
2688	Checks if the given deployment unit is a Jaxrs deployment .
2689	Sets the next timeout .
2690	Sets the timer state with the executing Thread .
2691	Merge a list of ResteasyDeploymentData objects .
2692	Deploys the JBoss module .
2693	Adds the remote transaction dependencies .
2694	Gets the set of all container interceptors .
2695	Is method level boolean .
2696	Checks if only one of the elements is required .
2697	Returns the class with the given name from the configuration visitor .
2698	Gets the component type .
2699	Gets the elytron key store resource definition .
2700	Creates a ResourceDefinition for Elytron KeyManagers .
2701	Gets the elytron trust managers resource definition .
2702	Parse a name from a string .
2703	InsStringToStringifiedComps Method .
2704	Parse a name component .
2705	Shutdown this object .
2706	Converts a CORBA object to a reference .
2707	Attempts to authenticate with the given username and password .
2708	Checks if the given class is type matched .
2709	Lookup an object by its name .
2710	Unbinds a binding .
2711	Instantiate a bean .
2712	Configures the bean .
2713	Dispatch a lifecycle joinpoint .
2714	Returns the current namespace context selector .
2715	Converts a service name to a bean name .
2716	Converts a class to a service name .
2717	Returns the class with the given name .
2718	Process slsb annotations .
2719	Post parse steps .
2720	Validates the given descriptor .
2721	Create a new deployment unit .
2722	Create web . xml descriptor .
2723	Returns the auth method associated with the deployment .
2724	Deploys the service .
2725	Handles stateless session bean .
2726	Makes a Stub class from the given class .
2727	Returns an anonymous object id .
2728	Returns a list of persistence providers for this classloader .
2729	Clears all cached deployment specific providers .
2730	Adds the deployment specific persistence provider .
2731	Find the ModuleClassLoader that is the parent of the ModuleClassLoader
2732	Deploys the JBoss module specification .
2733	Adds a pu service to the deployment context .
2734	Sets the annotation indexes for the deployment unit .
2735	Gets the persistence provider adapter .
2736	Save PerDeployment SharedPersistenceProviderAdaptor .
2737	Lookup a PersistenceProvider .
2738	Returns a map of annotations for the given set of URIs .
2739	Creates the EJBArchiveMetaData .
2740	Build enterprise bean metadata .
2741	Refresh participant .
2742	Returns the container analysis for the given class .
2743	Looks up the container analysis for the given class .
2744	Creates a container analysis for the given class .
2745	Returns the IDL module name .
2746	Convert an integer to a hexadecimal string .
2747	Convert a long to a hexadecimal string .
2748	Returns true if the method is an accessor method .
2749	Checks if the given method is a mutator method .
2750	Returns true if the method has non - app exceptions .
2751	Read attribute name .
2752	Returns the attribute write name .
2753	Fix up overloaded operation names .
2754	Fix up the case names .
2755	Escapes an IR name .
2756	Parses the XTS environment element .
2757	Parses the default context propagation element .
2758	Processes XML attributes .
2759	Loads a module from a module name .
2760	Creates a new AddStepHandler .
2761	Deploys the module .
2762	Writes an attribute definition to the given writer .
2763	Construct a MethodIntf from an InterceptorContext .
2764	Creates a remote session .
2765	Infers the destination name from the given address .
2766	Registers a set of endpoint handlers .
2767	Gets job xml names .
2768	Initializes the job parser .
2769	Returns the URI of the request .
2770	Creates a new ResolveResult from a URL .
2771	Looks up an object by its name .
2772	Binds a java . lang . Object to the given name .
2773	Unbinds a name component .
2774	Returns a list of bindings for a given name .
2775	Call this method to destroy the naming context .
2776	Destroys the subcontext for the given name .
2777	Bind a new naming context .
2778	Creates a subcontext with the given name .
2779	Lookup a link with the given name .
2780	Adds a property to the environment .
2781	Removes a property from the environment .
2782	Adds the resource transformations to the model .
2783	Parse a Credential object from an XML stream .
2784	Removes a security domain .
2785	Looks up the JNDI for the given context name .
2786	Creates a new ModularReference for the given type and factory class .
2787	Creates a new ModularReference .
2788	Creates a new ModularReference .
2789	Returns the local IDL type for the given type code and repository .
2790	Waits for a ServiceController to be available .
2791	Computes the masked password .
2792	Initializes the security vault .
2793	Start a new vault session .
2794	Prints a vault attribute created display message .
2795	Displays the vault configuration .
2796	Generates the vault configuration .
2797	Checks if the given value is not null .
2798	Gets deployment service name .
2799	Inserts a value .
2800	Returns true if the given permission implies the given permission .
2801	Returns the action string .
2802	Returns the log name .
2803	Send a state change notification .
2804	Returns the state to be bound to .
2805	Returns the value of the given type .
2806	Returns the context service name .
2807	Returns a set of all interceptors .
2808	Adds a method interceptor .
2809	Adds a service dependency .
2810	Gets the component interceptors for the given method .
2811	Returns all around timeout interceptors for the given method .
2812	Adds a timeout interceptor to the list of interceptors .
2813	Adds a new round construct interceptor .
2814	Adds a post - construct interceptor .
2815	Adds a pre - destroy interceptor .
2816	Adds a pre - passivate interceptor .
2817	Adds a post - activate interceptor to the list of interceptors .
2818	Sets the ComponentCreateServiceFactory .
2819	Removes all JNDIAliases from the given list .
2820	Adds the remote transport provider to the builder .
2821	Returns the service name of a component .
2822	Context service name of a module .
2823	Binds the given env entry to the given app module and comp .
2824	Returns the BindInfo for the given JNDI .
2825	Returns the cache for the given key and value .
2826	Gets the value members .
2827	Gets the value members for type code .
2828	Creates the subsystem root .
2829	Parse the config .
2830	Start the naming service .
2831	Adds a WeldIntegrator to the target .
2832	Returns the service name for a job - operator .
2833	Adds a component to the list of components .
2834	Adds a new message destination .
2835	Returns the components for the given view type and deployment root .
2836	Returns the list of components for the given component name and deployment root .
2837	Returns a set of view descriptions for the given component name and view name .
2838	Resolve message destination .
2839	Builds resource transformations 2 . 1 . 0 .
2840	Reject defined attribute with default value .
2841	Rename an attribute .
2842	Pop the identity from the state cache .
2843	Loads the module ids manually .
2844	Check version integrity .
2845	Computes the slot for the given JSF version .
2846	Returns the constant type code for the given class .
2847	Adds a type code for a class .
2848	Ensure package exists .
2849	Adds the interfaces to the container analysis .
2850	Adds the abstract base values to the container analysis .
2851	Adds a class .
2852	Adds an interface to the module definition .
2853	Adds a new value definition .
2854	Add an exception definition .
2855	Returns the class level injection type .
2856	Check if jts is enabled .
2857	Starts the service .
2858	Stops the store .
2859	Checks if the given method type is allowed .
2860	Check transaction sync .
2861	Gets all component classes .
2862	Returns a map of timers associated with the transaction .
2863	Returns the extra parameters .
2864	Gets the parameters .
2865	Converts a type to a class .
2866	Converts a value from a class to an object .
2867	Returns the types of the given values .
2868	Checks if the given type names are valid .
2869	Returns the next object from the binding list .
2870	Returns true if there are more bindings .
2871	Maps a CosNaming to a Binding
2872	Observe resources .
2873	Closes all health checks .
2874	Returns the reference for the given locator .
2875	Creates a handle object for a given locator .
2876	Converts a ModelNode to an Enum .
2877	Skips the specified amount of data from the input stream .
2878	Checks that two elements are not in the same set .
2879	Adds a component to the list of components .
2880	Adds a set of ClassLoaders to the deployment
2881	Unbinds a name .
2882	Looks up an object by its name .
2883	Returns a list of classes for a given name .
2884	Returns a list of bindings for a given name .
2885	Adds a factory to this context .
2886	Saves a SetupContextHandle .
2887	Creates the IO subsystem .
2888	Create the welcome - content handler .
2889	Acquires a bean from the pool .
2890	Calculates the operation analysis map .
2891	Collect metrics for a resource .
2892	Prepares the deployment unit .
2893	Deploys the service to the specified deployment unit .
2894	Publishes the deployment .
2895	Stops the web application .
2896	Starts the weld container .
2897	Registers an endpoint configuration .
2898	Retry the given timer .
2899	Post - timeout processing .
2900	Returns the declared methods of the given class .
2901	Returns the declared fields of the given class .
2902	Returns a constructor for the given class and parameters .
2903	Gets a method by name .
2904	Adds the MESSAGING_ACTIVEMQ extension .
2905	Checks if the given parameter is allowed for the given resource type .
2906	Migrate generic transport .
2907	Cancels a set of flags .
2908	Run if not cancelled .
2909	Sets the property type .
2910	Returns true if the function can be executed without the index .
2911	Estimates the number of indexed functions for a given class .
2912	Finds all classes in the given directory .
2913	Returns a list of classes that implement the given interface .
2914	Gets the generic multivalue type .
2915	Evaluate a record .
2916	Derives the field type from a field name .
2917	Update a record .
2918	Returns the record associated with the given ORID .
2919	Gets the minimal set of nodes for sharded query .
2920	Moves the flattened equality expressions left .
2921	Add order by projections .
2922	Extracts the sub - queries from a query plan .
2923	Checks if is from clusters .
2924	Handles class with index for sort only .
2925	Returns true if the given class is a diamond hierarchy .
2926	Gets the order direction .
2927	Returns true if the given key condition requires multiple index lookups .
2928	Find the best index for the given block and indexes .
2929	Builds the index search descriptor for fulltext .
2930	Returns the common factor for the given list of index search descriptors .
2931	Creates a new ODocumentFieldHandlingStrategy .
2932	Allows the user to perform an operation on the specified resource .
2933	Checks if a rule is defined .
2934	Returns a string representation of the server status .
2935	Initializes the system database .
2936	Loads the local databases .
2937	Removes a member from the cluster .
2938	Elects a new lock manager .
2939	Assigns the lock manager from the cluster .
2940	Commits the micro - transaction .
2941	Rolls back the micro - transaction .
2942	Update identity after record commit .
2943	Updates the cache after a rollback .
2944	Prepare for file creation or replacement .
2945	Moves a file from source to target atomically .
2946	Returns a list of disjoint patterns .
2947	Execute only locally .
2948	Appends a character array to the builder .
2949	Returns true if the socket is connected .
2950	Merge a short from two ByteBuffers .
2951	Splits a short into two buffers .
2952	Executes the command .
2953	Puts a single value into the index .
2954	Removes a value from the list .
2955	Runs the query .
2956	Executes the command .
2957	Creates a new channel .
2958	Checks to see if there are any regions that need to be read .
2959	Replaces the existing content with a new content file .
2960	Executes a command .
2961	Ends the request .
2962	Adds the host to the client configuration .
2963	Starts an ASYNCHRONY request .
2964	Gets the database .
2965	Returns the OClientConnection for the given channel ID and protocol .
2966	Kills a binary connection .
2967	Interrupt a channel .
2968	Disconnects a connection from the server .
2969	Pushes the distrib cfg2 clients .
2970	Swaps the given value at the given index with the given new value .
2971	Closes the database .
2972	Synchronize the schema .
2973	Method updateMetadata .
2974	Returns the last record in the iterator .
2975	Reads the next character from the stream .
2976	Executes the command .
2977	On async replication error .
2978	Registers a new storage compression .
2979	Gets the limit of open files for disk cache .
2980	Returns true if the expression allows indexed function execution on the target .
2981	Moves from a position to a new position .
2982	Fills the buffer with the specified number of bytes .
2983	Executes the ScriptLineStep until a return is found .
2984	Executes all the steps in the script line .
2985	Evaluate a record .
2986	Executes the command .
2987	Loads the database configuration .
2988	Parse an OCommandRequest .
2989	Executes the request .
2990	Updates the schedule starting at the given startNode .
2991	Adds an index definition to the composite key .
2992	Creates a new OProjectionItem for the given AggregateProjectionSplit .
2993	Determines the type of the given command .
2994	Returns the collate for the given document .
2995	Gets the string value .
2996	Advances the probe .
2997	Executes the command .
2998	Builds an ODocument from a file .
2999	Checks if a password is valid .
3000	Creates a SHA - 256 hash of the input string .
3001	Returns true if the given algorithm is supported .
3002	Creates a new index .
3003	Returns an iterable of all vertices in the graph .
3004	Returns an iterable that iterates over all edges in the graph .
3005	Returns the partition key for this task .
3006	Gets the distributed timeout .
3007	Returns a list of features .
3008	Checks if changes have been filtered up to the given pageIndex .
3009	Parse a timeout string .
3010	Parse a lock .
3011	Creates a new cluster .
3012	Frees a cluster .
3013	Starts the OProfiler .
3014	Shuts down the profiler .
3015	Creates a singleton OScriptResultSet .
3016	Grant an operation to a resource .
3017	Revoke access to a resource .
3018	Returns true if the iRecord is a valid record .
3019	Bind parameters .
3020	Resets the mask .
3021	Returns the index of the specified item in the table .
3022	Spread a random 16 - bit integer .
3023	Creates a schema index .
3024	Drops all indexes associated with this property .
3025	Returns the index associated with this object .
3026	Returns the linked class .
3027	Returns a new ODocument containing the contents of this document .
3028	Removes a listener from the list of listeners .
3029	Registers a database .
3030	Timeout a request .
3031	Creates a copy of this document .
3032	Tries to merge the given ORidBag with this ORidBag .
3033	Replaces a collection pointer with a SBTree .
3034	Transforms a result into a Object .
3035	Executes the command .
3036	Closes the pooled database .
3037	On storage unregistered .
3038	Returns a set of function names .
3039	Returns a set of the names of all the OCollateFactories .
3040	Returns a set of command names .
3041	Gets the field size and type from the current position .
3042	Writes a status message to the response .
3043	Writes the headers to the response .
3044	Writes a set of records to the response .
3045	Write a record to the response .
3046	Sends a response to the server with the specified code and reason .
3047	Sends a stream of content to the server .
3048	Opens a database .
3049	Releases the database .
3050	Listen for changes in the collection .
3051	Completes the component operation .
3052	Pushes the component counters to the snapshot .
3053	Push a WritCacheCountersHolder to the snapshot .
3054	Pushes a StorageCountersHolder to the snapshot .
3055	Pushes a WALCountersHolder to the snapshot .
3056	Pushes the counters for a component .
3057	Stops the write cache flush timer .
3058	Stops the fuzzy checkpoint timer .
3059	Stops the full checkpoint timer .
3060	Stops the commit timer .
3061	Stops the WAL record timer .
3062	Stops the WAL flush timer .
3063	Parse a SQL statement .
3064	Initializes the receiveMessages thread .
3065	Initializes the checkDisconnect task .
3066	Removes a record from the graph .
3067	Sets the value of a property .
3068	Removes a property from the graph .
3069	Checks for a class in the schema .
3070	Wraps a cursor in an OIndexChangesWrapper .
3071	Defines the vertex attribute strategy .
3072	Defines the edge attribute strategy .
3073	Gets the new record entries by class .
3074	Gets the new record entries by cluster ids .
3075	Adds a new index entry .
3076	Merge a set of ORecords .
3077	Returns true if the iRecord is an update edge .
3078	Returns true if the given function can be executed without the index .
3079	Prepares the keys for the given index .
3080	Writes a page to the cache .
3081	Reads a page from the cache .
3082	Truncates a page .
3083	Opens the WAL file .
3084	Returns true if replication is active .
3085	Gets the new node strategy .
3086	Checks if the execution mode is synchronous .
3087	Checks if a cluster is read - your - writes .
3088	Gets the server cluster map .
3089	Returns a set of all configured servers .
3090	Checks if a server contains all of the given clusters .
3091	Checks if a server contains a cluster .
3092	Returns the list of master servers .
3093	Returns a set of all configured servers .
3094	Returns the clusters on a server .
3095	Returns the clusters owned by the given node name .
3096	Returns the owner of the given cluster .
3097	Returns the configured cluster owner .
3098	Returns the list of configured servers for the cluster .
3099	Returns the list of registered servers .
3100	Returns a set of data centers .
3101	Gets the data center write quorum .
3102	Returns true if the cluster is sharded .
3103	Returns the list of servers in a data center .
3104	Returns the data center of the specified server .
3105	Gets the global read quorum .
3106	Gets the write quorum .
3107	Gets the cluster configuration .
3108	Gets the data center configuration .
3109	Clears the initialization stack .
3110	Returns the index with the specified name and class .
3111	Drops an index .
3112	Adds a vertex .
3113	Adds a new edge to the graph .
3114	Returns the vertex with the given id .
3115	Gets the vertices of a class .
3116	Gets the edges of a class .
3117	Returns the edge with the given id .
3118	Reuse the OrientBaseGraph .
3119	Shuts down the database .
3120	Returns the base type of this vertices .
3121	Returns the OrientVertexType for the given type name .
3122	Creates a new vertex type .
3123	Drops a vertex type .
3124	Gets the edge type .
3125	Creates a new edge type .
3126	Returns the OrientElement for the given id .
3127	Drops a key index .
3128	Creates an index for a key .
3129	Remove a background exception listener .
3130	Fire background data flush exception event .
3131	Stop monitoring .
3132	Registers an MBean with the OrientDB server .
3133	Unregisters a profiler MBean .
3134	Fetches the write cache counters .
3135	Fetch system counters .
3136	Fetch the component counters .
3137	Compress a JSON string to a byte array .
3138	Returns the value of the specified property .
3139	Detaches the object from this object .
3140	Returns the version of the given object .
3141	Creates a command wrapper for the given command .
3142	Set the dirty state of the object .
3143	Unsets the dirty state of the given object .
3144	Returns the index types .
3145	Returns the index engines .
3146	Returns a list of missing nodes .
3147	Returns the list of conflict response groups .
3148	Returns the best response group .
3149	Computes the quorum response .
3150	Returns a list of all received responses .
3151	Returns the execution plan for the given statement .
3152	Returns true if target allows indexed function execution .
3153	Returns the library for a given database .
3154	Release a database engine .
3155	Returns the next position for the given atomic operation .
3156	Updates the size of the tree .
3157	Returns the value at the given index .
3158	Can be used by order by after filter .
3159	Returns the index of outside strings .
3160	Jumps between two whitespaces in a text .
3161	Jumps a character sequence from the current position to the maximum position .
3162	Sets the fetch plan .
3163	Enqueue a repair record .
3164	Cancel a repair record .
3165	Enqueue a repair cluster .
3166	Returns the dependencies for the given pattern .
3167	Creates a new instance of the given class .
3168	Register entity classes .
3169	Registers the entity classes for the given class .
3170	Sets the entity class handler .
3171	Acquires a database .
3172	Returns the number of available connections for the given user .
3173	Acquires a database .
3174	Executes the OrientDB command .
3175	Lookup a provider with an Orient class loader .
3176	Checks the cache memory configuration .
3177	Converts a JSON object to a Vertex object .
3178	Creates an edge from a JSON object .
3179	Converts an Element to a JSONObject .
3180	Creates an object node from an element .
3181	Executes an OETL import .
3182	Returns the current ODocument .
3183	Gets the active data center map .
3184	Separates a cipher algorithm .
3185	Creates an OSymmetricKey from a key config .
3186	Creates an OSymmetricKey from a file .
3187	Creates an OSymmetricKey from a stream .
3188	Encrypts the given bytes using the given transform .
3189	Saves the metric key to the given output stream .
3190	Save a key to a keystore .
3191	Sets the child context .
3192	Adds an object to the unique result .
3193	Get value as object or map .
3194	Authenticate the user .
3195	Returns the value of a map entry .
3196	Gets the record .
3197	Read the current record .
3198	Returns the Orient Graph for the transaction .
3199	Returns the no - tx graph .
3200	Setup the OrientGraphFactory .
3201	Returns the property with the given name .
3202	Stops the transaction .
3203	Parse a JJTPARSE statement .
3204	Returns the next token .
3205	Returns the token at the given index .
3206	Generate parse exception .
3207	Returns an iterable of all vertices in the specified direction .
3208	Removes this vertex from the graph .
3209	Adds a new edge at the given vertex .
3210	Adds an edge to an OrientEdge .
3211	Gets the connection class .
3212	Gets the connection for the given field name and class names .
3213	Processes a set of broken RIDs .
3214	Gets the console methods .
3215	Executes a task on the local node .
3216	Returns the number of nodes with the given status .
3217	Backups the contents of an OutputStream to a list of Strings .
3218	Waits for the next retry .
3219	Returns the argument at the given position .
3220	Returns the number of parameters in the request .
3221	Connect to a remote node .
3222	Returns a list of all databases in the network .
3223	Retrieves information about a server .
3224	Checks if the remote storage exists .
3225	Deletes a remote database .
3226	Frozen the remote storage .
3227	Releases a remote database .
3228	Returns the status of the cluster .
3229	Executes the command .
3230	Gets the OrientGraph .
3231	Parse a retry request .
3232	Save a record to the database .
3233	Delete a record .
3234	Gets the authentication header .
3235	Authenticate the user with the given username and password .
3236	Checks if the user is authorized to access the specified resource .
3237	Shuts down the server and waits for it to finish .
3238	Adjusts the column at the beginning of a line .
3239	Method setBucketPointer .
3240	Gets the bucket pointer for the given offset .
3241	Ends an atomic operation .
3242	Acquires an exclusive lock until the given operation is complete .
3243	Changes the maximum amount of memory used by disk cache .
3244	Listens for connections on the given host name port range and protocol class .
3245	Read parameters .
3246	Shuts down the LogManager .
3247	Adds a new item to the list .
3248	Removes a key from the log .
3249	Acquires a key .
3250	Returns the value associated with the specified key .
3251	Clears the cache .
3252	Closes the specified key .
3253	Empty the read buffers .
3254	Executes a task after it has been written .
3255	Drains the read buffers after the given entry has been read .
3256	Puts an entry into the read buffer at the given index .
3257	Returns the power of two that is closest to the given value .
3258	Called when a push request is received .
3259	Converts a key to a number .
3260	Converts all enums .
3261	Returns the OBinarySerializer for the given type .
3262	Initializes the shutdown queue .
3263	Returns the engine with the given name .
3264	Executes the given command .
3265	Execute an OSQLAsynchQuery .
3266	Adds a reader state to the list .
3267	Authenticate a user .
3268	Creates the OUser .
3269	Tries to acquire a read lock .
3270	Returns the vertex in the given direction .
3271	Returns the id of the current thread .
3272	Sets the value of a property .
3273	Removes a property from the current graph .
3274	Clears the cache .
3275	Deletes a file .
3276	Ends the importer .
3277	Creates a new vertex .
3278	Parse a strategy word .
3279	Gets the positions from embedded collection .
3280	Executes the command .
3281	Checks if the given field value is connected to a cluster .
3282	Creates a new ORecordAbstract and fills it .
3283	Sets the version of an ORecord .
3284	Returns the type of the given ORecord .
3285	Initializes the database instance .
3286	Prints the stack trace of an exception .
3287	Executes an index query .
3288	Convert a link to a record .
3289	Registers a command with the server .
3290	Creates a server user configuration .
3291	Analyze a condition .
3292	Creates the indexed property .
3293	Attaches the given object to this class .
3294	Gets the index class .
3295	Returns the next value in the cache with the given value .
3296	Truncates the database .
3297	Add a base class .
3298	Adds the polymorphic cluster ids to the index of the given class .
3299	Link an object to a stream .
3300	Release a pointer from the pool .
3301	Checks to see if there are any memory leaks .
3302	Clears the pool .
3303	Converts a byte array to an integer .
3304	Called when a database is opened .
3305	Installs clusters of a given class .
3306	Dumps the status of the cluster s servers .
3307	Returns the index of the object in the array .
3308	Returns the index of the specified object in the specified array .
3309	Returns a set of the clusters involved in this query .
3310	Handles a result .
3311	Returns the temporary RID counter .
3312	Reports a tip .
3313	Parse a fetch plan .
3314	Returns true if the given string does not exist in the cache .
3315	Returns true if the index cursor is optimized .
3316	Returns the status of this ODocument .
3317	Executes the command .
3318	Handles a JVM error .
3319	Performs a validated put of an index value .
3320	Rolls back a micro - transaction .
3321	Executes the given command .
3322	Registers a cluster in the database .
3323	Sets a property .
3324	Executes the command .
3325	Execute the SYNC DATABASE command .
3326	Deletes a record from the database .
3327	Callback hooks for a given identifier .
3328	Delete a record from the database .
3329	Counts the number of views in the database .
3330	Counts the number of classes in the database .
3331	Activates this document on the current thread .
3332	Registers a storage encryption algorithm .
3333	Returns the relative position of the data chunk at the given position .
3334	Parse an optional word .
3335	Parse a required word .
3336	Parse the next chars .
3337	Parse an optional keyword .
3338	Checks if the given char is a valid separator .
3339	Execute the command .
3340	Clears the configuration files .
3341	Returns the offset of the buffer as a byte array .
3342	Extract the OAuth2 access token from the given token type .
3343	Acquires an OAuth2 access token .
3344	Copies a token from this context to this context .
3345	Returns true if there are no more characters .
3346	Reads a line from the stream .
3347	Reads a line from the stream .
3348	Skips n by reading .
3349	Skips the specified number of bytes .
3350	Ensures that the last index is greater than the array length .
3351	Merges a list of integers into a list of integers .
3352	Swaps two integers .
3353	Performs a parallel quick sort .
3354	Returns the 3 - byte murmur hash of the given integer .
3355	Returns a murmur hash of 3 .
3356	Writes the contents of the given ByteBuffer to the file .
3357	Truncates the file .
3358	Positions the underlying byte stream to the given position .
3359	No fail refresh end metrics reporting .
3360	Awaits successful completion of the current tasks .
3361	Returns a Stream of matches for the given query .
3362	Finds compaction targets .
3363	Deletes all snapshots .
3364	Returns the hash code of a field .
3365	Returns true if two fields are equal .
3366	Remove referenced outside closure .
3367	On announcement completed .
3368	Called when a cycle is completed .
3369	Reads the header tags from the stream .
3370	Extracts the primary key for the given object .
3371	Clears all threadsafe bit set segments .
3372	Reads the ordinals from the stream .
3373	Returns the number of bits in the sparse bit set .
3374	Returns the field value for the given row .
3375	Copies bytes from src to dest .
3376	Copy data from srcPos to destPos .
3377	Compares a SegmentedByteArray with a SegmentedByteArray .
3378	Copies bytes from srcPos to destPos .
3379	Copies data from srcPos to destPos .
3380	Reads bytes from an input stream .
3381	Writes the given number of bytes to the given output stream .
3382	Ensures that the memory has enough space to hold the given segment .
3383	Returns the position of the field with the given name .
3384	Calculates the total number of select buckets for a given array of elements .
3385	Returns true if the given dataset has any collections in it .
3386	Generate the files in the given directory .
3387	Generate the files for the given directory .
3388	Returns true if the given keys match the given ordinal .
3389	Gets the record key .
3390	Creates a field path for the primary key .
3391	Creates a field path for a hash index .
3392	Creates a field path for a prefix index .
3393	Puts an object into the database .
3394	Initializes the object type .
3395	Checks if the prefix contains the given key .
3396	Gets the change percent .
3397	Adds a field to the filter .
3398	Returns a list of HollowSchemas whose dependencies are ordered by their type .
3399	Init with next major version defaults_v3 .
3400	Returns the bit at the given index .
3401	Finds matching records for the given field name and value .
3402	Finds matching records for the given type name field name and value .
3403	Sets the element paths .
3404	Sets the element key paths .
3405	Calculates the indices .
3406	Restore the filesystem from the last state .
3407	Runs the cycle .
3408	Removes a key from the list of excluded keys .
3409	Exclude referenced objects .
3410	Writes the HollowBlob version header .
3411	Calculates the type metrics .
3412	Write data to a ByteDataBuffer .
3413	Writes a fixed length integer .
3414	Writes a fixed length long .
3415	Returns an ordinal to the pool .
3416	Sorts the vectors in descending order .
3417	Returns the hash value for the given key and field type .
3418	Returns the hash code for the given key .
3419	Resizes the storage to a fixed length array .
3420	Returns the free ordinal for the given preference .
3421	Prepares the buffer for writing .
3422	Compares a ByteDataBuffer with a serialized representation .
3423	Grows the underlying key array .
3424	Rehashes previously added data .
3425	Returns an empty key array .
3426	Returns true if the given matchIdx and otherMatchIdx are equal .
3427	Finds the match for the given key . If no match is found null is returned .
3428	Swaps the current read state with a new read state .
3429	Returns the hash table size for a given number of elements .
3430	Runs a compactor cycle .
3431	Writes a snapshot to the output stream .
3432	Write delta .
3433	Add to set if not primitive or collection .
3434	Normalizes a field path to a parameter name .
3435	Reindex the hash index .
3436	Returns a list of matches for the given query .
3437	Trigger an async refresh with a random delay .
3438	Triggers an async refresh with a delay .
3439	Add a type diff .
3440	Calculates the diffs for this type .
3441	Writes a long to the output stream .
3442	Writes an integer value to an OutputStream .
3443	Writes a VInt to a byte array .
3444	Read a VInt from an InputStream .
3445	Reads a long from an input stream .
3446	Adds a new view to the group .
3447	Refresh the loading view size .
3448	Updates the UI for the given mode .
3449	Pulls a pull event .
3450	Over scroll by .
3451	Given rule builder .
3452	Adds facts to the given rule .
3453	Creates a new rule builder .
3454	Creates a new rule builder .
3455	Creates a new rule builder with the given fact type .
3456	Creates a new rule builder with the specified result type .
3457	Creates a given rule builder .
3458	Creates a given rule builder .
3459	Creates a ThenRuleBuilder for the given action .
3460	Returns a new instance of the given rule .
3461	Returns an annotated field .
3462	Returns the annotated method for the given annotation .
3463	Returns the annotation for the given annotation .
3464	Registers a new auditable rule .
3465	Updates the status of an auditable rule .
3466	Gets the rule status map .
3467	Creates a new rulebook with the given result type .
3468	Adds an action to the then rule .
3469	Adds an action to the then rule .
3470	Resets the value to the default value .
3471	Creates a new RuleBookRuleWithFactTypeBuilder .
3472	Gets the pool rules .
3473	Read an empty line or end table .
3474	Converts a list of services to an array .
3475	Gets the ports from the build configuration .
3476	Extracts the list of service ports from the configuration .
3477	Parse the port mapping .
3478	Add a port to the list if not null .
3479	Shifts or nulls a list of service ports .
3480	Add missing service parts .
3481	Appends an image stream to a file .
3482	Checks if the given port matches the given int or string .
3483	Converts a service name to a port - specific environment variable .
3484	Gets the service host and port .
3485	Adds a value to a map if it is not already present .
3486	Merge a map if it does not exist .
3487	Merge two maps .
3488	Put all if not null .
3489	Wait until a pod is ready .
3490	Validate ubernetes id .
3491	Converts a Object to a List .
3492	Returns the resource version for the given entity .
3493	Returns true if the pod is ready .
3494	Returns the current context .
3495	Returns true if the given KubernetesListBuilder has a route with the given name .
3496	Checks if a project has a resource .
3497	Reads and enriches a fragment from a file .
3498	Converts a map of env variables to a list of env variables .
3499	Merge two resources .
3500	Merges the override and original maps and removes empty strings .
3501	Is local customisation boolean .
3502	Reads the configuration from a file .
3503	Adds a port to the map if it is valid .
3504	Returns a JSON representation of the Docker configuration .
3505	Gets the plugin configuration .
3506	Returns the secret configuration with the given id .
3507	Downloads a file from the given URL .
3508	Compares two versions .
3509	Creates a new ProcessorConfig from the given profile and configuration .
3510	Looks up a profile in the given directory .
3511	Read a profile from classpath .
3512	Read all profiles from classpath .
3513	Find profile yaml file .
3514	Gets the meta - inf profile paths .
3515	Converts a YAML input stream to a List of Profiles .
3516	Gets the image pull policy .
3517	Is open shift mode boolean .
3518	Returns the number of replicas for the given resource configuration .
3519	Returns the first child element of the given name .
3520	Installs a template .
3521	Removes a tag by its name from the list of tags .
3522	Apply a namespace to the given entity .
3523	Applies the project metadata to the project .
3524	Apply a project request to the given entity .
3525	Returns the namespace of the given entity .
3526	Throws a RuntimeException if the application throws an error .
3527	Creates a default namespace .
3528	Adds the given KubernetesListBuilder to the given platform mode .
3529	Returns the java . main . class environment .
3530	Returns the number of seconds for a duration .
3531	Returns the number of units in a duration .
3532	Scan files for patterns .
3533	Disable OpenShift features .
3534	Checks if a service has an ingress rule .
3535	Parse a mapping from an input stream .
3536	Gets the generator context .
3537	Extracts the generator config .
3538	Gets the EnricherContext .
3539	Extracts the enricher config from the profile .
3540	Gets the default icon reference .
3541	Copies the app config files to the given app build directory .
3542	Returns a Properties object from a URL .
3543	Gets the Spring Boot version .
3544	Create a list of service objects from a list of service descriptors .
3545	Enrich a KubernetesList .
3546	Gets the raw configuration .
3547	Returns a flattened version of the given map .
3548	Extracts the watcher config .
3549	Gets the singleton template .
3550	Gets the build reference date .
3551	Returns the value associated with the given key or the default value if not found .
3552	Returns an unmodifiable map for the given config .
3553	Prepares a list of processors for a given name .
3554	Adds a builder to the builder .
3555	Returns the default from mode .
3556	Gets the image name .
3557	Returns the registry .
3558	Returns true if the factory is online .
3559	Gets the external service URL .
3560	Converts a global property to a boolean .
3561	Creates a JestClient from the given URI .
3562	Creates the internal test ES node .
3563	Scan plugins .
3564	Converts a JSON string to a American Express Rewards Balance .
3565	Gets the rewards balance .
3566	Creates a PayPalPaymentResource from a JSON string .
3567	Override this method if you want to override this method .
3568	Executes a HTTP POST request .
3569	Converts a JSON object to a VenmoConfiguration object .
3570	Collects device data from a Braintree fragment .
3571	Collect device data .
3572	Collect paypal device data .
3573	Gets the PayPal client metadata id .
3574	Checks if a signature is valid .
3575	Converts a JSON object to a string .
3576	Parse payment method nonces .
3577	Gets the browser checkout configuration .
3578	Gets the browser billing agreement configuration .
3579	Executes a HTTP GET request .
3580	Post a data to the thread pool .
3581	Sends a HTTP POST request to the server .
3582	Starts a local payment request .
3583	Approves a local payment .
3584	Adds a new listener to the list .
3585	Remove a listener .
3586	Request a Billing Agreement .
3587	On activity result .
3588	Parse a PayPalResponse .
3589	Adds a list of words to the dictionary .
3590	Removes words from a dictionary .
3591	Converts a set of tokens to a Java string list .
3592	Extracts a list of Korean phrases from the given tokens .
3593	Detokenize a list of tokens .
3594	Fetch a ByteBuffer from a buffer .
3595	Joins a list of NAL units into a single ByteBuffer .
3596	Joins nalUnits to a ByteBuffer .
3597	Returns the profile for the specified integer .
3598	Normalize and generate fixed precision .
3599	Read to next marker partial .
3600	Read to next marker new buffer .
3601	Returns the maximum available frame .
3602	Modify an MP4 file .
3603	Copy a file from src to dst .
3604	Returns the edit duration for a track .
3605	Converts a frame number to a time value .
3606	Converts a time value to a frame .
3607	Converts a media file to an edited file .
3608	Convert editedTv to media .
3609	Returns the QT player frame number for the given movie .
3610	Returns the qt player time of a movie .
3611	Converts a timecode track to a movie timecode frame .
3612	Formats a timecode .
3613	Returns a 7 - digit integer .
3614	Sets a value in a list .
3615	Checks if the input color matches the specified color space .
3616	Returns a new size based on the given size and the given comp value .
3617	Creates a new MP4Demuxer for the given input channel .
3618	Reads the contents of the cache .
3619	Creates a new wav header .
3620	Creates a multi channel wav header from the given wav headers .
3621	Parse MP4 decoder specific info .
3622	Encodes the given symbol into the given context .
3623	Read decoder pic marking .
3624	Splits a movie into edits for a track .
3625	Decodes a frame .
3626	Sets the big - endian value .
3627	Deblock MBP .
3628	Encodes a native frame .
3629	Encodes a long into a byte array .
3630	Returns the ebml length of a long .
3631	Adds a FLV tag to the file .
3632	Repositions the file .
3633	Decodes a bin .
3634	Decode binary bypass .
3635	Returns the goto marker for a given number of bytes .
3636	Returns the sample frequency for a given integer .
3637	Predicts a plane .
3638	Starts a new int array with the given dc .
3639	Coeffs an array of ints at the specified level .
3640	Finishes an array of ints .
3641	Concatenate bits from a BitsBuffer .
3642	Rewinds a 32 - bit integer .
3643	Rewinds a 64 - bit integer to a 32 - bit integer .
3644	Returns the key frame for the given video input track .
3645	Returns the pixel buffer for the first frame .
3646	Returns the gain change point ID for a given gain .
3647	Converts a byte array to an integer array .
3648	Converts an int array to a byte array .
3649	Converts an AudioFormat to a Float .
3650	Convert a float buffer to a ByteBuffer .
3651	Interleave two ByteBuffer arrays .
3652	Deinterleave bytes from inb into outs .
3653	Returns the size of the video track .
3654	Builds the box out map .
3655	Build a wipe map .
3656	Reads a batch of UL from a ByteBuffer .
3657	Reads a 32 - bit integer from a byte buffer .
3658	Calculates the MV prediction median .
3659	Encodes a picture into an encoded frame .
3660	Encodes a picture into a ByteBuffer .
3661	Encodes a Picture into a ByteBuffer .
3662	Returns a list of supported codecs .
3663	Returns a collection of all supported codecs .
3664	Adds a reference to the list .
3665	gcInternal - deletes all references .
3666	Flushes the cache .
3667	Loads a JNILibrary .
3668	Unpacks a library .
3669	Delete temporary files .
3670	Returns the default layout for the given number of channels .
3671	Gets the audio channel from the layout at the specified index .
3672	Creates a new MediaPacket .
3673	Gets the version info .
3674	Returns the default time base .
3675	Creates a new Demuxer .
3676	Plays a video .
3677	Display video at correct time .
3678	Creates a codec descriptor for the given codec ID .
3679	Prints a property to a stream .
3680	Registers a factory for the given protocol prefix .
3681	Generates a unique name for an object .
3682	Make a MediaAudioResampler .
3683	Returns the supported video frame rates .
3684	Returns the list of supported video pixel formats .
3685	Returns the number of supported audio sample rates .
3686	Returns a list of supported audio formats .
3687	Get the list of supported audio channel layouts .
3688	Set a coder flag .
3689	Sets the coder s flag 2 .
3690	Returns the decoder for this stream .
3691	Get a Demuxer for this stream .
3692	Returns a collection of all the MuxerFormats .
3693	Creates a new filter graph .
3694	Gets the type of the BitStreamFilter .
3695	Returns a ByteBuffer with the specified offset and length .
3696	Creates an AudioFrame from the given AudioFormat .
3697	Creates a new MediaPicture with the given resampler .
3698	Validate the given image .
3699	Validate the given picture .
3700	Returns the filter graph for this video .
3701	Gets the metadata for this video .
3702	Returns the CPUArch for the given javaCPU .
3703	Get CPUArch from gnuString .
3704	Returns the OSFamily with the given name .
3705	Get OSFamily from gnuString .
3706	Plays an audio file .
3707	Loads a library .
3708	setLoadedLibrary Method .
3709	Loads a candidate library .
3710	Initialize search paths .
3711	Checks if a library has already been loaded .
3712	Record a screen .
3713	Deletes the swig .
3714	Get a stream at the given position .
3715	Returns the Muxer for this swig .
3716	Creates a SetScriptTransaction .
3717	Decodes a string into a byte array .
3718	Generates a seed string .
3719	Gets information about a transaction .
3720	Returns a list of transactions for the given address .
3721	Returns a list of transactions for a given address .
3722	Returns a list of block headers for a given sequence .
3723	Gets a block with the given signature .
3724	Sends a transaction to the server .
3725	Set a script to a private key account .
3726	Compiles a script .
3727	Writes a primitive array .
3728	Flushes the buffer .
3729	Writes an object to memory .
3730	Reads the FSTClazz class .
3731	Converts an object to a byte array .
3732	Sets the MMF data .
3733	Returns the specificity of a class .
3734	Resizes the underlying store .
3735	Removes a binary from the index .
3736	Writes an ascii string .
3737	Sets the output stream .
3738	Creates a JSON configuration .
3739	Creates a structure configuration .
3740	Calculate object size bytes not autility .
3741	Clears all cached objects .
3742	Returns the object input from the given input stream .
3743	Returns the object input for the given array of bytes .
3744	Get object input copy from byte array .
3745	Gets the object output .
3746	Register cross platform class mapping .
3747	Returns the cp name for the given class .
3748	Writes an integer to the output stream .
3749	Writes an int to the output stream .
3750	Writes a long as an int .
3751	Writes a primitive array .
3752	Writes a byte array to the buffer .
3753	Returns the cached FSTFieldInfo for the given classes .
3754	Called when an object is to be written .
3755	Called when an object has been written .
3756	Returns the FSTClazzInfo for the given class .
3757	Writes an array .
3758	Sets the length of a string .
3759	Writes a primitive array .
3760	Finishes the change tracking .
3761	Snapshot changes .
3762	Registers an object for write .
3763	Converts an object to a byte array .
3764	Converts an array of bytes to an object .
3765	Reads a byte array from the storage .
3766	Reads an integer from the stream .
3767	Returns the specified number of bytes to be polled . If the poll index is less than or equal to the specified number of bytes then the poll index is returned .
3768	Enables or disables the thread pool .
3769	Starts cassandra .
3770	Clean data embedded cassandra .
3771	Copy a resource to a directory .
3772	Prints information about a thread .
3773	Checks if a remote port has been taken .
3774	Returns the empty subscriber state .
3775	Returns a map of onnx op descriptors .
3776	Calculates the output shape .
3777	Returns true if the condition is true or false if condition is true .
3778	Returns true if the n - d array matches the given condition .
3779	Returns a boolean array containing the elements of the given n - th dimension of the given n - th dimension .
3780	Returns true if the given n - dimensional condition is true or false if the given dimension is not null .
3781	Applies a condition to an INDArray .
3782	Returns the first index of the specified ndarray .
3783	Converts a FlatBufferBuilder into a FlatBufferBuilder .
3784	Converts FlatProperties into FunctionProperties .
3785	Converts a set of properties to a set of flat properties .
3786	Sets the throwable .
3787	Sets the exception if the first exception is thrown .
3788	Merge the coordinates of x and y .
3789	Partitions a list into a list of doubles .
3790	Gets the nd4j type from the onnx type .
3791	Shuts down the transport .
3792	Returns the current device architecture .
3793	Convert a ndarray to a ndarray .
3794	Creates a 2D pooling image .
3795	Creates a new CompressionDescriptor from a ByteBuffer .
3796	Splits a list into a list of Batches .
3797	Validates that the given arrays have the same dimensions .
3798	Sets the type of the op .
3799	Creates a linspace array with the specified number of elements .
3800	Converts a collection of matrices to an ndarray .
3801	Performs a bilinear product comparison .
3802	Creates a complex ndarray .
3803	Returns a complex value of the given number and double value .
3804	Returns a complex value of the given shape and value .
3805	Returns true if this sync should be replicated .
3806	Returns the subi of the given complex number .
3807	Returns the atan of a complex number .
3808	Creates a complex number from a complex number .
3809	Negate a complex number .
3810	Converts a complex number to an abs complex number .
3811	Creates a complex number from the given number and power .
3812	Gets the Aeron context .
3813	Binarizes the feature matrix with the given cutoff .
3814	Samples a data set .
3815	Returns the memory footprint .
3816	Converts a Throwable to a String .
3817	Returns a simple hostname for a given hostname .
3818	Converts an array of Strings to a String .
3819	Converts a byte array into a hexadecimal string .
3820	Converts a string to an array of Strings .
3821	Splits a string into an array of strings .
3822	Splits the given string using the given separator .
3823	Finds the next character in a string .
3824	Escapes HTML characters from a string .
3825	Joins an iterable of strings with a separator .
3826	Returns a camelized version of the given string .
3827	Replaces all tokens in the given pattern with the given replacements .
3828	Returns the stack trace of a thread .
3829	Inverts an INDArray .
3830	Returns the next BigInteger at the specified position .
3831	Returns true if the device is actually on the host side .
3832	Returns true if the device is actually on the device side .
3833	Create a shape information .
3834	Create a shape information .
3835	Checks if the shape is a vector .
3836	Returns the order of the elements in an INDArray .
3837	Returns the offset for the given array of indexes .
3838	Converts an array of ints to an array of indexes .
3839	Gets a short from the buffer .
3840	Re - allocates a data buffer .
3841	Copies the specified number of bytes to the specified buffer type at the specified stride .
3842	Returns the constant data buffer for the given float array .
3843	Returns the kafka uri .
3844	Creates a new ndarray from the given ndarray .
3845	Log a ndarray .
3846	Returns the maximum scalar of an ndarray .
3847	Returns the maximum of two INDArrays .
3848	Computes the minimum value of an ndarray .
3849	Returns the minimum of two INDArrays .
3850	Stabilizes an ndarray by a given k .
3851	Execute an ndarray in 1 . 0 .
3852	Creates a log1p representation of an ndarray .
3853	Prepares the bounds of an ndarray .
3854	Adjusts the scheme to the bounds .
3855	Returns the next data set .
3856	Execute sgeqrf .
3857	Build an AllocationShape from a DataBuffer .
3858	Checks if the given name exists in the given path .
3859	Reads data from a stream .
3860	Sweeps the lane queue .
3861	Creates an npy array from the given pointer .
3862	Creates an npy - based INDArray from the given file .
3863	Allocate a paged pointer .
3864	Attaches the given object to the objectLocks .
3865	Returns true if the server is started .
3866	Executes the given operation .
3867	Flushes the queue blocking .
3868	Gets the input stream for this resource .
3869	Returns the device for a thread .
3870	Attaches a thread to a device .
3871	Gets the next device .
3872	Returns the OS name .
3873	Calculates the ARCH type .
3874	Publishes an INDArray .
3875	Start the instrumentation application .
3876	Creates a new data buffer .
3877	Intercepts an operation for INT data type .
3878	Adds the given complex number to the given result .
3879	Processes the message .
3880	avg pooling 3d .
3881	Converts an array of SDVariables to a SDVariable object using the specified Conv2DConfig .
3882	Resets the internal state .
3883	Returns the class of the given op .
3884	Stores and allocates a new array .
3885	Returns the shape of this diff .
3886	Evaluates this variable .
3887	Compresses a double array into an INDArray .
3888	Converts a complex ndarray to an exp ndarray .
3889	Center a complex ndarray .
3890	Truncate a complex NDArray .
3891	Pads a complex ndarray with zeros .
3892	Returns the iamax value of an INDArray .
3893	Broadcasts the contents of an INDArray to the current thread .
3894	Processes a message .
3895	Returns the gamma function of the given context .
3896	Return the square root of the given BigDecimal .
3897	Returns the cbrt of the given BigDecimal .
3898	Returns the root of the given BigDecimal .
3899	Returns the exp value of the given BigDecimal .
3900	Converts a MathContext to a BigDecimal
3901	Returns the power of a positive integer .
3902	Pow a round of a BigDecimal
3903	Returns the sin value of the given BigDecimal .
3904	Tans a BigDecimal .
3905	Returns the cosine value of the given BigDecimal .
3906	Returns the sinh of the given BigDecimal .
3907	Returns the tanh value of the given BigDecimal .
3908	Converts a BigDecimal to an integer .
3909	Returns the acosh of the given BigDecimal .
3910	Returns the gamma value of the given BigDecimal .
3911	Broadhurst BPP function .
3912	Scales a BigDecimal to a predicate .
3913	Scales a BigDecimal to a precision .
3914	Converts a BigDecimal to a predicate .
3915	Put a function for a given id .
3916	Returns the inputs for the given function .
3917	Updates the array for the given variable name .
3918	Adds a shape for a variable name .
3919	Associate the given array with the given variable .
3920	Returns the property for the given function instance .
3921	Add a property to a DifferentialFunction
3922	Adds the outgoing arguments for the given function .
3923	Adds the arguments for a function .
3924	Returns true if the given function has arguments .
3925	Evaluates a map of inputs .
3926	Returns a new variable with the given name and shape .
3927	Returns a SDVariable with the given name and input .
3928	Returns a SDVariable that returns zeros like a given SDVariable .
3929	Removes an argument from a function .
3930	Sets the gradient for a given variable .
3931	Avg pooling 3d .
3932	Create a GRUCell with the given base name and configuration .
3933	Executes a list of functions .
3934	Generates a while statement .
3935	Executes the given function .
3936	Executes a function .
3937	Executes the function backwards and returns the result .
3938	Adds a variable as a place holder .
3939	Allocates a pointer to a given number of bytes .
3940	Returns the length of the data buffer for the given type .
3941	Gets the DType for name .
3942	Get the dtype from the context .
3943	Returns the number of operations with the given name .
3944	Destroy all workspaces for the current thread .
3945	Print allocation statistics for current thread .
3946	trmv method .
3947	Returns an INDArray object .
3948	Executes the variable accumulation .
3949	Decodes an INDArray to a threshold .
3950	Gets the node name .
3951	Invokes a ScalarOp .
3952	Asserts that no workspaces are open .
3953	Calculates the negative log likelihood .
3954	Requests a tick for a given amount of time .
3955	Tries to request a toe .
3956	Releases the current toe state .
3957	Returns the current access state .
3958	Builds the environment .
3959	Process a message .
3960	Initializes the curr from a list of data sets .
3961	Initialize the host collectors .
3962	Get device pointer .
3963	Synchronizes the host data with the given data buffer .
3964	Applies an update to the given INDArray .
3965	Synchronizes the given allocation point to the host .
3966	Creates an ndarray index array .
3967	Returns the properties for a function .
3968	Checks if the same diff has any place holder inputs .
3969	Performs a diff operation .
3970	Formats the given INDArray .
3971	Imports a graph .
3972	Converts an IComplexNDArray to a Blob .
3973	Loads the complex data from the given blob .
3974	Saves a complex ndarray to the database .
3975	Copies the real to the given ndarray .
3976	Copy the imag to the given ndarray .
3977	Returns the EPS value of the given number .
3978	Assign a complex ndarray to this complex ndarray .
3979	Returns a new ndarray with the given indices .
3980	Puts a row into the complex ndarray .
3981	Puts a column into an ndarray .
3982	Subtracts the given ndarray from the given ndarray .
3983	Add another complex ndarray to this complex ndarray .
3984	Returns the sub - id of another complex ndarray .
3985	Add a complex ndarray to this complex ndarray .
3986	Assigns a number to this matrix .
3987	R ravel complex ndarray .
3988	Returns the eigenvalues of a complex ndarray .
3989	Computes the symmetric generalized eigenvalues of two INDArrays .
3990	Returns the iamax value of the given complex ndarray .
3991	Copies two complex ndarrays .
3992	Scales a complex number .
3993	Processes a message .
3994	Returns a non - zero count .
3995	Performs a reduction .
3996	Returns the no - arg constructor for the given class .
3997	Returns the constructor for the given class and arguments .
3998	Invokes the given method handle with the given arguments .
3999	Returns the annotation for the given annotation type .
4000	Returns the declared annotation for the given class and annotation type .
4001	Returns true if an annotation of the given type is present in the given class .
4002	Creates a proxy instance for the given result .
4003	Loads an entity from the datastore .
4004	Saves a pojo to a file .
4005	Create proxy .
4006	Returns the entity metadata for the given type .
4007	Executes a key - only query .
4008	Executes a query using a hybrid query .
4009	Performs a normal query .
4010	Executes a projection query .
4011	Returns the number of keys in the datastore for the given key query .
4012	Safely partitions the given iterator using the given chunk size .
4013	Loads a set of keys .
4014	Converts a path to a message .
4015	Creates a new key for the given pojo .
4016	Compares two identity hashes .
4017	Creates a new key from a raw key .
4018	Returns the key for the given type .
4019	Gets the kind here .
4020	Checks if type parameters are missing .
4021	Checks if the given type is a supertype of the given subtype .
4022	Returns the exact direct supertypes of the given type .
4023	Capture a type .
4024	Returns a translator for the given type key .
4025	Returns a populator for the given class and path .
4026	Gets the index instruction for the given class .
4027	Returns true if the method is of interest .
4028	Returns a list of declared properties for the given class .
4029	Returns the key metadata for this entity .
4030	Retrieves the value for the given key from the session .
4031	Executes the round .
4032	Fetch pending entities .
4033	Adds the indexed discriminators for the given class .
4034	Registers a subclass .
4035	Gets the collection component type .
4036	Gets the map key type .
4037	Creates a forward path from the given path .
4038	Returns the final path .
4039	Converts this object to a path string .
4040	Returns the depth of the path .
4041	Puts a collection of updates into the cache .
4042	Removes all cached keys from the cache .
4043	Caches the buckets if they are untouched .
4044	Gets all values from memcache .
4045	Returns the keys of a collection of buckets .
4046	Finds all key fields in the class hierarchy .
4047	Sets the key for the given entity .
4048	Sets the id of a pojo .
4049	Returns the value of the given pojo as a raw value .
4050	Registers a subclass .
4051	Returns true if type1 could have common subtype .
4052	Transforms the given owner into the given class .
4053	Returns the annotation for the given annotation type anywhere in the class hierarchy .
4054	Adds all values to the session .
4055	Loads a key .
4056	Executes this round .
4057	Translates a raw datastore into a Map .
4058	Fetch a set of keys from Google Cloud .
4059	Loads an entity from the datastore .
4060	Create raw any key .
4061	Gets the raw key .
4062	Gets the id value .
4063	Converts a url safe key to a datastore key .
4064	Creates a new instance of Objectify without a transaction .
4065	Transact new .
4066	Transact once .
4067	Returns true if the given conditions match the given onPojo .
4068	Returns the objectify service associated with this transaction .
4069	Creates an async datastore .
4070	Gets the metadata for an entity .
4071	Allocates a key range .
4072	Opens a new objectify instance .
4073	Closes the Objectify context .
4074	Homogenizes the indexes of a list .
4075	Creates a reference to the given value .
4076	Returns the safe key . If the key is not found an exception is thrown .
4077	Adds a value to the list .
4078	Returns true if the task is done .
4079	Generates the if conditions .
4080	Executes the engine .
4081	Returns the container for the given type and path .
4082	Returns the stat for the given type .
4083	Unwraps and throws a Throwable .
4084	Returns a translator for the given type key .
4085	Gets the root entity of the given class .
4086	Creates a translator for the given type key .
4087	Loads a property from a container .
4088	Gets a value from a container .
4089	Loads a value from a Pojo .
4090	Saves a property .
4091	Returns the value of a property .
4092	Write extensions .
4093	Writes a category to the JsonGenerator .
4094	Writes the content categories .
4095	Process a snippet .
4096	Returns an iterable of bids for the given response .
4097	Builds a bid with the specified id .
4098	Updates the bids in the response .
4099	Removes bids from the response .
4100	Returns an iterable of imps matching the given filter .
4101	Read extensions .
4102	Returns true if the given parser is empty or null .
4103	Registers an OpenRTBJsonExtReader with the OpenRTBJSON API .
4104	Register an OpenRtbJsonExtWriter .
4105	Processes the bid .
4106	Processes the fields .
4107	Updates all objects in the given iterable using the given function .
4108	Filter a list of objects based on a predicate .
4109	Returns the current name of the JsonParser .
4110	Starts a new object .
4111	Starts an array .
4112	Returns the next token from the given JsonParser .
4113	Write integer boolean field .
4114	Writes a list of Strings to a JsonGenerator .
4115	Writes a list of integers to a JsonGenerator .
4116	Write a list of longs to a JsonGenerator .
4117	Write a list of ProtocolMessageEnums to a JsonGenerator .
4118	Resolves a URL .
4119	Returns a new URL based on the base URL and the target URL .
4120	Returns the host segments for the given URL .
4121	Returns the host of the given URL .
4122	Gets the page from the given URL .
4123	Loads a list from the storm configuration .
4124	Extracts the configuration element from the given map .
4125	Returns the protocol associated with the given URL .
4126	Generates the WARC info .
4127	Extract a refresh URL from a string .
4128	Gets the metadata for an outlink .
4129	Filters the given metadata .
4130	Adds a URL to the queue .
4131	Cleans a field name .
4132	Gets the charset name from a byte array .
4133	Gets the charset from the text .
4134	Gets the charset from the meta data .
4135	Sniffs a byte array and returns true if the byte array contains a clue .
4136	Sets the value for the given key .
4137	Returns the first value of a list of keys .
4138	Returns a list of cookies for a given URL .
4139	Checks if the cookie domain matches the urlHostName .
4140	Returns the cache key for the given URL .
4141	Gets the robot rules set from the cache .
4142	Extract metadata tags from a DocumentFragment .
4143	Acknowledges a tuple .
4144	Filter a URL .
4145	Filter a URL string .
4146	Reads the rules from a class file .
4147	Processes the url s query and params .
4148	Creates a new NavigationFilters from a config file .
4149	Adds a new record format .
4150	Tries to throttle the number of queries sent .
4151	Triggers the last query received if there is a difference between the current time and the maxDelayBetweenQueries .
4152	Creates a new instance of ParseFilters .
4153	Appends a new node to the document .
4154	Ignorable whitespace .
4155	Creates a processing instruction .
4156	Appends a comment to the document .
4157	Appends a CDATA node to the current node .
4158	Start a DTD .
4159	Start prefix mapping .
4160	Returns the value for the given URL .
4161	Trims the given text and returns it as a string .
4162	Check custom interval .
4163	Creates a URLFilters from a config file .
4164	Sets the number of wheel items .
4165	Resolve size and state .
4166	Sets the empty item drawable .
4167	Sets the angle of the handler .
4168	Updates the selected position .
4169	Invalidates the row item drawable at the given position .
4170	Convert a raw position to a wheel position .
4171	Updates the velocity .
4172	Returns the color of the map .
4173	Clamps the given integer to the given upper limit .
4174	Writes the coveralls data to a JsonWriter .
4175	Get data as ByteBuffer .
4176	Set the value of the ArayChar . setString object .
4177	Creates a 1D - DataType - STRING Array .
4178	Converts a String to an ArrayChar .
4179	Converts an ArrayObject to an ArrayChar .
4180	Creates a char from a string array .
4181	Gets the forecast time interval offset .
4182	Shows the window .
4183	Shows the window if it is not iconified .
4184	Makes an estimate of the size of a grid .
4185	Main entry point for the test .
4186	Creates a new unit name .
4187	Creates a new unit name .
4188	Converts a string to a plural .
4189	Returns true if the specified date is included in the list .
4190	Returns a DateRange that intersects the specified clip .
4191	Extends the specified date range .
4192	Extends the specified date .
4193	Sets the start date .
4194	Sets the end date .
4195	Sets the duration .
4196	Recalculates the duration .
4197	Adds a map bean to the menu .
4198	Prints a yyy error message .
4199	Returns the name of this node .
4200	Converts the params to a string .
4201	Opens a DSP file .
4202	Computes the bounds of a latLonRect .
4203	Synchronizes the UI .
4204	Computes the unlimited chunking .
4205	Registers the catalog watcher for the given directory .
4206	Process events .
4207	Sets the reference date .
4208	Open a dataset .
4209	Wrap a NetcdfDataset into a FeatureDataset .
4210	Checks if a feature type is OK .
4211	Find the feature type for a NetcdfFile
4212	Writes the catalog to the response .
4213	Converts a catalog to HTML .
4214	Gets the user CSS url .
4215	Gets the user header .
4216	Creates a dynamic catalog .
4217	Adds the global services for the given catalog builder .
4218	Initializes the session with the credentials provider and user agent .
4219	Gets the content of the session as a string .
4220	Puts a URL encoded string into the application .
4221	Gets the front page .
4222	Creates a catalog from the given reqPath .
4223	Extract geospatial coverage from a GribCollectionImmutable .
4224	Get single dataset or by type name .
4225	Returns true if the two VertCoordValues are nearly equal .
4226	Creates a new UnitID with the given name plural and symbol .
4227	Parse a GradsAttribute .
4228	Reads a top - level integer from a random access file .
4229	Converts two shorts to an integer .
4230	Converts a byte array to an integer .
4231	Get java . util . Date .
4232	Make a valid name for a netcdf object .
4233	Checks if the given name is a valid Netcdf3 object name .
4234	Opens a file for writing .
4235	Reads the record data .
4236	Read record data subset .
4237	Fill non - record variables .
4238	Creates a GradsTimeStruct from the given time index .
4239	Creates a GradsTimeStruct from the given calendar .
4240	Returns true if the given string contains a time template .
4241	Adds a function to the server side .
4242	Returns the boolean function with the given name .
4243	Returns the BTFunction with the given name .
4244	Loads a new function .
4245	Returns the level name for the given record .
4246	Returns the level description for the given record .
4247	Returns the level unit name for the given record .
4248	Gets the projection type .
4249	Returns true if the given record is a vertical coordinate .
4250	Returns true if this record is a layer .
4251	Make a coordinate transform .
4252	Make a dummy transform variable .
4253	Make a projection from a CoverageTransform .
4254	Starts the thredds dataset chooser .
4255	Saves the data table .
4256	Sets the time zone of this Chronology .
4257	Writes a count to the stream .
4258	Writes an atomic array to the output stream .
4259	Writes a byte array to the stream .
4260	Writes a byte array to the output stream .
4261	Finish the initialization process .
4262	Creates a CalendarDateRange from a DateRange .
4263	Factory method .
4264	Parse a DDS from a string .
4265	Parse a das from a string .
4266	Swaps the grid header .
4267	Reads a grid record .
4268	Main entry point for GRID2001 .
4269	Write a constraint to the file .
4270	Writes the WFS headers and xsd to the output file .
4271	Writes a list of operations to a file .
4272	Reads all files from a directory .
4273	Scan a log file .
4274	Returns the packing type for the given grid number .
4275	Finds a grid by parm .
4276	Returns a DM_RPKG for a given word .
4277	Unpacks the grib1 data .
4278	DP_UGRB Method .
4279	Unpacks grib1 data .
4280	Unpack grib2 data .
4281	Prints the grids .
4282	Reads the next bit from the input stream .
4283	Creates a CalendarDate from a Calendar object .
4284	Creates a CalendarDate from a Java date .
4285	Creates a CalendarDate from the given msecs .
4286	Creates a CalendarDate from the given Calendar and msecs .
4287	Parses the given udunits into a CalendarDate object .
4288	Gets the difference between a date and a period .
4289	Creates a new atom array .
4290	Setup the download parameters .
4291	Escapes a string .
4292	Creates a list of slices from a rangelist .
4293	Unwraps a NetcdfFile .
4294	Checks if a list of dimensions contains a variable length .
4295	Computes the effective shape for the given dimset .
4296	Adds a date to this calendar .
4297	MyMultiplyBy method .
4298	MyDivideBy method .
4299	Creates a new ScaledUnit from the given Unit .
4300	Returns a ScaledUnit that raises to the specified power .
4301	Converts the given amount to a derived unit .
4302	Converts a float array to a derived unit .
4303	Converts a derivable unit to a derived unit .
4304	Returns the canonical string representation of this unit .
4305	Reads data from a section iterable .
4306	Read data from partition 2 .
4307	Flattens a point feature collection .
4308	Returns the service with the given name .
4309	Returns the gate size for the given datatype .
4310	Returns the start of the gate .
4311	Returns the number of gates associated with the given datatype .
4312	Writes an XML document to the output stream .
4313	Returns the preferred layout size for the given container .
4314	Verifies that the given dataset is a descendant of the given dataset .
4315	Generates a catalog using a proxy database handler .
4316	Creates a CalendarDateUnit from the given calendar name and udunit string .
4317	Creates a CalendarDateUnit with the given calendar and udunitString .
4318	Creates a new CalendarDateUnit from the given CalendarPeriod . Field and BaseDate .
4319	Make offset from ref date .
4320	Creates a CalendarDate from the given value .
4321	Returns the QuantityDimension for this unit .
4322	Returns true if the file is a valid one .
4323	Reads the STN names from a random access file .
4324	Read data from ucar . ucar . nc2 . Variable
4325	Reads int data from a LayoutRegular .
4326	Read data to byte channel 11 .
4327	Calculates the elevation of a given angle .
4328	Calculates the step between two ranges .
4329	Calculates the azimuth between two points .
4330	Calculates the coef value of a byte .
4331	Calculates the nyquist of a wave .
4332	Creates a vertical transformation .
4333	Sets the debug flags .
4334	Sets whether the index should be extended .
4335	Reads the y - axis of a variable .
4336	Returns true if XY is missing .
4337	Returns the LatLon bounding box .
4338	Finishes the sequence .
4339	Adds a tab to a StringBuffer .
4340	Pads a string to the specified width .
4341	Converts an integer to a string of the specified width .
4342	Converts a long to a string of the specified width .
4343	Formats a double as a byte size .
4344	Prints a formatted double .
4345	Shows a double .
4346	Gets the shape string .
4347	Finishes the slice .
4348	Returns a string representation of this constraint .
4349	Composes a slice .
4350	Computes the MAP of a slice .
4351	Dump bytes from a ByteBuffer .
4352	Dump bytes into a ByteBuffer .
4353	Returns the ellipsoid type for the given name .
4354	Returns the type of the ellipsoid with the given id .
4355	Decode vlen data .
4356	Decode vlen data .
4357	Extracts a list of URLs from a URL .
4358	Returns the text content of the given URL .
4359	Filter the given InputStream for tags .
4360	Read data from Ucar to a WritableByteChannel .
4361	Adds all attributes in the given iterable .
4362	Removes an attribute with the given name .
4363	Removes the attribute with the given name ignoring case .
4364	Get offsets in time units .
4365	Adds an ActionSourceListener to this ActionCoordinator .
4366	Get a standard date from a string .
4367	Returns the standard date or ISO - 8601 date for the given text .
4368	Returns the date of this timescale unit s origin .
4369	Returns the date in seconds .
4370	Makes a date from a given value .
4371	Returns the value for the given date .
4372	Converts a double value to a standard date string .
4373	Gets the grid spacing in km .
4374	Add dimensions to a NetcdfFile .
4375	Adds a coordinate axis .
4376	Make a projection of a given type .
4377	Adds the GDS parameters .
4378	Adds a new coordinate system variable .
4379	Makes the LatLonPoint conformal .
4380	Makes the projection point .
4381	Creates a Mercator .
4382	Make MSGgeostationary .
4383	Sets the dx - dy coordinate .
4384	Reads a dataset from the catalog .
4385	Reads a dataset scan .
4386	Read metadata content from a URL .
4387	Returns the level type .
4388	Checks if a random access file is valid .
4389	Writes a byte array to the stream .
4390	Sets the clear name .
4391	Returns the coordinate name for the given axis type .
4392	Returns the name of a coordinate .
4393	Builds the XML response .
4394	Builds an exception from the given XML .
4395	Breaks up a level variable into a list of dimensions .
4396	Creates the Z coordinate axis .
4397	Create new variables .
4398	Make a time coordinate axis from a reference .
4399	Float bit shave .
4400	Main method to write grib to netcdf
4401	Wrap a NetcdfFile in a NetcdfDataset .
4402	Opens or acquires a file .
4403	Clears all coordinate systems .
4404	Finds the coordinate axis of the given type .
4405	Finds the coordinate axis with the given full name .
4406	Returns the coordinate system with the given name .
4407	Returns the coordinate transform with the given name .
4408	Determines if an enhancement is needed .
4409	Sets the values of a variable .
4410	Sets the values for a variable .
4411	Creates an array from a list of string values .
4412	Returns the index .
4413	Returns the file with the given name or null if the file does not exist .
4414	Returns a list of features that intersect the specified box .
4415	Computes the discretization of an array of doubles .
4416	Add a ThreddsMetadata object .
4417	Adds a new InvDocumentation with the given type and content .
4418	Removes an InvDocumentation with the given type .
4419	Returns the maximum number of bytes at the given start .
4420	Checks if the given NetcdfFile is a min .
4421	Gets a dataset .
4422	Breaks up convention names .
4423	Builds a convention attribute .
4424	Builds the coordinate systems .
4425	Find the coordinate axes .
4426	Finds all coordinate systems .
4427	Makes the coordinate systems .
4428	Makes the coordinate systems maximal .
4429	Checks if the given variable is a coordinate axis .
4430	Adds a coordinate variable .
4431	Subsets the given InvDataset .
4432	Adds a dataset filter to the top of the list .
4433	Marks the given InvDatasetImpl with the given filter .
4434	Deletes an InvDataset .
4435	Initializes the TDS context once .
4436	Returns true if the counter with the given name has a value matching the given value .
4437	Adds a name and symbol to a double definition .
4438	Compares two rows ignoring case .
4439	Compares two boolean values .
4440	Returns the scope of the group .
4441	Pass a reserved attribute to a node .
4442	Returns true if the given time range is valid .
4443	Returns true if there is a next slice .
4444	Registers a class .
4445	Registers a class .
4446	Returns true if the specified DSP class is registered .
4447	Unregisters a class from the registry .
4448	Factory method .
4449	Gets the forecast time interval size in hours .
4450	Returns the offset of the forecast time interval for the given record .
4451	Returns the VertCoordType for the given code .
4452	Finishes the process .
4453	Sorts the node list .
4454	Returns a random access file for a given part .
4455	Find variable with attribute .
4456	Finds a variable with an attribute value .
4457	Finds the name of a variable with an attribute value .
4458	Find variable with attribute value .
4459	Finds the nested structure for the given structure .
4460	Returns true if the given Netcdf3Dataset has a record structure .
4461	Returns the literal value for the given key .
4462	Get a feature type from a NetcdfDataset .
4463	Gets the variable name from a NetcdfDataset .
4464	Returns the value of a coordinate .
4465	Converts a connect to a lon .
4466	Returns the coordinate values for this coordinate axis .
4467	Creates a section of this axis .
4468	Finds the closest bounds to the target .
4469	Returns the name of this element .
4470	Adds an action to the menu .
4471	Returns the match for the given path . Returns null if no match is found .
4472	Initializes the projector .
4473	Returns the index of the first occurrence of the given byte array .
4474	Adds a source picture to the cache .
4475	Reports the contents of the cache .
4476	Stops background loading .
4477	Stops background loading except the given URL .
4478	Creates a get method .
4479	Creates an HTTPMethod instance .
4480	Returns the next random float of the given type .
4481	Returns the next random number in the range .
4482	Reads the data for a variable .
4483	Returns the FileSystemProvider for the given URI .
4484	Reads the station table .
4485	Returns the index of the given value or 0 if not found .
4486	Removes the data variable with the given name .
4487	Returns the cloud hgt2 meters .
4488	Reads a single variable .
4489	Sets the number of colors to use .
4490	Calculates the AffineTransform .
4491	Converts a URI to an auth scope .
4492	Finishes the synchronization .
4493	Returns true if this factor is the reciprocal of the given factor .
4494	Gets the directory catalog .
4495	Finds the idx of the given want .
4496	Read metadata content from url string .
4497	Reads metadata content from a JDOM2 element .
4498	Add metadata content .
4499	Validate metadata content .
4500	Reads a CatalogGenConfig element from the InvDataset .
4501	Reads the dataset source element .
4502	Read a DatasetNamer element .
4503	Read a DatasetFilter element .
4504	Reads a result service element .
4505	Creates the catalog gen config element .
4506	Create jdom2 . Element for DatasetSource .
4507	Create jdom2 . Element for DatasetNamer
4508	Creates a dataset filter element .
4509	Creates the jdom2 result service element .
4510	Checks if a flag is set .
4511	Constructs the menu .
4512	Adds a prefs to a menu .
4513	Adds the parameters to a text file .
4514	Makes a GempakParameter from the given words .
4515	Returns the parameter with the given name .
4516	Reads the contents of an InputStream into a String .
4517	Reads bytes from the input stream .
4518	Replaces a file template with a new one .
4519	Sets the information for a specific station .
4520	Accepts the given StringBuffer .
4521	Shows the format info for the given text field .
4522	Reads a bitmap from a random access file .
4523	Sets the NetcdfFile .
4524	Sets the debug flags .
4525	Parse a name .
4526	Returns true if the given structure is a group .
4527	Returns the netcdf strlen dimension for the given variable .
4528	Gets the shared dimension .
4529	Constructs the dimensions for the given group .
4530	Returns true if the given dtype is unsigned .
4531	Read data DDS from server .
4532	Gets an icon from a resource .
4533	Returns the image for the given image name .
4534	Creates a cursor for the given image .
4535	Read data fill .
4536	Read data fill .
4537	Read a fill value from a layout .
4538	Creates a primitive array of the given size .
4539	Converts a byte array to a UTF - 8 encoded char array .
4540	Converts a char array to a UTF - 8 encoded byte array .
4541	Converts a byte array to a char array .
4542	Reads a section .
4543	Creates a ArrayStructure for a section .
4544	Gets the scalar string .
4545	Gets the scalar structure at the given index .
4546	Gets a member array .
4547	Computes the structure members for the given variable .
4548	Adds dimensions to a NetcdfFile .
4549	Creates a crawlable dataset .
4550	Normalizes a path .
4551	Adds an explicit dataset to the cache .
4552	Adds a dataset scan .
4553	Finishes a task .
4554	Creates a list of datasets .
4555	Returns the TypicalDataset .
4556	Creates a new dataset .
4557	Puts the resource control for the given dataset .
4558	Adds a point to the map .
4559	Returns the upper bound of this matrix .
4560	Returns the lower bound of this matrix .
4561	Validates the dataset .
4562	Checks if this InvDataset matches the given InvDataset .
4563	Adds all features from a feature dataset point .
4564	Parse a constraint .
4565	Evaluates the clauses .
4566	Prints a constraint to the specified print writer .
4567	Modify NetcdfFile from ODL .
4568	Sets the shared dimensions for the variable .
4569	Checks for unknown dims .
4570	Find the group with the given name in the given parent group .
4571	Reads the content of an Xlink .
4572	Returns the standard URI for this catalog .
4573	Sets the panel s projection .
4574	Adds a constraint to the layout .
4575	Invalidates the layout of the given container .
4576	Removes a component from the layout .
4577	Returns the minimum size of the layout container .
4578	Layouts a container .
4579	Checks if the given coordinate system is a circular coordinate system .
4580	Returns the maximum radius of this axis .
4581	Opens a URL .
4582	Converts a geocentric lon to a SAT .
4583	satToEarth Method .
4584	Converts lamda_goes and theta_goes values to geometries .
4585	Converts a scan geometry to a sweep angle axis .
4586	Converts a sweep angle axis to a scan geom .
4587	Sets the coordinates of the runtimes .
4588	Write a PointObsDataset to a file .
4589	Rewrite point feature dataset .
4590	Returns the ArraySequence for the given member name .
4591	Gets the full name .
4592	Returns the unique ID .
4593	Returns the InvAccess for the given service type .
4594	Returns the InvDatasetImpl with the given name .
4595	Returns the InvCatalog s parent .
4596	Returns a list of InvMetadata for the given metadata type .
4597	Returns the service with the given name .
4598	Returns the variables for a given vocab .
4599	Finds all catalog references in the dataset tree .
4600	Escapes a path to a URL .
4601	Adds a stagger to the given array .
4602	Extrapolate a double array .
4603	Computes the rotation of the earth .
4604	Gets the detail info .
4605	Creates a Structure object from the given part name and dimensions .
4606	Creates the missing variable .
4607	Creates a new parameter variable .
4608	Adds the global attributes .
4609	Returns the size of the variable with the given name .
4610	Gets a 1D array .
4611	Returns yy_lr_goto_state .
4612	yysyntax_error Method .
4613	Print yy_reduce_rule to yystack
4614	Read a DMR from the input stream .
4615	Reads an error from the stream .
4616	Reads a number of bytes from the input buffer .
4617	Reads the header from the input stream .
4618	Converts iso string to date .
4619	Reads a table from a URL .
4620	Transfers a group to a new group .
4621	Returns the STN file for the given location .
4622	Opens a random access file .
4623	Returns the beginning of the node at the given index .
4624	Returns the end of the node at the given index .
4625	Create all runtime collections .
4626	Sets the edit value .
4627	Returns the data type for the given format .
4628	Converts ECF coordinates to LLA coordinates .
4629	Cleans a unit .
4630	Cleans a name .
4631	Returns true if the given string is a unit .
4632	Factory method .
4633	Returns the variable id of the given note .
4634	Parse a DAS .
4635	Finds a DodsV with the given name .
4636	Returns the DodsV for the given DodsV .
4637	Finds a DodsV by its index .
4638	Returns the parent group .
4639	Returns the dimension at the specified index .
4640	Returns the index of the dimension with the given name .
4641	Returns the unit value as a string .
4642	Returns the shape as a Section .
4643	Creates a new Variable with the specified dimension and value .
4644	Sets the enum type def .
4645	Reads a list of ranges .
4646	Read a scalar string .
4647	Reads the data from the cache .
4648	Reads a section from the cache .
4649	Writes a CDL .
4650	Returns a string representation of this variable .
4651	Sets the data type .
4652	Sets the dimensions .
4653	Resets the shape .
4654	Sets the dimensions of this variable .
4655	Resets the dimensions .
4656	Sets the dimension at the specified position .
4657	Sets the cached data .
4658	Gets the dimensions all .
4659	Sets the bounding box .
4660	Finishes the grid .
4661	Returns an iterable of all the datasets in this set .
4662	Checks if the given path ends with any of the specified synextensions .
4663	Opens a CDMR factory .
4664	Build the DMR .
4665	Builds the eqtypes for the given variable .
4666	Build the dimrefs .
4667	Finds a matching enum typedef .
4668	Gets the core dimset .
4669	Scan a buffer file .
4670	Process a Bufr message as a dataset .
4671	Performs a servlet file upload .
4672	Returns the transform for this navigation .
4673	Returns true if the map area should rotate .
4674	Gets the map area .
4675	Convert a projection point to a screen .
4676	Pans the map area .
4677	Zooms to the specified startx width and height .
4678	Recalculation from the bounding box .
4679	Adds a listener to the listener manager .
4680	Removes a listener from the list .
4681	Send an event to all registered listeners .
4682	Send event exclude source .
4683	Prints a command to the output stream .
4684	Prints a command to the output stream .
4685	Prints the data of a variable .
4686	Print variable data section .
4687	Prints a StructureData to a PrintWriter .
4688	Prints the contents of an array to a PrintWriter .
4689	Prints an array to a PrintWriter .
4690	Writes NcML to a writer .
4691	Reads an attribute as a double .
4692	Adds a parameter to the coordinate transform .
4693	Main entry point .
4694	Reads a DapVariable as an atomvar .
4695	Returns true if the record is positive up .
4696	Returns true if the given unit is compatible with this one .
4697	Creates a label for a given quantity ID .
4698	Sets the bit offset .
4699	Converts a 64 - bit integer to a UINt .
4700	Converts a bit into a SInt .
4701	Opens a connection .
4702	Returns the DAS .
4703	Get a DDS from a string .
4704	Gets the complete CE .
4705	Convert a ProjectionPoint to a LatLonPoint
4706	Generates the idvDatasetCatalog .
4707	Creates a DateRange from a DateRange .
4708	Checks if the given random access file is valid .
4709	Handles information about a spacecraft .
4710	Handles sensor information .
4711	Reads the root element of a JDOM document .
4712	Cleans the character data from a string .
4713	Xunescapes a string .
4714	Escapes the given URL query string .
4715	Unescapes a URL query string .
4716	Decodes a string with a backslash .
4717	Encodes a string with a backslash .
4718	Add lightning global attributes .
4719	Swaps a byte array for a short .
4720	Swaps a byte array for an int .
4721	Swaps a byte array into a double .
4722	Swaps a float with another .
4723	Swaps a double .
4724	Convert a short to a byte array .
4725	Converts an integer to a byte array .
4726	Converts a long to a byte array .
4727	Returns a subset of this transformation .
4728	Write an XML document to the output stream .
4729	Converts a double array to a double array .
4730	Starts the XML file .
4731	Writes the features to a file .
4732	Adds a list of levels to the grid .
4733	Adds the dimensions to the netcdf file .
4734	Adds a group to the NetcdfFile .
4735	Find the coordinate transform .
4736	Returns the index of the record .
4737	Exit the disk cache .
4738	Returns the file associated with the given location .
4739	Returns the file or cache if it does not exist .
4740	Shows a cache of files .
4741	Cleans the disk cache .
4742	Calculates the bearing between two points .
4743	Calculates the bearing between two points .
4744	Converts a LatLonPoint to a LatLonPoint
4745	Returns a LatLonPointImpl for the given point .
4746	Find a lat lon point .
4747	Returns a LatLonPointImpl with the coordinates lat1 lon1 az and dist .
4748	Loads a picture in a thread .
4749	Loads a picture from the specified URL .
4750	Loads the image into the source image object .
4751	Stop loading the source image .
4752	Stops the source image loading except for the given URL .
4753	Returns the size of the image .
4754	Sets the source buffered image .
4755	Returns the standard URI for this catalog .
4756	Creates a data descriptor for an associated field .
4757	Transfers a list of data descriptors to a new list .
4758	Count the number of bits in the data descriptor .
4759	Returns true if this object is equal to another object .
4760	Loads the header .
4761	Loads the data from the stream .
4762	Returns the field with the given name .
4763	Returns an array of doubles for the given field name .
4764	Returns an array of Strings for a given field name .
4765	Returns an array of booleans for a given field name .
4766	Returns the name of the field at the specified index .
4767	Returns the names of all the fields .
4768	Main method to load Dbase files .
4769	Returns a map of DapAttributes .
4770	Set a DapAttribute .
4771	Remove a DapAttribute
4772	Returns the group .
4773	Returns the container of this node .
4774	Returns the escaped short name .
4775	Returns the container path .
4776	Returns the group path .
4777	Computes the fqn .
4778	Returns true if this is a top level sort .
4779	Build the DapDataset from a byte array .
4780	Adds a bean collection .
4781	Returns a list of objects for the specified key .
4782	Returns the object associated with the given key name .
4783	Read data from a random access file .
4784	Prints this constraint .
4785	Prints a compound instance .
4786	Writes the given element to a string .
4787	Writes the given element to the given file .
4788	Writes an XML element to an OutputStream .
4789	Writes the given element to the given writer .
4790	Creates a new dimension element .
4791	Creates a projection for a coordinate transformation .
4792	Gets the int array .
4793	Creates a BaseUnit with the specified name symbol and quantity .
4794	Creates a new Unit with the given name and symbol .
4795	Creates a unit database .
4796	Creates a derived UnitDBImpl .
4797	Creates a new SI instance .
4798	Finds the coordinate .
4799	Finds the closest axis to the given target .
4800	Returns a subset of values for a given stride .
4801	Opens a feature dataset .
4802	Opens a feature dataset .
4803	Annotate a NetcdfDataset .
4804	Read data from a random access file .
4805	Assembles the URI from the given enum set of parts .
4806	Returns a canonical string .
4807	Normalizes a string .
4808	Compile the DapDataset .
4809	Finishes the invocation .
4810	Returns the value associated with the specified key .
4811	Adds a new value to the list .
4812	Returns the current date .
4813	Prints the XML attributes of the given node .
4814	Prints an XML attribute .
4815	Returns true if the given attribute is a special attribute .
4816	Prints the dimrefs of a variable .
4817	Checks if the given random access file is a valid file .
4818	Sets the area directory attributes .
4819	Sets the nav block attributes .
4820	Gets the cal type .
4821	Sets the cal type attributes for the given image .
4822	Finds the coordinates for a given predicate .
4823	Finds the coordinate name by type .
4824	Finds a coordinate by type .
4825	Finds a coordinate axis by type .
4826	Find dimension by type .
4827	Finds the best coordinate system for the given dataset .
4828	Finds a CoverageCoordAxis1D that is dependent on a CoverageCoordAxis
4829	Returns the variable for the given row and name .
4830	Deserializes a single file from an input stream .
4831	Reads a marker from the stream .
4832	Writes a marker to the output stream .
4833	Throws a SAX fatal error .
4834	Creates a random time series .
4835	Creates a TimeSeriesChart .
4836	Gets the Java Array String .
4837	Returns a DoradePARM array containing all the parameters .
4838	Sets the stns .
4839	Sets the selected station .
4840	Redraws the map .
4841	Read an object from an ObjectInputStream .
4842	Writes an object to the output stream .
4843	Adds a unit to the set .
4844	Adds a unit to the set .
4845	Adds a symbol with the given name to this unit .
4846	Returns the unit associated with the given id .
4847	Adds a new unit by name .
4848	Adds a new unit to the symbol map .
4849	Adds a unique unit to the map .
4850	Adds a new look and feel to the menu .
4851	Find record by drsPos .
4852	Reads data from a dataset .
4853	Serialize a dataset to a DataOutputStream .
4854	Returns the values of a parameter in a working array .
4855	Constructs a copy of this view .
4856	Opens a feature dataset .
4857	Opens a FeatureDataset .
4858	Open a NetcdfDataset .
4859	Annotate InvDataset and NetcdfDataset .
4860	Removes duplicates from a list of properties .
4861	Adds a partition to this collection .
4862	Creates a GribCollectionMutable .
4863	Gets an instance of RegExpAndDurationTimeCoverageEnhancer to match on dataset name .
4864	Creates an instance of RegExpAndDurationTimeCoverageEnhancer to match on dataset path .
4865	Write XML to a file .
4866	readStructureData Method .
4867	Sets the image with the given legend parameter and rotation .
4868	Sets the buffered image .
4869	Zooms the image to fit .
4870	Paints the component .
4871	TG_FTOI Method .
4872	Returns the TG_ITOC .
4873	Returns TI_ITOC from idtarr array .
4874	Returns the TI_DAYM value for a given year and imon .
4875	Returns the LV_CCRD for a given ivcord .
4876	Converts an array of ints to swp4 .
4877	Gets the grid packing name .
4878	Gets the data type .
4879	Reads data from an input stream .
4880	Externalizes the given output stream to the given output stream .
4881	Returns a TagEnum for the given code .
4882	Returns the next image .
4883	Returns the size of a DapType .
4884	Returns the sum of the elements of an array .
4885	Sets the size of the spatial grid .
4886	Sets the overlap .
4887	Clears the grid .
4888	Marks the given object as clear .
4889	Finds the intersection of a Rectangle2D .
4890	Finds the intersection of a point with this grid .
4891	Finds the closest point in the grid .
4892	Computes the squared distance between two points .
4893	Gets or creates a BaseUnit from a BaseQuantity .
4894	Searches for a service type in the given fragment .
4895	Searches the given URL for a service type .
4896	Decodes a path extension .
4897	Checks if the given location contains any DODs .
4898	Checks if the given location is a . dap .
4899	Sends a Variable to the specified OutputStream .
4900	Returns the suffix of the given string .
4901	Returns the prefix of the given string .
4902	Locates a file .
4903	Locates a file in a relative path .
4904	Extracts bytes from a ByteBuffer .
4905	Returns the struct path for the given variable .
4906	Nullifies the given path .
4907	Joins an array of strings into a single string .
4908	Returns true if the given path has a drive letter .
4909	Returns a list of all protocols for the given URL .
4910	Converts an index to a list of slices .
4911	Converts an offset to a list of slices .
4912	Returns true if all slices are contiguous .
4913	Checks if a list of slices contains a single point .
4914	Converts a list of slices to an index .
4915	Reads data from an input stream .
4916	Sets the information for a specific station .
4917	Set short names .
4918	Read feature collection configuration from catalog .
4919	Adds a new decl to this group .
4920	Updates the list of DapGroups .
4921	Find a variable by name .
4922	Gets the axis type .
4923	Returns the stat type for the given time range indicator .
4924	Returns a subset of a LatLonRect .
4925	Returns a list of range iterators for this axis .
4926	Sets the defaults .
4927	Returns the session id .
4928	Sets the maximum number of redirects .
4929	Sets the use sessions .
4930	Closes the connection .
4931	Set authentication and proxy .
4932	Tracks an HTTPSession .
4933	Sets the global credential provider .
4934	Validate a URL .
4935	Factory method .
4936	Computes the strides of a shape .
4937	Returns a section of the given ranges .
4938	Returns a new index that is less than or equal to this one .
4939	Reduces the index by the specified number of bytes .
4940	Transposes two indexes .
4941	Permutes an array of dims .
4942	Gets the index iterator for the given array .
4943	Returns the value of the current element .
4944	Sets the index .
4945	Sets the current dim value .
4946	Sets this index to the given values .
4947	Returns the name of the time interval .
4948	Creates a CalendarDateRange from a Calendar . ucar . nc2 . time . Cal .
4949	Makes the date list .
4950	Converts a DMPart into a GempakParameters object .
4951	Returns a list of GempakStation objects .
4952	Create a new GempakStation based on the given header .
4953	Returns a list of the name of all the station keys .
4954	Returns a list of dates .
4955	Returns the index of the given station .
4956	Returns the file type .
4957	Indents the specified number of bytes .
4958	Sets the indentation depth .
4959	Read or create an index from a single file .
4960	Adds a directory scan .
4961	Checks if a scan is needed .
4962	Scan the dataset for the first time .
4963	Sets the debug flags .
4964	Adds a new variable .
4965	Writes a CancelTask to the file .
4966	Validates the given XML object .
4967	Returns a string representation of this constraint .
4968	Sets the original variable .
4969	Reads the data from a variable .
4970	Reads a section from a variable .
4971	Returns true if the smData needs to be converted .
4972	Converts a ArrayStructure to a ArrayStructure
4973	Converts the member info of a StructureMembers to a StructureMemberInfo .
4974	Finds a variable by its org name .
4975	Checks if a variable has data .
4976	Enhances all variables in the dataset in the given enhancement mode .
4977	Returns true if the resource control is ok .
4978	Creates a new empty sequence .
4979	Creates a ArraySequence from the given Sequence .
4980	Creates a Sequence object from the given part name .
4981	Adds the vertical coordinate attribute .
4982	Read XML asynch .
4983	Reads XML from the InvCatalog .
4984	Reads XML from InvCatalog .
4985	Writes an XML file to the output stream .
4986	Returns the metadata converter for the given key .
4987	Creates a dimensionless id .
4988	MyMultiplyBy method .
4989	MyDivideBy method .
4990	Converts a float array to a derived unit .
4991	Returns true if the given unit is compatible with this one .
4992	Writes a feature of a geometry .
4993	Write a point to the XML .
4994	Write a line .
4995	Write a polygon .
4996	Returns the value of the node with the given name .
4997	Returns the subnodes of the given node .
4998	Parse a response .
4999	Pass a reserved node to a dap .
5000	Returns the subset of a variable as a String .
5001	Factory an ArrayStructure into a ArrayStructureMA .
5002	Sets the data array for a member .
5003	Factory a ArrayStructureMA .
5004	Returns the geometry type for the given name .
5005	Creates a new station feature .
5006	Compiles a CEAST node .
5007	Compiles a filter variable .
5008	Adds a redef to the constraint .
5009	Creates a view at the given index .
5010	Returns true if the specified rectangle is contained in this rectangle .
5011	Extends the specified point .
5012	Extends a LatLonRect .
5013	Returns the LatLonRect that intersects the specified clip .
5014	Adds two Arrays to an Array .
5015	Returns true if the two arrays are conformable .
5016	Returns true if the two shapes are conformable .
5017	Converts an Array to a DataType .
5018	Copies an array to a new array .
5019	Copies a boolean array to another array .
5020	Copies an Array to another Array .
5021	Returns the minimum and maximum values of the given array .
5022	Sets the value of an array to a double .
5023	Creates a new CatalogBuilder .
5024	Factory a ProjectionImpl .
5025	Unescapes a DAP identifier from a string .
5026	URL decodes a string using UTF - 8
5027	Unescapes the given URL .
5028	Backslash escapes a string .
5029	Unescapes a backslash .
5030	Tokenize escaped name .
5031	Returns the index of the specified character in the escaped name .
5032	Backslash a string to a DAP string .
5033	Reads an atom scalar .
5034	Returns the path of the given cursor .
5035	Returns the UI default value for the given class and property .
5036	Gets the javax . swing . J class .
5037	Compiles the D4Cursor .
5038	Compile a structure array .
5039	Compiles the given structure into a D4Cursor .
5040	Compile a sequence array .
5041	Compile a sequence .
5042	Reads a long from the stream .
5043	Returns the field with the given name .
5044	Returns the value of a field .
5045	Sets the value of a field .
5046	Adds a field to the cursor .
5047	Adds a checkbox field .
5048	Adds a date field to this field .
5049	Adds a double field to this field .
5050	Adds an int field to this field .
5051	Adds a password field to this field .
5052	Adds a text field to this field .
5053	Adds a text combo field .
5054	Adds a new TextArea field .
5055	Adds a heading to the layout .
5056	Adds a component to the layout .
5057	Adds an empty row to the layout .
5058	Finds the active frame .
5059	Gets the cell spacing .
5060	Returns the array of factors .
5061	Multiply the elements of this dimension with the elements of that dimension .
5062	Returns an array of factors based on the given power .
5063	Returns true if this dimension is ciprocal of the given dimension .
5064	Returns true if all the factors are dimensionless .
5065	Factory method for Grib1ParamTables .
5066	Factory method for Grib1ParamTables .
5067	Adds a lookup table for a parameter .
5068	Add a parameter table .
5069	Returns the raised unit with the given power .
5070	Converts a float array to a derived unit .
5071	Initializes the unit table .
5072	Creates a vertical variable .
5073	Peek the name of a random access file .
5074	Grabs a short from the byte array at the given offset .
5075	Grabs an int from the given byte array at the given offset .
5076	Reads a float from the given byte array at the given offset .
5077	Grabs a double from the byte array at the given offset .
5078	Converts a name to an alias .
5079	Adds a symbol and name .
5080	Converts a Unit to a Converter .
5081	Sets the structure data .
5082	Sets the point feature data .
5083	Draws a pixel .
5084	Returns an iterator of the GisFeatureRenderer s shapes .
5085	Processes an input stream .
5086	Reads a buffer from the input stream .
5087	Reads more bytes from the stream .
5088	Reads a byte array from the stream .
5089	Skips the specified number of bytes .
5090	Adds dimensions to a NetcdfFile .
5091	Returns the coord index of a record .
5092	Returns true if the given file is a valid file .
5093	Open a random access file .
5094	Reads the data from a variable .
5095	Read a single row of data .
5096	Create a gridarray from a NetcdfDataset .
5097	Creates a base type for a variable .
5098	Fire map area event .
5099	Sets the map area .
5100	Set the map area for the given LatLonRect .
5101	Sets the lat - lon center map area .
5102	Sets the projection .
5103	Adds the actions to the given menu .
5104	Redraws the image after the specified delay .
5105	Create a new screen size .
5106	Sets the selected variable .
5107	Returns the double value at the given offset .
5108	Returns the double value for the given index .
5109	Returns the value at the given index .
5110	Gets the sector ID .
5111	Reads a scaled integer from a ByteBuffer .
5112	Finds a parameter by its name ignoring case .
5113	Returns true if the current odometer has the next odometer .
5114	Swap byte order .
5115	Gets the number of time steps per file .
5116	Gets the file name .
5117	Returns a list of file names .
5118	Returns the DDF path .
5119	Returns the full path for the given filename .
5120	Adds a new chsub .
5121	Converts a reference date to a TimeCoordIntv value .
5122	Reads a WMO from a random access file .
5123	Returns a copy of the uncompdata at the given offset .
5124	pcode_12n13n14 pcode_12n13n14
5125	Returns the pcode for the circle packet .
5126	Checks the header of the nids product .
5127	pcode_5 .
5128	pcode_128 pcode_128 pcode_128
5129	pcode_10n9 .
5130	Returns an array of unsigned integers for a given level .
5131	Gets the pol levels for a given th .
5132	Adds a variable to a file .
5133	Adds a parameter to a file .
5134	Uncompresses a ByteBuffer .
5135	Converts a byte array to a UINt .
5136	Converts a byte array to an integer .
5137	Converts a byte array to an object .
5138	Executes the DAP4ENDIANTAG query and sets the constraint .
5139	Gets the request state .
5140	Sends an error to the server .
5141	Returns true if the given point is an anchor .
5142	Stretches a point .
5143	Returns the bounds of this rectangle .
5144	Returns a new rectangle with the last bounds of this rectangle .
5145	Parses a date - only formatted string .
5146	Method replaceDataVars .
5147	Ensure array size is okay .
5148	Read a 2 - byte integer from a random access file .
5149	Read a uint from a random access file .
5150	Reads a 3 - byte integer from a random access file .
5151	Read a 2 - byte integer from a random access file .
5152	Reads a 3 - byte int from a random access file .
5153	Read a 4 - byte integer from a random access file .
5154	Returns the 4 - byte float of a b c d
5155	Reads an 8 - bit integer from a random access file .
5156	Counts the number of bits in a byte array .
5157	Constructs a copy of this projection .
5158	Returns a WKS representation of this sphere .
5159	Escapes an entity from a string .
5160	Backslash unescapes a string .
5161	Splits a string by a backslash .
5162	Creates a FmrcInv from the given formatter .
5163	Returns the service special for the given path .
5164	Returns the number of projected components .
5165	Gets the reference time .
5166	Factory method for ArrayStructureBB .
5167	Main entry point for Lucene .
5168	Read a Grib1Record from the Grib1IndexProto .
5169	Checks if the given NetcdfFile is a mine file .
5170	Creates a UTM projection for the given data set .
5171	Re - acquires the area file .
5172	Returns true if the given date is before the given date .
5173	Returns true if the given date type is before the given date type .
5174	Returns true if the given date is after the given date .
5175	Sets the value of the template .
5176	Adds a coordinate system to the variable .
5177	Sets the unit string .
5178	Returns the unit value as a string .
5179	Initializes this thread .
5180	Reads a catalog .
5181	Processes a list of datasets .
5182	Reads the catalogs in a directory .
5183	Returns true if lon is between lonBeg and lonEnd
5184	Converts a lat to a string .
5185	Converts a lon to a string .
5186	Compares two BaseQuantities .
5187	Returns the selected dataset node .
5188	Sets the selected dataset .
5189	Creates a new tree path for the given node .
5190	Opens all catalogs .
5191	Sets the catalog for the given location .
5192	Sets the catalog .
5193	Returns the alias for the given variable .
5194	Write a VInt to the stream .
5195	Writes the specified number of characters to the specified string .
5196	Reads a number of characters from the input stream .
5197	Sets the debug flags .
5198	Adds a member to the list .
5199	Hides a member .
5200	Returns a list of member names .
5201	Returns the member with the given name .
5202	Reads a bitmap from a random access file .
5203	Restore the state of the table .
5204	Returns an iterator of the selected rows in the table .
5205	Returns the index of the model .
5206	Returns the member data as an array .
5207	Gets the scalar double .
5208	Returns an array of doubles from a structure .
5209	Gets the scalar float .
5210	Gets a float array from a structure .
5211	Gets the scalar byte .
5212	Returns a byte array containing the contents of the given structure .
5213	Gets the scalar int .
5214	Returns an array of ints for the given structure member .
5215	Gets the scalar short .
5216	Returns an array of shorts from a structure .
5217	Gets the scalar long .
5218	Returns an array of longs from a structure .
5219	Returns the scalar character for the given member .
5220	Returns the char array for the given structure member .
5221	Writes a single DIF file to the output stream .
5222	Checks if the given InvDataset is useable .
5223	Creates a copy of this dataset .
5224	Transfers metadata from a DatasetNode to another DatasetNode .
5225	Returns the ThreddsMetadata in the set or creates one if it does not exist .
5226	Adds a product to the grid .
5227	Show missing data .
5228	Returns the missing summary .
5229	Finds a record for a given time and level .
5230	Dumps the data into a string .
5231	Creates a long name from the first record .
5232	Returns a subset of this coord axis .
5233	Returns true if the two byte arrays are equal .
5234	Parses a DMR document .
5235	Processes the attributes of the given dataset .
5236	Adds a list of coordinates to the partition collection .
5237	Sets the gaussian latitudes .
5238	Parse a variable section spec .
5239	Converts a list of ranges to a string .
5240	Returns true if we are in box 9 .
5241	Closes the connection .
5242	Executes the HTTP method .
5243	Identify the encoding station .
5244	Matches an axis type and dimension .
5245	Sets the input stream .
5246	Reads a character from the stream .
5247	Starts a new task .
5248	Parse a string to a URI .
5249	Creates a URI exclude .
5250	Returns null if the given string is null .
5251	Canonically joins a prefix and a suffix .
5252	Returns true if the dataset has been modified .
5253	Copies the information from the given gribCollectionMutable to this one .
5254	Returns a list of file names .
5255	Sets the indexRaf .
5256	Returns the index filepath in the cache .
5257	Closes the index .
5258	Returns the number of counters .
5259	Adds a global attribute .
5260	Adds a global attribute with the given name and values .
5261	Deletes the global attribute with the given name .
5262	Renames a global attribute .
5263	Add a variable attribute .
5264	Add a variable attribute .
5265	Delete a variable attribute .
5266	Rename a variable attribute .
5267	Makes the file sub - type .
5268	Write the headers and BB to the file .
5269	Writes the members of the geometry .
5270	Writes the STATION OBS dataset XML .
5271	Writes the XML representation of the collection to the output stream .
5272	Write a DSR .
5273	Send a DXR request .
5274	Write an error to the output stream .
5275	Closes the stream .
5276	Flushes the stream .
5277	Constructs a copy of this projection .
5278	Returns true if the specified want is contained in this list false otherwise .
5279	Returns the element at the specified index .
5280	Shifts the origin of this range .
5281	Reads the data from the RAF at the specified index .
5282	Reads data from a Layout .
5283	Returns a subset of this vector .
5284	Returns an iterable of catalogs .
5285	Cleans up the database before the given tracker number .
5286	Sets the values of this object to the given values .
5287	Gets a DataChunkIterator without a filter .
5288	Creates a double array from the given int array .
5289	Gets the dataset boundaries .
5290	Checks that the requested variables are contained in the dataset .
5291	Returns a DatasetSourceStructure with the given name .
5292	Gets the resource path from the request .
5293	Creates the vertical dimensions .
5294	Read a PIB from a random access file .
5295	Finishes the task .
5296	Transfers the InvDatasetImpl to its parent .
5297	Transfers the metadata from this InvDataset to this InvDataset .
5298	Transfers inheritable metadata from Ds to target .
5299	Sets the contributors .
5300	Adds a dataset at the given index .
5301	Removes a dataset from this catalog .
5302	Replaces the given InvDataset with the given InvDataset .
5303	Adds a service to the list of services .
5304	Remove a service .
5305	Sets the list of local InvServices .
5306	Removes the local metadata .
5307	Returns the user property for the given key .
5308	Validates this dataset .
5309	Returns a list of descriptors .
5310	Constructs the server path for the given request .
5311	Gets the capabilities for a geometry .
5312	Get a feature .
5313	Check parameters for error .
5314	Handles a http request .
5315	Returns the capabilities for the given URL .
5316	Returns the length of the object summary .
5317	Returns the last modified date .
5318	Creates a DapDataset from the given DapDataset .
5319	Returns a file .
5320	Sends a string to the server .
5321	Sets the response content length .
5322	Returns the request URI for the given request .
5323	Gets the request path .
5324	Returns the query string for the given request .
5325	Returns the parameter with the given name ignoring case .
5326	Saves the contents of this file to disk .
5327	Writes a directory to the response .
5328	Sets the bit offset for the given data descriptor .
5329	Creates a new BitCounterUncompressed from the given data descriptor .
5330	Count the number of bits in a row .
5331	Appends a line to the text .
5332	Creates a Document for a StationTimeSeriesFeatureCollection .
5333	Gets the documentation for the capabilities .
5334	Gets the record at the given subset parameters .
5335	Returns the coordinate at the given index .
5336	Adds an item to the list .
5337	Handles a Throwable .
5338	Returns the slice for the specified index . If the index is less than or equal to this rank an IllegalArgumentException is thrown .
5339	Returns the step between the first and last position .
5340	Gets the ncepGenProcess .
5341	Check if the given endpoint is a cdmrf endpoint .
5342	Sets the value to the given type .
5343	Factory grib1 gds .
5344	Copies the contents of an InputStream to an OutputStream .
5345	Reads the contents of an InputStream into a String .
5346	Reads the contents of an input stream to a byte array .
5347	Writes the contents of a string to an output stream .
5348	Copies the contents of a file to an output stream .
5349	Copies a raf to an output stream .
5350	Copies a directory tree from one directory to another .
5351	Reads a file to a byte array .
5352	Reads a file .
5353	Writes the contents to a file .
5354	Writes the contents to a file .
5355	Writes the contents of an input stream to a file .
5356	Parse an exception handler .
5357	Handle DAP2 exceptions .
5358	Sends a bad URL page .
5359	Gets the catalog .
5360	Prints the catalog for this server .
5361	Prints the status of the request .
5362	Prints a bad URL page .
5363	Gets the date referenced by this calendar object .
5364	Read vlen data .
5365	Reads a NetcdfDataset NcML collection .
5366	Opens a NcmlCollectionReader .
5367	Generates a string that allows the specified character to be replaced with the specified replace character .
5368	Cleans up a byte array .
5369	Filter a string based on the okChars .
5370	Filter a string for 7 bits .
5371	Makes a valid cdm object name .
5372	Matches s1 with s2 .
5373	Pads a string to the left .
5374	Pads a string to the right .
5375	Removes a substring from a string .
5376	Removes a character from a string .
5377	Removes a character from the end of a string .
5378	Collapses all whitespace characters in a string .
5379	Replaces a string with a new string .
5380	Replaces a character in a string with a new character .
5381	Replaces a pattern with a value .
5382	Substitutes a string with a new string .
5383	Substitutes a match with a subst .
5384	Removes a string from a StringBuilder .
5385	Unreplaces a character from a StringBuilder .
5386	Replaces a string with a new string .
5387	Substitutes a match with a subst .
5388	Removes bad characters from a string .
5389	Process a collection update event .
5390	Checks the current state .
5391	Updates the collection with the given force .
5392	Show Unique GDS and PDS templates .
5393	Returns a list of InvDatasets .
5394	Releases the proxy .
5395	Creates a deep copy of the given StructureData .
5396	Copies the given ArrayStructure to an ArrayStructureBB .
5397	Copy a Structure to an ArrayStructureBB .
5398	Copy a StructureData to an ArrayStructureBB .
5399	Copies a StructureData to an ArrayStructureBB .
5400	Gets the forecast time interval size in hours .
5401	Computes the section of a range .
5402	Factory method to create a TableAnalyzer .
5403	Returns the first feature type in the table .
5404	Analyzes a feature type .
5405	Synchronizes this ncfile with the current ncfile .
5406	Gets the gaussian latitudes .
5407	Swaps a byte array for a long .
5408	Swaps a byte array into a float .
5409	Swaps a byte array for a char .
5410	Override this method to find the coordinate axes .
5411	Adds a parameter to a file .
5412	Returns the common parent of this group and the given group .
5413	Returns true if this group is the parent of another group .
5414	Sets the parent group .
5415	Adds a dimension to the group .
5416	Adds a dimension to the group if it does not already exist .
5417	Adds a group to this group .
5418	Adds an enumeration to this enumeration .
5419	Adds a variable to this group .
5420	Removes a dimension by its name .
5421	Make a relative group from a file .
5422	Convert DDSAliasFields to DASAliasFields .
5423	Prints a DAS object .
5424	Returns the variable with the given name .
5425	Write a grid .
5426	Replace missing values with a float .
5427	Replace missing values and scale .
5428	Gets the x start coordinate .
5429	Writes a grid to the map .
5430	Writes the xml response .
5431	Returns the nc_inq_libvers string .
5432	Creates the top index file from the config .
5433	Get the grib collection type from a random access file .
5434	Method updateGribCollection .
5435	Updates the leaf collection .
5436	Open a grib collection from a random access file .
5437	Create an immutable GribCollection from a data file .
5438	Open a Grib collection from a data file .
5439	Checks if a URL matches a pattern .
5440	Adds a new triple to the list .
5441	Returns the value for the given key or null if the key does not exist .
5442	Sets the well known triple .
5443	Loads the rc file .
5444	Inserts a triple into the triplestore .
5445	Returns a list of local datasets .
5446	Finds a Dataset by its name .
5447	Sets the project .
5448	Returns an iterator of the shapes of the AffineTransform .
5449	Makes the shapes from the iterator .
5450	Compares a string to an ID .
5451	Start the ProgressMonitorTask .
5452	Checks if a partition needs to be updated .
5453	Normalizes an EnsCoord .
5454	Sets the value of the object at the given index .
5455	Returns the StructureData at the given index .
5456	Copies a set of structures to a result .
5457	Gets a scalar object .
5458	Converts a scalar to a double .
5459	Converts a scalar value to an integer value .
5460	Gets the scalar float .
5461	Gets the scalar byte .
5462	Gets the scalar short .
5463	Gets the scalar character .
5464	Gets the scalar string .
5465	Returns the ArrayStructure for the given Recnum .
5466	Returns the ArraySequence for the given Recnum .
5467	Gets an ArrayObject from the Structure .
5468	Returns the minimum and maximum value .
5469	Evaluate a variable .
5470	Returns a string representation of this constraint .
5471	Returns true if this node references this node .
5472	Returns true if the given variable matches the given criteria .
5473	Returns the number of expansion variables in the given structure .
5474	Compute the enums .
5475	Compute the groups .
5476	Compiles a constraint from a string .
5477	Checks if the given random access file is a valid file .
5478	Makes the actions system .
5479	Returns the byte order for a given kmachn .
5480	setByteOrder Method .
5481	Finds the key with the given name .
5482	Find the DMFileHeader with the given name .
5483	Returns the file header with the given name .
5484	Prints the parts .
5485	Returns the data pointer for a given row or column .
5486	Reads a random number from a file .
5487	Reads a DM_RSTR from a file .
5488	Converts a DMPart into a DM_UNPK .
5489	Converts a bit int into a string .
5490	Writes a file to a WritableByteChannel
5491	Parse a base element .
5492	Parse a grid element .
5493	Parse the aliases .
5494	Decodes a list of data descriptors .
5495	Replicates a list of data descriptors .
5496	Returns the filename of the dataset .
5497	Gets the CF feature type .
5498	Returns true if a is nearly equal to b .
5499	Returns true if this node references the given node .
5500	Parse a unit specification .
5501	Probes an object .
5502	Checks if the variable is tiled .
5503	Makes the best time from a complete time .
5504	Converts a LatLonRect to a ProjectionRect .
5505	Shows a list of TimeSeries objects .
5506	Creates a map from a list of attributes .
5507	Returns the array of values for this data type .
5508	Returns the numeric value at the given index .
5509	Writes a CDL file .
5510	Sets the value of the attribute .
5511	Sets the values of this attribute .
5512	Sets the values of an array .
5513	Performs a scan of the database .
5514	Generates the catalog for the proxy DsResolver .
5515	Schedules the write of a message .
5516	Set the thredds datatype .
5517	Jump to thredds datatype .
5518	Jump to thredds data type .
5519	Sets the dataset .
5520	Prepares the GUI .
5521	Creates the tools frame .
5522	Converts a list of coordinate axes to a name .
5523	Returns the lesser of two axes .
5524	Finds the axis with the given type .
5525	Returns the projection of this coordinate transform .
5526	Returns true if the axis is a geo - x - y axis .
5527	Check if this axis is a regular axis .
5528	Returns true if the given set is a subset of the given collection .
5529	Checks if the list of wantAxes contains any of the wantAxes .
5530	Checks if an axis with the given name exists .
5531	Checks if the given list of dimensions contains a domain .
5532	Returns true if the list contains any of the given axes .
5533	Returns true if this axis contains the given axis type .
5534	Clone a DAG node .
5535	Returns the selected bean .
5536	Returns a list of selected beans .
5537	Returns a list of selected cells .
5538	Sets the selected bean .
5539	Restores the state of the table .
5540	Creates a new UnknownUnit with the given name .
5541	Closes this method and all its superclasses .
5542	Returns true if the given variable is an extra .
5543	Checks if the variable is a coordinate .
5544	Finds the coordinate axis .
5545	Adds the data variables to the table .
5546	Adds the parent join for the given Cursor .
5547	Creates a station feature .
5548	Creates a new node map .
5549	Creates a simple unit with the given name .
5550	Returns a new SimpleUnit with exceptions .
5551	Converts a String to a Unit .
5552	Returns true if unitString1 is compatible with exceptions .
5553	Checks if the given unit is a date unit .
5554	Returns true if the given string is a time unit .
5555	Gets the conversion factor .
5556	Converts a double value to an output unit .
5557	Returns true if this is a known unit .
5558	Returns the value of this unit .
5559	Creates a new top - level clause for a rel operation .
5560	Create a new BooleanFunctionClause .
5561	Creates a new BTF function clause .
5562	Creates a grayscale image .
5563	Crawls a catalog .
5564	Crawls the given InvDataset .
5565	Crawls a direct set of catalogs .
5566	Returns the file or cache for the given file location .
5567	Gets the existing file or cache .
5568	Sets the debug leaks .
5569	Returns a list of all files .
5570	Closes the file .
5571	Seeks a position in the buffer .
5572	Flushes the buffer .
5573	Reads the contents of a file .
5574	Reads a short from the stream .
5575	Reads an int from the stream unbuffered .
5576	Reads an int from the stream .
5577	Reads a long from the stream .
5578	Reads a float from the stream .
5579	Reads a double from the stream .
5580	Reads a string from the stream .
5581	Reads a maximum number of bytes from the stream .
5582	Writes a boolean array .
5583	Writes a short to the stream .
5584	Writes a character array to the stream .
5585	Writes a single int to the stream .
5586	Writes a long to the stream .
5587	Writes a float array to the stream .
5588	Writes a double array .
5589	Write a string as a byte array .
5590	Writes a byte array to the stream .
5591	Searches for a KMPMatch and returns true if it is found .
5592	Appends a query to a StringBuffer .
5593	Factory method .
5594	Finds the index .
5595	Checks if the given index reader is a leaf .
5596	Constructs a list of children from the given index .
5597	Scan for children .
5598	Read a list of MFiles from an index .
5599	Gets the gridsets .
5600	Acquires a FileCacheable from a file factory .
5601	Removes a file from the cache .
5602	Ejects an object from the cache .
5603	Releases a file from the cache .
5604	Returns a 4 - digit int .
5605	Updates the element in the cache .
5606	Clears the cache .
5607	Make a vertical transformation .
5608	Returns true if this is a global lon .
5609	Returns true if the z axis is positive .
5610	Finds the x y index from a coordinate .
5611	Finds the x y index from a bounding box .
5612	Find XY index from lat lon .
5613	Find XY index from lat lon bounded .
5614	Returns the position of the selected item .
5615	Returns the item of the specified pixel .
5616	Iterate over a collection of MFiles .
5617	Get remote logs .
5618	Returns the name of the subcenter .
5619	Converts a string to a CalendarPeriod . Field .
5620	Creates a CalendarPeriod from the given value and field .
5621	Constructs a CalendarPeriod from a udunit .
5622	Subtracts the start date from the end date .
5623	Gets the convert factor .
5624	Gets the value in milliseconds .
5625	Returns the offset between two dates .
5626	Synchronizes the raf .
5627	Initialize the tables .
5628	Adds a date to the tree set .
5629	Finds the longest path that matches the given request path .
5630	Finds the data root for the given request path .
5631	Converts a DataRoot to a DataRoot .
5632	Gets the value of the CalendarDateRange property .
5633	Reindex a list of coordinates .
5634	Creates a new NetcdfFileWriter .
5635	Adds a group to the ncfile .
5636	Adds an enumeration to the given group .
5637	Delete an Attribute from a Group .
5638	Rename an attribute in a group .
5639	Adds the record structure .
5640	Aborts the spiw operation .
5641	Writes the properties of this bean to a PrintWriter .
5642	Extract the ThreddsMetadata from the given ThreddsDataset .
5643	Divides an OffsetUnit into two Units .
5644	Converts the given amount to a derivative unit .
5645	Converts the given amount from a derivable unit to the given amount .
5646	Converts a top - level variable to a nested variable .
5647	Convert a top - level variable to an array .
5648	Convert a DodsV object to an array .
5649	Closes all databases .
5650	Opens the database .
5651	Converts an integer to a period .
5652	Ensures that the array has the minimum capacity .
5653	Gets the value at the specified index .
5654	Creates a catalog for a directory .
5655	Makes a proxy ds resolver catalog .
5656	Returns the coordinate type .
5657	Factory method for grib2pds .
5658	Calculates the time from the given start index .
5659	Applies the given scale factor to the given value .
5660	Parse a local concept .
5661	Adds a local concept to the input stream .
5662	Cleans a line .
5663	Stores a concept .
5664	Writes the grib1 tables .
5665	Writes a lookup table file .
5666	Shows the local concepts .
5667	Main method for ecmwf .
5668	Returns the dataset source type for the given name .
5669	Expands the access point dataset .
5670	Expands the InvCatalog .
5671	Calls nameDatasets on each dataset in the container .
5672	Attempts to name a dataset .
5673	Names a dataset tree .
5674	Loads the image from the image URL and rotates it .
5675	Stop loading the source image from the cache except for the given URL .
5676	Called when the status of a source image has changed .
5677	Sends a progress notification to all scalable image listeners .
5678	Creates a scaled picture in a thread .
5679	Returns the size of the scaled image .
5680	Gets the scaled size string .
5681	Returns a list of merged parts .
5682	Creates the header for a GempakStation .
5683	Returns a list of SN_CKUA types .
5684	Checks for a valid group .
5685	Sets the root directory .
5686	Creates the root directory .
5687	Returns the cache file for the given location .
5688	Cleans the cache .
5689	Cleans the disk cache .
5690	Returns true if fxy is a Bufr table .
5691	Factory method to create a new coordinate axis .
5692	Returns a copy of this axis with no cache .
5693	Returns true if the data type is numeric .
5694	Gets information about the axis .
5695	Gets the calendar from the attribute .
5696	Sets the row list .
5697	Returns the selected row .
5698	Increments the number of rows that have been selected .
5699	Gets the model index .
5700	Sets the selected index .
5701	Quick sort .
5702	Swaps two strings .
5703	Returns the file with the given name if it exists .
5704	Rotate a matrix .
5705	Creates an XMLStore from a file .
5706	Creates an XMLStore from an input stream .
5707	Creates an XMLStore from a resource .
5708	Creates a standard filename for an XML store .
5709	Saves the XMLStore to a temp file .
5710	Saves the preferences .
5711	Writes an atom variable to a serial writer .
5712	Write a structure to a serial writer .
5713	Writes the structure to the SerialWriter .
5714	Writes a sequence to a SerialWriter .
5715	Write a record to a SerialWriter .
5716	Checks if a random access file is valid .
5717	Gets the wmoID .
5718	Read a row from a data input stream .
5719	Returns the data at the specified index .
5720	Gets the data from a random access file .
5721	Returns a 41 - byte array from a random access file .
5722	Read a scalar variable from a list of slices .
5723	Creates a CFGrid file .
5724	Make an estimate of the size of a grid file .
5725	Creates a new date range file .
5726	Sets the list of stations .
5727	Sets the selected station .
5728	Picks a station from the grid .
5729	Picks the nearest station in the grid .
5730	Gets the selected station .
5731	Returns the proj name for the given type .
5732	Returns a list of the positions in the given bounding box .
5733	Gets the station with the given name .
5734	Returns a DataIterator for the given station .
5735	Get a DataIterator for a given start and end date .
5736	Reads data from a random access file .
5737	Returns the dot value for the given vector .
5738	Returns the norm .
5739	Normalizes the number of nelems .
5740	Sets all the services in the given iterable .
5741	Returns the Grib1Parameter with the given id .
5742	Returns the local parameter with the given id .
5743	Adds a name to the name set .
5744	Adds a symbol to the symbol set .
5745	Gets a prefix from a string .
5746	Returns true if the source email is OK .
5747	Returns the value of the parameter with the given name .
5748	Calculates the CRC .
5749	Returns true if the data is thin .
5750	Returns the index of the field with the given name .
5751	Gets the time type name .
5752	Returns the time coordinate .
5753	Sets the next polygon .
5754	Sets the previous polygon .
5755	Finds the property with the given name .
5756	Sets the current projection .
5757	Creates a CoordAxis from the given SubsetParams .
5758	Register an IOProvider for the given class name .
5759	Registers an IOServiceProvider .
5760	Registers an IOServiceProvider for a given class .
5761	Checks if an IOServiceProvider is registered for the given class .
5762	Deregister an IOServiceProvider .
5763	Returns true if the file at the given location can be opened .
5764	Opens a NetcdfFile in memory .
5765	Opens a NetcdfFile in the memory .
5766	Opens a file in memory .
5767	Open a NetcdfFile from a URI .
5768	Finds the global attribute with the given name ignoring case .
5769	Writes the given url to a NcML document .
5770	Writes a CDL file to the output stream .
5771	Writes a CDL document .
5772	Writes a CDL document .
5773	Adds an attribute to a group .
5774	Adds an attribute to a group .
5775	Adds a group to the given parent .
5776	Adds a dimension to the given parent group .
5777	Removes the specified dimension from the specified group .
5778	Adds a variable to the given group .
5779	Adds a new variable to this group .
5780	Adds a string variable to the given group .
5781	Removes a variable from the given group .
5782	Sends an IOSP message .
5783	Makes the record structure .
5784	Finishes the transformation .
5785	Reads a variable section .
5786	Read a variable to a byte channel .
5787	Reads a list of arrays from the stream .
5788	Reads a variable section from a file .
5789	Creates a full name for the given node .
5790	Make a full name with a string .
5791	Checks if a file should be included .
5792	Checks if a file should be excluded .
5793	Returns true if the given file is accepted by the filter .
5794	Appends a value to the attribute .
5795	Dispatches a check value .
5796	Forces the given value to be of the given type .
5797	Checks if the given string is a Byte value .
5798	Checks if the given string is a short value .
5799	Checks if the given string is an integer .
5800	Checks if the attribute value is valid .
5801	Checks if the given string is a valid float .
5802	Checks if the given string is a double .
5803	Returns the data type for the given attribute .
5804	Returns true if the dataset is viewable .
5805	Checks if the given string is a valid boolean string .
5806	Returns true if the given string is a valid alphanumeric string .
5807	Returns true if the given string is a valid alphanumeric string constrained set .
5808	Returns true if the given path is only a file path .
5809	Converts a unicode code point to a percent hexadecimal string .
5810	Returns the value of a parameter .
5811	Compares two GridDefRecords .
5812	Processes the input stream .
5813	Processes a buffer .
5814	Removes quotes from a string .
5815	Marks the given Stack as stacked variables .
5816	Writes ncml .
5817	Get value from thredds config .
5818	Writes a CDL string .
5819	Creates the station helper .
5820	Validates the access point header .
5821	Returns the azimuth of the message .
5822	Returns the elevation of this message .
5823	Returns the latitudes of the rays .
5824	Returns the longitudes of the rays .
5825	Returns the altitudes of the rays .
5826	Gets the azimuths of the rays .
5827	Returns the elevations of the rays .
5828	Selects a structure from a list of variable names .
5829	Selects a variable .
5830	Adds a member variable .
5831	Sets the member variables .
5832	Sets the parent group of this variable .
5833	Calculates the element size .
5834	Reads a structure at the given index .
5835	Reads a structure from the file .
5836	Returns a StructureDataIterator for the given buffer size .
5837	Returns the data category for the given category .
5838	Gets the class name .
5839	Adds a new parameter .
5840	Gets the header .
5841	Converts a LatLonRect to a ProjectionRect .
5842	Returns the version of the given convention name .
5843	Gets the z axis positive .
5844	Deletes the file .
5845	Sets the color scale parameters .
5846	Renders the plan view .
5847	Returns true if this group is a child of that group .
5848	Returns the message type with the given name .
5849	Installs the view in all columns of the table .
5850	Sets the api_key and api_secret .
5851	Creates a label from a string .
5852	Creates a label for a list of lines .
5853	Creates a new HTML label with the given value .
5854	Connect to CloudSql instance .
5855	List cloud sql ip types .
5856	Creates a new connection to the server .
5857	Removes a logger from the logger list .
5858	Compiles all the source code .
5859	Compiles the given source code into the given class name .
5860	Adds a source code to the compiler .
5861	Reads the graphic control expression .
5862	Returns the next frame .
5863	Returns the SelectableStringList property .
5864	Initializes the list events .
5865	Returns the person with the given id .
5866	Adds a validator to the list of messages .
5867	Sets the person id .
5868	Create and inject view model .
5869	Creates a ViewModel for the given ViewType .
5870	Loads the list of countries .
5871	Loads the list of ISO3166_2 country entities .
5872	Adds a new field to this bean .
5873	Adds an immutable field to this bean .
5874	Creates a JavaViewStep .
5875	Creates a new fxml view step .
5876	Clears the given map .
5877	Creates the index events .
5878	Accesses a member .
5879	Loads a fxml view tuple .
5880	Creates the fxml path .
5881	Query for a style row .
5882	Returns the pixel value of the image at the specified coordinates .
5883	Gets the pixel values from an image .
5884	Validate the image type .
5885	Creates an image with the specified tile width and height .
5886	Sets the tile data for a bitmap .
5887	Performs a raw query on the database .
5888	Wraps a query in a CursorResult .
5889	Returns the result of a query .
5890	Returns the result of a query .
5891	Handles a cursor .
5892	Returns the feature row for the given geometry index .
5893	Register a table with the GeoPackage .
5894	Retrieves the tile row at the specified zoom level .
5895	Get the coverage data for a tile .
5896	Gets the coverage data .
5897	Gets the coverage data .
5898	Gets the TileMatrixResults from the request .
5899	Gets the results zooming in or out .
5900	Gets the results zoomed in .
5901	Gets the results zooming out .
5902	Get the tile matrix from the coverage data request .
5903	Returns the value of the tile at the specified x and y coordinates
5904	Sets the icon for the given geometry type .
5905	Returns the icon for the given geometry type .
5906	Opens or gets the SQLite database .
5907	Converts a byte array to a bitmap .
5908	Converts a bitmap to a byte array .
5909	Creates the table metadata .
5910	Delete a geometry table .
5911	Get or create the table metadata for the given geo package and table name .
5912	Returns the id of a GeoPackage .
5913	Creates the table metadata for the given Cursor .
5914	Creates a new extension .
5915	Returns the feature row for the given cursor .
5916	Creates a user - custom cursor based on a raw query .
5917	Performs a query on a bounding box .
5918	Returns a query for a geometry envelope .
5919	Counts the number of elements in the given geometry envelope .
5920	Executes a query on a user - defined cursor .
5921	Builds the where string .
5922	Returns a query result for a feature bounding box .
5923	Returns the number of features in the bounding box .
5924	Returns the query result for the given geometry envelope .
5925	Query for feature ids .
5926	Counts the number of objects in the specified range .
5927	Sets the data in the given bitmap to the given format .
5928	Sets the data in the given bitmap to the given format and quality .
5929	Sets the bitmap compression configuration .
5930	Get the number of tiles in the tile grid .
5931	Adjusts the bounding box .
5932	Adjust the Google bounds .
5933	Adjust the GeoPackageBoundsWGS84 .
5934	Adjust the geo package bounds .
5935	Returns the bounding box for the tile grid at the given zoom level .
5936	Get the tile grid for the specified zoom level .
5937	Query for a tile row
5938	Query for a tile at a given zoom level descending
5939	Gets the closest zoom level for the tile of the specified length .
5940	Gets the approximate zoom level .
5941	Query for a tile grid with the specified zoom level
5942	Delete a tile .
5943	Count the number of tiles at the given zoom level .
5944	Is GoogleTiles boolean .
5945	Gets the pixel value from the image .
5946	Gets the pixel values for a TIFF image .
5947	Validate the image type .
5948	Creates an image for the given tile width and height .
5949	Sets the pixel value for the given image .
5950	Get a GeoPackage or open it if it doesn t exist .
5951	Returns the current row .
5952	Moves the cursor to the next invalid column .
5953	Query by feature id .
5954	Delete a geometry type by base id .
5955	Returns a rectangle with the specified bounding box and section .
5956	Returns a rounded rectangle with the specified bounding box and bounding box section .
5957	Delete missing databases .
5958	Creates and closes the GeoPackage connection .
5959	Checks if the database is valid .
5960	Validate database and close on error .
5961	Validates the database and closes it .
5962	Validates the SQLiteDatabase .
5963	Validate database header .
5964	Checks if the database header is valid .
5965	Adds a collection of databases to the context .
5966	Adds the external databases .
5967	Import a GeoPackage from a database .
5968	Returns the GeoPackageMetadata for the given database .
5969	Returns the GeoPackageMetadata at the given path .
5970	Creates a new GeometryMetadata object .
5971	Populate the GeometryMetadata object .
5972	Delete a GeoPackage .
5973	Creates or updates a GeometryMetadata .
5974	Updates the GeometryMetadata .
5975	Returns the number of objects in the bounding box .
5976	Create a GeometryMetadata object from a Cursor .
5977	Updates the table with the given values .
5978	Draws a tile .
5979	Returns a list of rows for the given ids .
5980	Checks the integrity of a cursor .
5981	Returns the user mapping dao for the given table name .
5982	Gets the SimpleAttributesDao .
5983	Returns a list of mappings for a given base id .
5984	Gets the mappings for a related relation .
5985	Returns true if the table has a mapping with the given base and related id .
5986	Returns the number of objects in the cursor .
5987	Register a cursor wrapper .
5988	Creates a UserCustomDao from a table .
5989	Gets the tile from the request bounding box .
5990	Draws a tile .
5991	Reproject a tile .
5992	Retrieves the tile results for the given tile matrix .
5993	Calculates the draw overlap .
5994	Sets the density of the feature .
5995	Sets the line paint .
5996	Sets the paint for the polygon .
5997	Draw a tile at the specified x y and zoom level
5998	Draws a tile at the specified zoom level .
5999	Draw tile query index bitmap .
6000	Returns the number of features in the tile at the specified zoom level .
6001	Query the feature index count .
6002	Query the feature index for features at the specified coordinates .
6003	Query the bounding box for feature indexes .
6004	Draw a tile query for all features .
6005	Converts a list of points to a list of points .
6006	Gets the point paint for the feature style .
6007	Gets the line paint for the feature style .
6008	Gets the polygon paint for the feature style .
6009	Gets the polygon fill paint .
6010	Get the style paint for a feature style .
6011	Get the style paint for a style row .
6012	Gets the paint for a style row .
6013	Returns the feature paint for the given style id and type .
6014	Adds a bitmap to an icon row .
6015	Creates a bitmap from an icon row .
6016	Returns a ContentValues quote wrapper .
6017	Creates a bitmap .
6018	Recycles the bitmap .
6019	Returns the bitmap for the given layer .
6020	Gets the canvas for the given layer .
6021	Creates a bitmap and a canvas .
6022	Get a StyleMappingDao for a table and feature table .
6023	Gets the styleDao .
6024	Gets the icon dao .
6025	Get the feature styles for a feature table .
6026	Get the style for a feature table .
6027	Get the style for a feature table .
6028	Returns the icons for a feature table .
6029	Returns the icon row for the feature table .
6030	Returns the feature styles for the given feature row .
6031	Get the feature styles for a feature .
6032	Returns the style for a feature row .
6033	Returns the icons for the given feature row .
6034	Get the styles for a feature id .
6035	Returns the icons for a feature id .
6036	Sets the feature styles for the table .
6037	Set the table style for the feature table .
6038	Set the table icons .
6039	Sets the feature styles for a feature row .
6040	Sets the feature styles for a feature .
6041	Sets the style for a feature row .
6042	Sets the style for a feature .
6043	Sets the style for the feature row .
6044	Sets the default style for the feature row .
6045	Sets the default style for the feature table .
6046	Sets the icons for a feature row .
6047	Sets the icons for a feature .
6048	Sets the icon of the feature row .
6049	Sets the default icon for a feature row .
6050	Sets the default icon for a feature .
6051	Returns the id of the style or inserts it if it doesn t exist .
6052	Gets or inserts the icon from the icon row .
6053	Insert a style mapping .
6054	Delete the feature table style mapping .
6055	Deletes the icon for a feature table .
6056	Delete the feature table mappings .
6057	Delete the feature table mapping .
6058	Delete a style mapping .
6059	Get all table style ids for a feature table .
6060	Get all icon ids associated with a feature table .
6061	Returns all the style ids associated with a feature table .
6062	Returns all icon ids associated with a feature table .
6063	Gets the image bytes .
6064	Flushes the output stream .
6065	Returns the pixel value for the specified coordinates .
6066	Reads the pixels from the image .
6067	Draw a feature .
6068	Draw a line path .
6069	Draw a polygon path .
6070	Add a LineString to the TileBoundingBox
6071	Adds a polygon to the map .
6072	Returns the cache for the given table name .
6073	Remove a feature row .
6074	Clears and resizes the cache .
6075	Returns the styles for the cached table .
6076	Returns the cached table icons .
6077	Gets the RTreeIndexTableDao .
6078	Sets the width of the column .
6079	Sets the column s height .
6080	Returns the derived dimensions of this bitmap .
6081	Calculates the density of a tile .
6082	Read blob value .
6083	Read a user custom table from a GeoPackage connection .
6084	Returns the current color or the default if no color exists .
6085	Validate the color .
6086	Creates a new color with the specified hex color and opacity .
6087	Returns the GeoPackageManager instance for the given context .
6088	Sets the progress of the GeoPackage .
6089	Returns the index of the feature .
6090	Index a feature row .
6091	Delete a feature index .
6092	Delete a feature index .
6093	Delete a feature index .
6094	Delete a feature index .
6095	Returns true if the feature is indexed .
6096	Gets the indexed types .
6097	Query for feature index results .
6098	Counts the number of features in the feature table .
6099	Returns the bounding box .
6100	Query for feature indexes .
6101	Gets the indexed type .
6102	Gets the internal file .
6103	Gets the internal file path .
6104	Gets the geometry type .
6105	Sets the geometry type .
6106	Checks if the given URL has a bounding box .
6107	Replaces the x y z coordinates with the given z coordinates .
6108	Checks if the given url has the X - Y axis .
6109	Replaces the bounding box with a new one .
6110	Method replaceBoundingBox .
6111	Get the GeoPackage geometry data .
6112	Index a feature row .
6113	Update the last indexed time .
6114	Deletes the index .
6115	Delete a feature index .
6116	Returns true if the feature is indexed .
6117	Returns the query cursor for this feature .
6118	Returns the query cursor for the feature bounding box .
6119	Returns the number of features in the bounding box .
6120	Returns the query cursor for the given geometry envelope .
6121	Count the number of features in the given geometry envelope .
6122	Returns the query cursor for a bounding box .
6123	Returns the number of features in the bounding box .
6124	Gets the feature bounding box .
6125	Returns the geometry metadata for the given cursor .
6126	Returns the feature row for the given cursor .
6127	Get a feature row .
6128	Get the TileDaos for a feature table .
6129	Gets the feature daos for a tile table .
6130	Returns the bounding box for the feature tiles .
6131	Query by ids .
6132	Returns a list of unique base ids .
6133	Returns a list of unique related ids .
6134	Delete by base id .
6135	Delete by related id .
6136	Delete by ids .
6137	Build where ids .
6138	Create a new GeoPackageMetadata object .
6139	Delete a database .
6140	Rename a GeoPackageMetadata .
6141	Rename a column name .
6142	Get all GeoPackageMetadata .
6143	Returns the GeoPackageMetadata for the given database .
6144	Returns the GeoPackageMetadata with the given id .
6145	Get or create a GeoPackageMetadata .
6146	Returns true if the database is external .
6147	Returns the GeoPackageMetadata at the given path .
6148	Gets metadata where name like .
6149	Gets metadata where name not like .
6150	Get metadata where name like .
6151	Creates the GeoPackageMetadata for the given Cursor .
6152	Called when a new view is created .
6153	Adds a ParallaxView to the list of ParallaxViews .
6154	Creates a new view .
6155	Creates a custom view .
6156	Adds the given logging event to the given CyclicBuffer .
6157	Finds the configuration file from the system properties .
6158	Returns the URL of the given file or null if not found .
6159	Auto - configures Joran .
6160	On resource search status .
6161	Converts a SocketAddress to a String
6162	Creates a new thread pool executor .
6163	Starts the converters .
6164	Sub - appends the given event to the current file .
6165	Adds a substitution property .
6166	Returns the value of the property with the given key .
6167	Compiles the given node using the given converter map .
6168	Returns the next node in the tree .
6169	Returns a node representing the current token .
6170	Escapes a character in a string buffer .
6171	Converts a fixed date to a regular date .
6172	Starts the evaluator .
6173	Ends the evaluator .
6174	Initializes the logger with the given key .
6175	Creates a new instance of the ContextSelector .
6176	Setup the properties .
6177	Returns the path to the external storage directory where media is mounted .
6178	Returns the directory path of the database .
6179	Returns the absolute path of the given file .
6180	Evaluates the given logging event .
6181	Returns the discriminating value for the given logging event .
6182	Updates the mask if necessary .
6183	Gets the filter chain decision .
6184	Creates the key managers .
6185	Creates the trust managers .
6186	Creates a KeyStoreFactoryBean based on the system properties .
6187	Gets the location from the system property .
6188	Gets the URL for a resource .
6189	Returns true if the given head is a ThrowableHandler .
6190	Stops the logback context .
6191	Print in case of errors or warnings .
6192	Prints the error status of the given context if any .
6193	Prints the status of the given context with the given threshold .
6194	Handles throwable first line .
6195	Gets the entry from either map or lingerers map .
6196	Removes a key from the map and adds it to lingerers .
6197	Creates a FormatInfo object from a string .
6198	Renames the source file to the target file .
6199	Checks if srcFile and targetFile are on different volumes .
6200	Returns the environment for the given key .
6201	Returns the Android system property for the given key .
6202	Sets the MDC property map .
6203	Outputs the MDC for all keys .
6204	Extract a stack trace from a throwable .
6205	Checks if the current class is in the framework space list .
6206	Adds a new status to the list .
6207	Add a status listener .
6208	Lookup an implicit action .
6209	Gets the applicable action list .
6210	Sets the class loader .
6211	Returns the value for the specified key or null if the key does not exist .
6212	Returns a boolean value for the specified key .
6213	Decapitalizes a name .
6214	Returns an array of MethodDescriptors for the given class .
6215	Gets the property descriptors for the given class .
6216	Starts the appender .
6217	Adds an OnConsoleStatusListener instance to the context .
6218	Pops a property definer from the stack .
6219	Returns the discriminating value for the given logging event .
6220	Returns true if the log level is INFO_INT .
6221	Starts the shutdown hook .
6222	Ends the shutdown hook .
6223	Returns a list of enabled protocols .
6224	Enables or disables the specified cipher suites .
6225	Returns the included and excluded strings .
6226	Converts a string to a scope .
6227	Sets the properties for the given scope .
6228	Adds a new appender .
6229	Removes an appender from the list .
6230	Removes an appender by its name .
6231	Handles a parent level change .
6232	Calls the appenders for the given event .
6233	Detaches the given appender from the log .
6234	Creates a child logger by the last part name .
6235	Calls the turbo filters at the given level .
6236	Log a slf4j event .
6237	Creates and returns a new socket .
6238	Creates the parent directories of the given file if it does not exist .
6239	Converts this level to an integer .
6240	Converts a value to a Level .
6241	Gets the resource occurrence count .
6242	Retrieves a resource from the given classloader .
6243	Returns the ClassLoader for the given object .
6244	Gets the class loader as privileged .
6245	Returns the ClassLoader for the given class .
6246	Starts the tag encoder .
6247	Returns the tag for the given logging event .
6248	Starts the substitution process .
6249	Returns the index of a separator .
6250	Evaluates the given logging event .
6251	Returns the client thread name for the given socket .
6252	Checks if two files are on the same file store .
6253	Start the javax . mail . Session .
6254	Appends the given event object to the event tracker .
6255	Sends a CyclicBuffer to the server .
6256	Add a MDCValueLevelPair .
6257	Creates a converter for the given keyword .
6258	Creates a composite converter for the given node .
6259	Determines the compression mode to use .
6260	Configures the given URL .
6261	Configures a file .
6262	Configures the input stream .
6263	Builds the interpreter .
6264	Register current configuration as safe fallback point .
6265	Configures the sax interpreter .
6266	Returns the property for the given key .
6267	Sets the name of the context .
6268	Returns true if the given context has a status listener .
6269	Returns the time since the last reset .
6270	Starts the parser .
6271	Gets the effective converter map .
6272	Gets the file header .
6273	Returns the file footer .
6274	Starts the appender .
6275	Ends the appender with the given name .
6276	Returns a copy of the clients .
6277	Adds a client .
6278	Removes a client .
6279	Returns a copy of the context map .
6280	Gets the value of a method .
6281	Gets the TurboFilterChainDecision .
6282	Returns true if the device is Android OS .
6283	Initializes the logger context .
6284	Returns a list of files in a folder that match the given stem regex .
6285	Retrospectively prints the status .
6286	Convert a string representation of a facility to an integer representation .
6287	Returns the database file for the given filename .
6288	Clear expired logs .
6289	Checks if the last check has expired .
6290	Sub - appends a logging event to the insert statement .
6291	Sub - appends a logging event to the database .
6292	Bind a logging event to a SQLite statement .
6293	Converts an object to a string transcribed to 254 characters .
6294	Compute the reference mask for the given logging event .
6295	Merges the logger context and mdc properties .
6296	Inserts an exception into the statement .
6297	Returns the length of the prefix match .
6298	Returns the effective level .
6299	Sets a property .
6300	Checks if the given class is unequivocally instantiable .
6301	Returns the child value of the given parent value or null if parent value is null .
6302	Process include .
6303	Opens a URL .
6304	Trims the head and tail of a SaxEventRecorder .
6305	Returns true if the server should start .
6306	Returns true if the error is a transient error .
6307	Sets the default hosts .
6308	Ensures the local index .
6309	Synchronizes the data selection queries .
6310	Synchronizes this mirror if it hasn t already been synchronized .
6311	Waits for a task to be published .
6312	Lists the indexes offline .
6313	Converts an InputStream to a char array .
6314	Converts an input stream to a byte array .
6315	Consumes the contents of an HttpURLConnection quietly .
6316	Returns a list of hosts that are up .
6317	Sets the type of this query .
6318	Starts the index .
6319	Puts a value into the cache .
6320	Returns the value associated with the given key .
6321	Awaits completion of all threads .
6322	Compares two versions .
6323	Reports an exception to the agent .
6324	Copies a directory to a new directory .
6325	Initializes the SimulatorProperties .
6326	Returns the value of a static field .
6327	Gets a method by its name .
6328	Formats a percentage value .
6329	Formats a double .
6330	Formats a long .
6331	Reads a json syntax character .
6332	Returns the hexadecimal value of a byte .
6333	Writes a JSON string to the transport .
6334	Writes a json integer .
6335	Writes a json double .
6336	Reads a json string .
6337	Read json numeric characters .
6338	Reads a json integer from the stream .
6339	Reads a json double .
6340	Reads a base64 encoded JSON string .
6341	Executes a method call .
6342	Invokes a request .
6343	Enqueue a method call .
6344	Gets resource from FSPath .
6345	Updates the decorator .
6346	Refresh the repository view .
6347	Gets the resource history view .
6348	Opens an editor .
6349	Report authentication failure .
6350	Returns the AuthPromptResults for the given authentication server .
6351	Creates the default page .
6352	Starts the server thread .
6353	Sets whether this element should be kept alive or not .
6354	Sets whether this element should be omitted or not .
6355	Sets the element s owner .
6356	Adds a condition factor .
6357	Create a ConditionTerm from a StreamTokenizer .
6358	Returns true if the given condition term matches this one .
6359	Returns the dsl content for the given rule source and resource .
6360	Loads the dsl config from the given input file .
6361	Reads the configuration from the given input stream .
6362	Returns the menu for the given control .
6363	Adds a response .
6364	Adds a new href .
6365	Inserts a new href before the current href .
6366	Removes a href from the tree .
6367	Adds a property stat .
6368	Returns the element s href .
6369	Returns the status of this element as a string .
6370	Gets the stack frame for the given value .
6371	Returns true if class1 is a subtype of class2 .
6372	Returns true if the given proposal contains a new proposal .
6373	Clone a node .
6374	Resets the input stream .
6375	Creates the action definitions .
6376	Adds a connection to the pool .
6377	Returns the value of a property .
6378	Removes a connection .
6379	Declarative Services method for setting the location .
6380	Sets the value of a property .
6381	Sets the size of the container .
6382	Dumps a set of constraints to a String .
6383	Adds a new lock entry .
6384	Adds a vertex to the list of vertices .
6385	Removes a child of this vertex .
6386	Starts the ipreference store .
6387	Stops the plugin .
6388	Returns the resource string for the given key .
6389	Gets the resource bundle .
6390	Gets the rule builder form colors .
6391	Sets the date - time pattern .
6392	Sets the date time .
6393	Creates an error status with the given message and throwable .
6394	Logs an error .
6395	Adds a field editor .
6396	Adjusts the grid layout .
6397	Applies the font to all fields .
6398	Calculates the number of columns .
6399	Initializes the field editor .
6400	Fire a PropertyChangeEvent to all registered listeners .
6401	Sets the active editor for the given part .
6402	Contribute to the toolbar .
6403	Determines the dialect for the given text .
6404	Creates a new context for the given locator .
6405	Saves a progress monitor to a file .
6406	Creates the table listeners .
6407	Creates the table .
6408	Adds a value to a URL .
6409	Adds a value to the table .
6410	Adds a token to this node .
6411	Adds a child node to this node .
6412	Sets the file .
6413	Adds a condition to the list of conditions .
6414	Adds a condition for a state token .
6415	Returns true if this condition matches the given condition .
6416	Returns the first child of the property .
6417	Returns the status of the element .
6418	Sets a property .
6419	Returns the last line of the backText .
6420	Gets the last non - ash line .
6421	Binds the given id to the given string .
6422	Binds two strings together .
6423	Binds a message to a bundle .
6424	Creates the example . bpmn file
6425	Creates a JUnit for a process example .
6426	Gets the runtime id .
6427	Visits a rete .
6428	Visits a node .
6429	Returns the dot id of the given object .
6430	Adds the remove property .
6431	Adds a set .
6432	Creates a new locator .
6433	Gets the presentation reconciler .
6434	Returns true if the given object is the same as the given object .
6435	Returns true if the given condition term contains the given condition term .
6436	Create a ConditionFactor from a StreamTokenizer
6437	Adds the pages to the DRLRuleEditor .
6438	Executes a HTTP DELETE request .
6439	Executes a HTTP POST request .
6440	Get the status of a job .
6441	Executes the pull operation .
6442	Handles pull results .
6443	Sets the value at the given index .
6444	Adds an active lock .
6445	Filter proposals on prefix .
6446	Reads a document backwards .
6447	Returns a RowList containing all the vertices that are connected to the given root .
6448	Paints the specified Graphics object .
6449	Returns the edit part for the given model element .
6450	Returns the image descriptor for the given path .
6451	Declares an image in the image registry .
6452	Adds a vertex at the specified depth .
6453	Returns the row containing the given vertex .
6454	Returns the width of the row .
6455	Dumps the vertices .
6456	Optimizes the table .
6457	Loads the RETE model .
6458	Initializes the graph viewer .
6459	Draw a new graph .
6460	Returns the DroolsBreakpoint for a given source .
6461	Sets the href .
6462	Returns true if the client can talk DAV .
6463	Copy a collection of property names to a destination .
6464	Examines a multi status response .
6465	Extracts the prop stats from a multistatus .
6466	Returns a ResponseInputStream containing the content of the request .
6467	Returns an enumeration of active locks .
6468	Returns the property with the given name .
6469	Returns the DAV context .
6470	Locks a document .
6471	Moves an enumeration of properties to a new location .
6472	Checks in to the DAV .
6473	Refresh a lock .
6474	Removes a collection of properties .
6475	Removes a property .
6476	Sets the content of an input stream .
6477	Sets a collection of properties .
6478	Sets a property .
6479	Unlocks a lock token .
6480	Updates the document with the given version .
6481	Implementation of version control .
6482	Deletes the DAV .
6483	Examines the status code .
6484	Returns true if the given property has a child with the given name .
6485	Writes the request body to the output stream .
6486	Converts a byte array to a hexadecimal string .
6487	Converts an array of integers to a hexadecimal string .
6488	Set is all property .
6489	Set is property name .
6490	Sets a property .
6491	Strips the last word from a string .
6492	Updates the tree .
6493	Writes the contents of the input stream to the output stream .
6494	Steps over the current stack frame .
6495	Marks the parser errors .
6496	Skips all whitespace characters .
6497	Adds a resource to guvnor .
6498	Commits changes to a file .
6499	Returns the value of the age string .
6500	Gets the content length .
6501	Returns the maximum forwards .
6502	Returns true if overwrite is true or false otherwise .
6503	Gets the passthrough .
6504	Returns the timeout .
6505	Adds a value to the properties .
6506	Sets the timeout .
6507	Open a DSLF file .
6508	Parse a file .
6509	Returns the metadata for the given string .
6510	Removes the metadata from a string .
6511	Adds a list of tokens to the tree .
6512	Returns the condition children for the given text .
6513	Returns the child nodes for the given object and text .
6514	Adds a child node to a list .
6515	Prints the tree .
6516	Prints a node .
6517	Print tabs .
6518	Reads a JsonValue from a string .
6519	Returns the image descriptor for the given id .
6520	Invokes the webDAVFactory on the given request .
6521	Sets the request header field .
6522	Create the rule sample launcher .
6523	Create a rule file .
6524	Creates the rule flow .
6525	Create the rule flow sample launcher .
6526	Returns a list of selected IInstallableUnits .
6527	Creates an image from an output stream .
6528	Returns the field name of this node .
6529	Returns the evaluator for this node .
6530	Returns the value of this node as a String .
6531	Add guvnor resource properties .
6532	Perform baseline control .
6533	Binds the given member to the given source .
6534	Returns the locator for the given member name .
6535	Optimizes the vertices .
6536	Initializes the controls .
6537	Validate the page .
6538	Generates an EntityTag .
6539	Returns the opposite vertex for the given vertex .
6540	Validate otps .
6541	Check if YubiKey belongs to the right user .
6542	Get the user name for the given publicId and filename .
6543	Add yubikey to user .
6544	Verify OATH OTP .
6545	Clears the password .
6546	Returns the public id for the given OTP .
6547	Checks if the given string is a valid OTP format .
6548	Creates an evaluation from the given node and source object .
6549	Creates a new evaluation .
6550	Clears the cache for all methods .
6551	Returns true if the annotation is java . lang . annotation .
6552	Returns the package name of the given object .
6553	Returns the package name of a class .
6554	Returns the unique descriptor for the given object .
6555	Returns the class of the given argument .
6556	Checks if two classes are more specific .
6557	Returns the appropriate method for the given source object .
6558	Returns the value of the given property in the given object .
6559	Gets the property descriptors for the target class .
6560	Gets a PropertyDescriptor from an array of PropertyDescriptors .
6561	Gets the read method for the given target class and name .
6562	Reads a character from the stream .
6563	Projects the JJTPROJECT expression .
6564	Selects all nodes in the tree .
6565	Parse a long value .
6566	Returns the double value of the given value .
6567	Returns a BigInteger representation of the given value .
6568	Returns a BigDecimal representation of the given value .
6569	Returns a string representation of the given value .
6570	Returns the numeric type of the given value .
6571	Converts a value to a given type .
6572	Converts an object to an integer .
6573	Returns the numeric type of two integers .
6574	Gets the numeric type of two objects .
6575	Creates a new Integer .
6576	Pops the evaluation .
6577	Generate ognl getter .
6578	Generate ognl setter .
6579	Flattens the tree .
6580	Initializes this node with the given object .
6581	Escapes a character from the image .
6582	Sets the root of the container .
6583	Returns the value associated with the given expression .
6584	Sets the value of an expression .
6585	Sets a value for a tree .
6586	Returns true if the expression is a constant .
6587	Gets the default watch service id .
6588	Waits for the server to start .
6589	Reads a file as a string .
6590	Reloads the current application class loader .
6591	Returns the archiver with the given name .
6592	Checks the archiver for problems .
6593	Reads a file as a string .
6594	Creates the ant project .
6595	Adds a system property .
6596	Adds a system property .
6597	Opens a new folder dialog .
6598	Changes the contents of a directory .
6599	Refreshes the state of the button .
6600	Creates a FileObserver .
6601	Returns the selected folder .
6602	Creates a new folder .
6603	Checks if the file is a valid file .
6604	Starts a background job .
6605	Starts the list .
6606	Ends an ordered list .
6607	Handles a move .
6608	Returns a new rectangle containing the top and bottom of this rectangle .
6609	Computes the layout .
6610	Register RTEditTextListener and RTMediaFactory .
6611	Adds a span watcher .
6612	Gets the spinner view .
6613	Returns the drop down view for the spinner at the given position .
6614	Converts a Spanned Text to an RTHtml .
6615	Computes the spans between two paragraphs .
6616	Creates a unique file .
6617	Determines the original file for the given URI .
6618	Returns the namespace for the given name .
6619	Returns the local name for the given name .
6620	Sets an attribute .
6621	Sets the value of an attribute .
6622	Returns the font name for the given file path .
6623	Gets the font name .
6624	Need a new buffer .
6625	Writes a byte array to the buffer .
6626	Writes a byte to the buffer .
6627	Reads a number of bytes from the given InputStream .
6628	Writes the contents of this buffer to the given OutputStream .
6629	Returns a new byte array containing the contents of this buffer .
6630	Sets the font size .
6631	Replaces windows separators with UNIX separators .
6632	Recompute the focus of a MotionEvent .
6633	Ensure that the highlight view is visible .
6634	Centers this view based on the highlight view .
6635	Resets the document locator .
6636	Validate a string .
6637	Creates a new element type .
6638	Set an attribute for a given element type .
6639	Sets the parent element for the given name .
6640	Returns the element type with the given name .
6641	Returns the entity with the given name .
6642	Cleans up the paragraphs of an RTEditText .
6643	Applies the given value to the given selection .
6644	Returns true if the given domain is valid .
6645	Executes the given operation on the given editor .
6646	Redo the given RTEditText .
6647	Replaces all occurrences of the given search string with the given replacement string .
6648	Gets or creates a new thread status .
6649	Sets the decoding options for the thread .
6650	Returns true if the given thread can be decoded .
6651	Decodes a file descriptor .
6652	Returns a sorted set of RTTypefaces for the given context .
6653	Returns a map of all the fonts in the AssetManager .
6654	Returns the system fonts .
6655	Sets up the HTML schema .
6656	Returns a reader for the given input source .
6657	Returns an input stream for the given publicid and systemid .
6658	Adds an adup attribute to the new element .
6659	Expands the entities in a string .
6660	Looks up an entity in the schema .
6661	Restarts the stack .
6662	Pops the content handler .
6663	Performs a restart of the SAX stack .
6664	Returns the prefix of the given name .
6665	Returns true if the prefix and namespace are foreign .
6666	Trims quotes from a string .
6667	Splits a string into an array of strings .
6668	Attempts to rectify the given Element .
6669	Makes a name from a char array .
6670	On save instance state .
6671	Unregisters the RTEditText editor and removes it from the toolbars .
6672	Handles a main thread event .
6673	On event main thread .
6674	Returns the correct base matrix for the given bitmap .
6675	Returns the maximum zoom value .
6676	Checks if the RTEditText exists in the selection .
6677	Find spans and remove them from the given paragraph .
6678	Encodes a URL .
6679	Decodes a query from a URL .
6680	Picks a directory for the given request code .
6681	Rotates the image to the specified degree .
6682	Sets the output stream .
6683	Writes a character to the output stream .
6684	Write a string to the output stream .
6685	Returns true if the given value is a boolean attribute .
6686	Writes a UTF - 16 encoded string .
6687	Writes the NSDecls .
6688	Writes a name to the SAX file .
6689	Creates a new stream if it does not exist .
6690	Wait for a stream to be activated .
6691	Complete store snapshot with missing instance snapshots .
6692	Waits the minimum waiting time for the next provisioning request .
6693	Returns a list of all records in the shard .
6694	Perform AmazonAction with retry .
6695	Tries an Amazon action with a minimal duration between two get shard iterator requests
6696	Checks if a bucket is accessible .
6697	Loads the entity stores from the snapshot .
6698	Triggers a wildcard expansion .
6699	Replaces inString with newPattern .
6700	Delete any character in a string .
6701	Adds a resource lint report .
6702	Method updatePropertiesWithConfiguration .
6703	Returns the config properties .
6704	Creates an InputStream for the autodetected wro file .
6705	Converts a pre - processors map to a post - processors map .
6706	Compiles a Rhino script .
6707	Reload the cache with a new value .
6708	Reloads the model with a new value .
6709	Gets the wrapped servlet request .
6710	Creates a transformer that transforms a base name into a suffix .
6711	Called when an error is detected .
6712	Sends a redirect to the given location .
6713	Process a resource .
6714	Creates an expand handler for a resource .
6715	Locates the given URI using the given locator .
6716	Creates the WroConfiguration .
6717	Registers the listeners to be notified when the value of a model is changed .
6718	Process a request .
6719	Sets the WroConfiguration .
6720	Identifies duplicate group names .
6721	Merges the imported model with this model .
6722	Locates the object with the given URI .
6723	Applies the post processors to the content .
6724	Decorate a processor .
6725	Process a resource .
6726	Splits an option string into an array of options .
6727	Loads the properties from the given input stream .
6728	Parse properties .
6729	Creates a custom WroManagerFactory .
6730	Persist resource fingerprints .
6731	Returns true if the given group is a target group .
6732	Extends the plugin classpath .
6733	Gets the model resource as stream .
6734	Initializes the WroManagerFactory .
6735	Sets the list of model transformers to use .
6736	Compiles the given content with the given name .
6737	Processes a list of resources and merges them into a single string .
6738	Processes and merges a list of resources .
6739	Runs the processing in parallel .
6740	Applies the pre processors to a resource .
6741	Decorate a ResourcePreProcessor .
6742	Persists the fallback storage .
6743	Returns all fields of the given object .
6744	Rewrites the given css url and image URL .
6745	Compute the new image location based on the css url and image url .
6746	Add a model transformer .
6747	Serves the processed bundle .
6748	Initializes the aggregated folder path .
6749	Extracts the variables from a variable body .
6750	Parse css .
6751	Replaces all the variables in the given map with new ones .
6752	Converts a ResourcePostProcessor to a ResourcePreProcessor .
6753	Returns true if the resource type is eligible .
6754	Do gzip response .
6755	Creates a PathPatternProcessorDecorator to include the given patterns .
6756	Create a PathPatternProcessorDecorator to exclude the given patterns .
6757	Creates a new ResourceChangeHandler .
6758	Remembers a resource .
6759	For each CSS import apply .
6760	Filter a collection of objects .
6761	Returns true if the request is minimized .
6762	Returns a list of imported resources .
6763	Compute absolute resource url .
6764	Converts a list of items to a string .
6765	Gets the alias list .
6766	Creates the context .
6767	Evaluates the given source name using the given reader .
6768	Evaluates a JavaScript object .
6769	Processes the resource bundle .
6770	Checks if request is a handler request .
6771	Create handler request path .
6772	Renames a group .
6773	Computes the destination folder for the given resource type .
6774	Process a group .
6775	Check if a change is required for a given group .
6776	Locates an InputStream from the given URI .
6777	Creates a new object pool .
6778	Locates a stream from a jar file in the specified folder .
6779	Opens a JAR file .
6780	Extracts the path from the given URI .
6781	Returns true if the request is minimized .
6782	Adds a list of locators to the list of locators .
6783	Creates a DefaultWroModelFactoryDecorator to decorate a WroModelFactory .
6784	Adds a string to the list of requirements .
6785	Processes the given content .
6786	Logs a summary of the errors found .
6787	Called when a resource is processed .
6788	Returns a ReadWriteLock for the given key .
6789	Creates a process from the given source file .
6790	Parse properties .
6791	Gets the task info .
6792	Returns the compilation command .
6793	Parse a header .
6794	Adds the no - cache headers .
6795	Gets path info from location .
6796	Gets servlet path from location .
6797	Checks if the given path matches the given request URI .
6798	Loads a regexp pattern from a property file .
6799	Safely copy the contents of a Reader to a Writer .
6800	Creates a temporary file .
6801	Cleans the image URL .
6802	Sets the given attribute to the given object .
6803	Generate data URI .
6804	Generate data URI .
6805	Sets the WroConfiguration .
6806	Unsets the correlationId .
6807	Checks if the cache has changed .
6808	Called when an exception occurs .
6809	Checks if a resource has changed .
6810	Updates the hash for the specified group .
6811	Checks if there are resources of the given type .
6812	Creates a new process .
6813	Encodes a serializable object to a string .
6814	Process group elements .
6815	Parse a group .
6816	Creates a new group .
6817	Parse a resource .
6818	Returns the resources for the given group .
6819	Logs a timer .
6820	Stops a named timer .
6821	Gets a named timer .
6822	Gets a named timer .
6823	Prints aggregated saturation statistics .
6824	Wake up the workers .
6825	Updates the number of processed workers in the given snapshot .
6826	Updates the finished jobs .
6827	Updates an AtomicInteger if it is larger than the given value .
6828	Returns null if the rule does not exist .
6829	Insterts a property into a taxonomy .
6830	Ensures that the axiom loading is completed .
6831	Restores the saturation .
6832	Returns true if the classification is inconsistent .
6833	Restores the taxonomy of the class .
6834	Restores the instance taxonomy .
6835	Returns the evidence for the given conclusion .
6836	Returns true if this is pre - executed .
6837	Invalidates this ReasonerStage recursively .
6838	Returns the collection of indexes to add .
6839	Returns the collection of individuals to remove .
6840	Creates an UnsupportedOperationException for an OWL API reasoner method .
6841	Removes the element at the given position .
6842	Removes a value from an array .
6843	Returns the position of the first element in the array that has been moved .
6844	Returns true if the given object is contained in the given array .
6845	Adds an element to the given array .
6846	Checks the number of occurrences .
6847	Adds a new timer .
6848	Adds a rule application timer .
6849	Puts a value into an array of keys .
6850	Removes an entry from an array of keys and values .
6851	Enlarges the map .
6852	Shrinks the array of keys and values to a new size .
6853	Saves the configuration to disk .
6854	Prints the declarations for the given class taxonomy .
6855	Returns a set of all instances of the given node .
6856	Clears the cache .
6857	Combine multiple hashes .
6858	Combine a list of hashes into a single hash .
6859	Copy the contents of an input stream to an output stream .
6860	Returns an IncompletenessMonitor for the given IncompletenessMonitor .
6861	Processes a taxonomy .
6862	Submits an input to the buffer .
6863	Appends the given ElkObject to the given Appendable .
6864	Marks the given query class as not computed .
6865	Add a new direct type - node .
6866	Checks that the given fullChain expression matches the given startPos expression .
6867	Returns a new set filtered by the given condition .
6868	Returns a set that maps the elements of the given set using the given functor .
6869	Adds an element to the log .
6870	Removes an object from the log .
6871	Adds a ClassConclusionCounter .
6872	Logs the memory usage for a given logger .
6873	Sets the configuration options .
6874	Shuts down ELK reasoner .
6875	Prints the header .
6876	Prints a list of values .
6877	Converts a char to a string .
6878	Adds a rule counter .
6879	Writes a resource .
6880	Returns the ActionInputParameter with the given name .
6881	Gets the property descriptor for the given property path .
6882	Gets the required parameters .
6883	Returns true if the given class is a single value type .
6884	Adds a REL to the link .
6885	Sets the type of the link .
6886	Add a hreflang .
6887	Adds a new parameter to the link .
6888	Adds a link parameter .
6889	Returns a new Affordance with the given arguments expanded .
6890	Returns the RELs associated with this link .
6891	Returns the list of revs for the link .
6892	Returns true if all required variables are satisfied .
6893	Gets the value formatted .
6894	Returns true if the given property is hidden .
6895	Checks if a property contains an include value .
6896	Returns true if the property has explicit or implicit property include value .
6897	Returns true if the request is required .
6898	Returns the default value for the request parameter .
6899	Gets the parameter name .
6900	Gets the property or parameter name for the given input parameter .
6901	Returns the vocab from the given mixin source .
6902	Returns the query .
6903	Appends a form to the request .
6904	Writes the input button .
6905	Append input or select .
6906	Adds the action descriptor to the affordance builder .
6907	Gets the partial uri template components as components .
6908	Removes optional variables from the template .
6909	Returns the first UberNode with the given name .
6910	Returns the first UberNode with the given rel .
6911	Returns an iterator over all the nodes in the uber tree .
6912	Creates a persistent hash map from an Equator .
6913	Creates a PersistentTreeMap from an Iterable .
6914	Creates a PersistentTreeMap from an empty Comparator .
6915	Returns an im - sorted set of entries .
6916	Returns the last key in the map .
6917	Creates an Xform from an Iterable .
6918	Converts an iterable into a new iterable .
6919	Returns a new Xform that drops while the specified predicate is true . If the predicate is null an IllegalArgumentException is thrown .
6920	Folds the given object using the given reducer .
6921	Constructs a tuple from a map entry .
6922	Matches fa with fb .
6923	Registers a list of classes .
6924	Returns the leaf node at the specified index .
6925	Appends a value to the end of this vector .
6926	Concatenates a list of items into a single vector .
6927	Returns a mutable set of items .
6928	Returns a mutable list of items .
6929	Returns an im - set containing the specified items .
6930	Converts a list of items to a vector .
6931	Returns an unmodifiable xform of the specified items .
6932	Indents the specified number of spaces .
6933	Returns a string representation of an array of items .
6934	Creates a lazy reference to a function .
6935	Returns the value if it is a producer or null .
6936	Inserts an item into the array at the specified index .
6937	Creates a copy of an array .
6938	Suspends the transaction if it is assocated with the current thread .
6939	This method is called before an async operation is initiated .
6940	Build a list of ServiceComponentImpl from a jar file .
6941	Validates a directory .
6942	Creates an inheritance link between a concrete class and a super class .
6943	Copies the methods from the source class to the destination class .
6944	Copies the given methods to the given destination class .
6945	Creates a tree from the given FQDN node .
6946	Removes the given SbbEntity with the current class loader .
6947	Returns true if notifications are enabled .
6948	Gets the ra entity links which not exist .
6949	Installs the service component .
6950	Uninstalls a service .
6951	Returns true if the given ra link name is referenced .
6952	Returns the usage parameter sets for the given SbbId .
6953	Reset all usage parameters .
6954	Returns a collection of profiles for the specified profile table .
6955	Gets the profile table activity .
6956	Gets the profile by indexed attribute .
6957	Displays the result .
6958	Unfolds an array .
6959	Executes the given activity handle .
6960	Binds a name to a node .
6961	Unbinds a CACHE node .
6962	Lookup a CACHE node by its name .
6963	Gets the name bindings .
6964	Get the next SbbEntity from the SleeContainer .
6965	Returns true if this TraceLevel is higher than the given TraceLevel .
6966	Extracts a jar file from a directory .
6967	Pipes the input stream to the output stream .
6968	Adds a value to a node .
6969	Attaches a sbb entity to this node .
6970	Detach a sbb entity .
6971	Returns true if no entities are attached to this node .
6972	Returns the set of entities attached to this node .
6973	Attaches a timer to this node .
6974	Detaches a timer from this node .
6975	Returns true if no timers are attached .
6976	Returns the set of timers attached to this node .
6977	Adds a name bound to this node .
6978	Returns true if the given name is unbound .
6979	Returns true if no names are bound .
6980	Returns a copy of the names bound to this node .
6981	Sets the value of a CMP attribute .
6982	Returns the CMP attribute with the given name .
6983	Returns a copy of the CMP attributes .
6984	Initialize the MBeanNotificationInfo .
6985	Sends a usage notification .
6986	Downloads a remote DU file .
6987	Updates the deployed components .
6988	Installs a deployable unit .
6989	Uninstalls a deployable unit .
6990	Process internal uninstall .
6991	Displays the status of the deployment .
6992	Returns true if the given record is a logger .
6993	Returns the logger for the given log record .
6994	Returns the referring components for the given component .
6995	Returns a set of SbbEntityIDs .
6996	Returns the permissions for the current policy .
6997	Returns the code sources for the current policy .
6998	Checks if the profile with the given name exists on the table .
6999	Remove a profile from this MBean .
7000	Method updateConfigurationProperties .
7001	Set the faultTolerantResourceAdaptorContext for the entity .
7002	Called when slee is stopped .
7003	Activates the resource adapter .
7004	Deactivates the resource adapter .
7005	Schedules all activities to end .
7006	Removes the entity from the container .
7007	Returns the resource adaptor interface for the given resource adaptor type .
7008	Called when a service is active .
7009	Derives the ActivityHandle from the given ActivityHandle .
7010	Called when an activity has been terminated .
7011	Updates the ra configuration .
7012	Verify configuration properties .
7013	This method is called when the ra object is stopped .
7014	This method is called when the ra object is in the inactive state .
7015	Unconfigures the ra object .
7016	Unsets the ResourceAdaptorContext .
7017	Unsets the fault tolerant resource adaptor context .
7018	Builds the profile attribute map .
7019	Resumes the execution of the transaction .
7020	Returns the set of ActivityContextHandles for this node .
7021	Removes the MBean from the container .
7022	Returns the MBean value for the specified usage parameter set .
7023	Decorate the abstract class .
7024	Fires an event to the given entity .
7025	Fires an event on a SbbEntity .
7026	Gets the profile CMPMethod .
7027	Gets the SbbUsageParameterSet for the given SbbEntity .
7028	Gets the abstract methods from a class .
7029	Gets interface methods from interface .
7030	Create the object pool for the given profile table .
7031	Removes the object pool for the given profile table .
7032	Checks if the given notification source is the owner of the given alarm .
7033	This method raises an alarm .
7034	Gets the usage parameter set for a profile object .
7035	Gets the event type descriptor .
7036	Checks if the given deployable unit URL accepts the given deployable unit name .
7037	Initializes the deployable unit .
7038	Starts a deployment .
7039	Stops the deployment .
7040	Displays the status of the deployment .
7041	Execute after commit actions .
7042	Execute after commit priority actions .
7043	Execute after rollback actions .
7044	Execute before commit actions .
7045	Execute before commit priority actions .
7046	Returns the list of defined tracers .
7047	Creates a new tracer .
7048	Removes the replicated data .
7049	Registers the PropertyEditorManager .
7050	Processes a SleeComponent .
7051	Returns the object pool associated with the given SbbID .
7052	Create a new object pool .
7053	Executes the given activity handle .
7054	Starts an activity .
7055	Ends an activity .
7056	Checks that a FireableEventType is installed .
7057	Fires an event on the given handle .
7058	Generate sbb local object concrete class .
7059	Makes this bean a getter .
7060	Converts a string to an object .
7061	Sets the profile ID .
7062	Extracts the message from a string .
7063	Checks if the given object is a Sbb local object .
7064	Returns true if the given collection contains all elements in the child relation .
7065	Removes all elements from the given collection .
7066	Returns true if the given level is higher than the given level .
7067	Read resolve .
7068	Removes all classes from the class pool .
7069	Add a profile call .
7070	Gets the profile object with the specified name .
7071	Passivates a profile object on transaction end .
7072	Sets the ComponentID as a string .
7073	Generates the concrete class for the activity context interface .
7074	Generate concrete methods .
7075	Sets the value of an attribute in the cache .
7076	Adds a name binding .
7077	Remove bindings from the ActivityContextNamingFacility
7078	Removes a name binding from the cache .
7079	Attach a timer to the cache .
7080	Removes all timers from the cache .
7081	Attach a sbb entity to the activity context .
7082	Detaches a sbb entity from the cache .
7083	Gets the sorted SbbAttachmentSet .
7084	Ends an activity .
7085	Adds a DeployableComponent .
7086	Returns the list of external dependencies .
7087	Returns true if all dependencies are satisfied .
7088	Returns true if the deployable unit contains duplicate components .
7089	Gets the install actions .
7090	Gets the uninstall actions .
7091	Checks if a component has a referring DU .
7092	Close the mbean server .
7093	Gets the object name .
7094	Writes a profile to the database .
7095	Method beforeSetCmpField .
7096	Call afterSetCmpField on profile table .
7097	Returns true if the profile table does not contain a cmp field .
7098	Method afterGetCmpField .
7099	Call beforeManagementMethodInvocation on profile table .
7100	Called after management method invocation .
7101	Deletes the given path .
7102	Creates the default constructor .
7103	Create the default usage parameter getter .
7104	Create sbb entity getter and setter .
7105	Create fire event methods .
7106	Create getSbbActivityContextInterface method .
7107	Adds a query expression .
7108	Binds the specified key to the specified target object .
7109	Rebinds the given name to the given target object .
7110	Decorates the Abstract Sbb class .
7111	Invokes a method and returns the result .
7112	Gets the real field name .
7113	Sets the value of a field .
7114	Gets the value of a field .
7115	Sets the profile context .
7116	Initializes the profile .
7117	Unsets the profile context .
7118	Gets the profile local object .
7119	Fires a profile added or updated event if needed .
7120	Gets the profile cmp sleep 10 wrapper .
7121	Creates a class with the given name and interfaces .
7122	Creates the inheritance link for a concrete class .
7123	Adds an annotation to a list of member values .
7124	Adds the member values to the annotation .
7125	Returns the ActivityContextInterface for the given activity object .
7126	Gets the ClassPool for the component .
7127	Sets the deployable unit .
7128	Undeploys this class .
7129	Executes an activity .
7130	Checks if the given interface is an interface .
7131	Returns a map of all methods of a given interface .
7132	Resolve entity .
7133	Checks if the tracer name matches the notification source .
7134	Handles a profile query .
7135	Checks the dependencies of the given SleeComponent .
7136	Creates a temporary DU deployment directory .
7137	Gets the entity manager .
7138	Start the slee .
7139	Switch a ClassLoader to a safe ClassLoader .
7140	Makes a safe proxy call .
7141	Checks the transaction .
7142	Converts a string to a TTL .
7143	Checks if the profile class is visible .
7144	Gets the profile object valid in the current transaction .
7145	Returns a list of logger names for a given regex .
7146	Resets the logger levels .
7147	Clears all registered loggers .
7148	Adds a new logger .
7149	Add a socket handler .
7150	Remove a handler from the logger .
7151	Convert a tracer name to a log4j logger name .
7152	Synchronizes the log4j level with the log4j level .
7153	Assigns the log4j level .
7154	Reset the cache flags .
7155	Sends a notification at the given level .
7156	Checks if the tracer name matches the notification source .
7157	Writes the given vendor data to an ObjectOutputStream .
7158	Reads an object from an ObjectInputStream .
7159	Adds a domain to direct dependencies .
7160	Gets all dependencies .
7161	Finds the class with the given name locally .
7162	Returns the URL of the resource with the given name .
7163	Returns an enumeration of URLs for the given resource name .
7164	Creates and registers a profile MBean .
7165	Resumes a transaction .
7166	Returns a set of SbbIDs for the given component repository .
7167	Returns the resource adapter entity links for the given component repository .
7168	Initializes the slee .
7169	Shuts down the slee .
7170	Validate state transition .
7171	Generate named usage parameter getter .
7172	Sets a value for a field .
7173	Builds a PolyJDBC instance .
7174	Adds a value to the query .
7175	Executes the given operation .
7176	Converts a string to a RegionRequest .
7177	Returns the region of this rectangle .
7178	Resolves the rectangle based on the image dimensions .
7179	Gets the on type .
7180	Sets the viewing hint .
7181	Adds a viewing hint to the resource .
7182	Sets the renderings .
7183	Adds a rendering to the resource .
7184	Merge a list of profiles .
7185	Merges this profile with the given profile .
7186	Converts a String to a RotationRequest .
7187	Creates a size request from a string .
7188	Initializes the ADB connection .
7189	Gets the XML dump .
7190	Handles a pop box .
7191	Push the popbox . jar file to the device .
7192	Delete the qian . xml file .
7193	Pull a qian . xml dump file to a pc .
7194	Gets the crash log .
7195	Detabify the text editor .
7196	Indents the text with the specified spaces .
7197	Returns a collection of HTML tokens .
7198	Marks the given text as marked down .
7199	Escape special characters within tag attributes .
7200	Adds an exception to the list of exceptions .
7201	Closes the statement cache .
7202	Finds the fqcn parent of the given type element .
7203	Write to filer .
7204	Write a BitVector01 divider .
7205	Append bit strings to BitVector .
7206	Reads data from an input stream .
7207	Returns a list of JSON objects from the given path .
7208	Gets a list of TYPEs from a path .
7209	Sets the KlovReporter .
7210	Adds a screen capture to the current step .
7211	Sets the system info for the given key .
7212	Creates a selector for a given property name .
7213	Creates a selector that can be used to select a property .
7214	Extract validation annotation data .
7215	Extracts all annotations for a property .
7216	Returns an array of annotations for the given property .
7217	Returns the property descriptor for the given property name .
7218	Performs a lookup of an object expression .
7219	Creates a new instance of T from a map .
7220	Creates a new instance of the given class from the given map .
7221	Creates a new instance of T from a value map .
7222	Converts an Object to a Map .
7223	Converts an Object to a Map .
7224	Do get values .
7225	Creates a new CompositeValidator .
7226	Lookup the list of validators and initialize them with meta data properties .
7227	Looks up a FieldValidator in the registry .
7228	Apply validation metadata properties to validator .
7229	Removes a property if it is blank .
7230	Ticks the time .
7231	Returns the size of the cache .
7232	Returns the hash code for the given object .
7233	Returns the default options .
7234	Opens a JNI level database .
7235	Puts all values from the given map into the database .
7236	Removes all keys from the database .
7237	Search for a key in the database .
7238	Loads all by keys .
7239	Closes the database .
7240	Reduces an array of doubles by the given object .
7241	Reduces an array of doubles by r .
7242	Returns the variance of a set of doubles .
7243	Returns the mean of an array of longs .
7244	Invokes a method from an object argument .
7245	Returns the sum of the elements in the array reduced by the given reduceBy method .
7246	Converts a timestamp into a UTC system date string .
7247	Returns true if the given object matches the given criteria .
7248	Creates a not - in criterion .
7249	Creates a Criteria object from a List .
7250	Creates a criteria from a JSON string .
7251	Adds an array of doubles .
7252	Returns the maximum value in the array .
7253	Returns the first element of the given list .
7254	Returns the last element of the given list .
7255	Returns the last item of a list .
7256	Returns the least number of elements in the given list .
7257	Returns the minimum value of the given list .
7258	Returns the minimum value in the array .
7259	Process an array of maps .
7260	Handle collection of maps .
7261	Load a class from a map .
7262	Returns the value associated with the given key .
7263	Creates a tooltip with the specified namespace .
7264	Generates the label value .
7265	Adds a hexadecimal character to this sequence .
7266	Processes the read queue .
7267	Processes the write queue .
7268	Starts the data queue process .
7269	Returns the idx of the given character at the given index .
7270	Converts a string to a slash .
7271	Returns true if the given string is in the given char array .
7272	Adds a character to a string .
7273	Adds a list of objects to a string .
7274	Converts a string to a compact string .
7275	Splits a string into a string array .
7276	Splits a string by space .
7277	Splits a string by a pipe .
7278	Converts a char array into a string array .
7279	Converts a string to camel case .
7280	Returns true if start string is inside of inStr and end string .
7281	Returns the underbar case of the given string .
7282	Converts a Number to a String .
7283	Sorts a list of sorts .
7284	Sort a list of fields .
7285	Returns a comparator for the given fields .
7286	Returns a list of child comparators for the given fields .
7287	Returns true if the given value is in the given map .
7288	Returns true if expected was equal to got .
7289	Returns true if the given array equals the given expected array .
7290	Returns the sum of the given array of values .
7291	Rounds a number up to the power of 2 .
7292	Sort a list of fields .
7293	Sorts a list of fields using a universal comparator .
7294	Sets the value of a field from a map .
7295	Converts an object to a List .
7296	Load all version data SQL .
7297	Creates a deep copy of the given list .
7298	Returns true if value1 has a string field with the given name .
7299	Checks if the class has a string field with the given name .
7300	Checks if the class has a field with the given name .
7301	Gets the first comparable or primitive from a class .
7302	Returns the sortable field for the given value1 .
7303	Compares two cache entries .
7304	Compares a CacheEntry s time to another .
7305	Sorts the given list according to the given sort rules .
7306	Sorts a list .
7307	Sorts the entries in the given map according to the component type .
7308	Sorts the values of a Map .
7309	Sorts the keys in the given map according to the component type .
7310	Sorts the given array by ascending and nulls first .
7311	Returns a universal comparator for a field .
7312	Creates a universal comparator that compares two objects in ascending order .
7313	Returns the value associated with the given key .
7314	Returns the cache entry for the given key or null if the key does not exist .
7315	Integer . MAX_VALUE - 100 .
7316	Evicts entries from the cache if needed .
7317	Dynamically initializes a value if it is not already initialized .
7318	Allocates a buffer .
7319	Determines if we should stop the processing .
7320	Manages the input writer channel .
7321	Queues up the pending flushes .
7322	Starts the monitor .
7323	Starts writing to the specified receiver .
7324	Returns the object associated with the given key .
7325	Main query plan .
7326	Do filter group .
7327	Ticks the file timeout .
7328	Synchronizes the output stream to the disk .
7329	Cleans up the output stream .
7330	Write the next buffer to the output stream .
7331	Writes a ByteBuffer to the disk .
7332	Initializes the output stream .
7333	Puts all the values in the given map .
7334	Convert a key to a byte array .
7335	Reads validation metadata from a property file .
7336	Extracts the validator metadata from a string .
7337	Reads the metadata for a given property .
7338	Extract validation metadata .
7339	Extract metadata from annotations .
7340	Converts annotation data to ValidatorMetaData .
7341	Splits a string into a char array .
7342	Split a string by whitespace .
7343	Splits a string by delimiters .
7344	Removes all chars from the given string using the given delimiters .
7345	Splits a string by a number of chars .
7346	Parse a double from a string .
7347	Parse an int from a string .
7348	Parse a long from a string .
7349	Gets a property by its path .
7350	Gets the fields from the given object .
7351	Returns the type of a property .
7352	Injects a value into a property .
7353	Sets the idx property of a class .
7354	Gets a property from a collection or array .
7355	Returns the value of a property from an object .
7356	Gets the value of a property .
7357	Initializes this message .
7358	Creates a message from a list of arguments .
7359	Creates a message .
7360	Converts a list of keys to an array of values .
7361	Returns the current subject .
7362	Parse a JSON string .
7363	Sends a HTTP request .
7364	Deletes a database .
7365	Creates a database .
7366	Returns a list of UUIDs .
7367	Returns a list of all the resources on the given path .
7368	Triggers a replication request .
7369	Query for a value .
7370	Sets the descending value .
7371	Synchronizes all design documents with the database .
7372	Gets a DesignDocument from the database .
7373	Returns a list of all DesignDocument objects from the DesignDesk .
7374	Gets a DesignDocument from the desktop .
7375	Saves this object to the replicator .
7376	Finds a replicator document .
7377	Returns a list of all ReplicatorDocument objects .
7378	Removes a document from the database .
7379	Finds a class by its id .
7380	Returns a list of docs for a given query .
7381	Returns true if the document contains the given id .
7382	Returns a list of bulk docs .
7383	Asserts that the given object is a valid HttpPut object . If the object is not a valid HttpPut object null is returned .
7384	Executes a HTTP PUT request .
7385	Executes a HTTP POST request with the given URI and json .
7386	Performs a HTTP DELETE request on the given URI .
7387	Validates the HTTP response .
7388	Sets the entity .
7389	Adds an attachment to the list of attachments .
7390	Returns a list of changes .
7391	Reads the next row .
7392	Converts a Double to a String .
7393	Shuts down all active locks .
7394	Writes the given byte array to the given output stream .
7395	Adds tags to a metric .
7396	Verify and create temporary tables .
7397	Returns the project id for the given namespace .
7398	Checks if is query .
7399	Send authentication request .
7400	Returns the verb for the given server exchange .
7401	Generate subject access review .
7402	Called when a request result is received .
7403	Called when a request fails .
7404	Initializes the RxSession .
7405	Finds all jobs that are scheduled for the given time slice .
7406	Converts a Buckets to a List .
7407	End an HttpServerExchange
7408	Find all data from bucket .
7409	Creates a new Buckets object from a step .
7410	Sends a message to the producer .
7411	Sends a one way message .
7412	Sends a message with a delay .
7413	Scan a cursor and return a ScanResult .
7414	Sets the value of a property .
7415	Adds a file to the zip file .
7416	Replaces the contents of the given file with the given text .
7417	Builds the import configuration .
7418	Generates metrics for a single component .
7419	Fetch a content resource from the cache .
7420	Fetch the content for the given order item .
7421	Upload a transformation to a link container .
7422	Generates a FileGenerationMetrics for the given components .
7423	Creates a new file in the given directory .
7424	Adds an object to the end of the list .
7425	Registers a model adaptor for a group .
7426	Register a renderer for the given type and attribute .
7427	Prepares a template .
7428	Adds a domain object to the assembler .
7429	Sets a property .
7430	Adds a child object to the given collection .
7431	Creates a Supplier from a directory .
7432	Copies the contents of an InputStream to an OutputStream .
7433	Parse a document from a file .
7434	Parse an XML document from a Reader .
7435	Returns a stream of all elements in the given parent element .
7436	Returns a Stream of nodes in the given element .
7437	Gets the first child element .
7438	Returns a Stream of all named elements in the given parent element .
7439	Validates an XML schema .
7440	Starts the builder .
7441	Converts an InputStream to a ContentBuilder .
7442	Creates a ContentBuilder from a resource .
7443	Processes the given entry and returns the result .
7444	Encodes a string with ascii characters .
7445	Sets the signature for the given access key .
7446	Removes whitespace from a char array .
7447	Signs the request .
7448	Sets the recorder for the given object key .
7449	Completes a multipart upload .
7450	Invokes the action with the given request and response .
7451	Adds a notification state to the request .
7452	Returns true if the timeout has expired .
7453	Gets a notification .
7454	Gets the addressees for a notification .
7455	Gets the addressee DTO for the given notification .
7456	Gets the list of events associated with the given notification .
7457	Gets the event for the given notification .
7458	Returns a URL for a single notification .
7459	Returns the JpaEntry with the given id .
7460	Gets the authentication token .
7461	Returns the size of the notification category .
7462	Adds the categories to the list .
7463	Fetch a NotificationResponse object .
7464	Creates a NotificationError object from the given error message .
7465	Maps a portlet request to a notification response .
7466	Map a NotificationEntry to a NotificationEntry .
7467	Attaches the notification actions to the request .
7468	Normalizes a link .
7469	Gets the notification category .
7470	Returns the notification source for the request .
7471	Invokes the readNotices method .
7472	Reads a notification response from a file .
7473	Gets the schoolId from the PortletRequest .
7474	Extracts the user id from the response .
7475	Invokes the specified action on the notification .
7476	Gets the attributes map .
7477	Normalizes a tuple .
7478	Returns true if boxA contains boxB .
7479	Returns the point that is closest to the given point .
7480	Returns the sign of the given point .
7481	Sets the Se3_F64 .
7482	Sets the Euler type to the given coordinates .
7483	Convert a rectangle to a polygon .
7484	Converts a polygon to a quadrilateral .
7485	Computes the bounding line between two quadrilateral rectangles .
7486	Given a polygon and a rectangle return the bounding rectangle .
7487	Converts a Quadrilateral_F64 to a Point2D_F64
7488	Calculates the average of vertices in a polygon .
7489	Creates a convex hull .
7490	Removes almost parallel points from a polygon .
7491	Calculates the average error between two polygons .
7492	Compute the area between two polygons .
7493	Returns true if the quadrilateral contains the specified point .
7494	Checks if three points are contained in a triangle .
7495	Computes the intersection of two lines .
7496	Computes the intersection of two lines .
7497	Computes the intersection of two lines .
7498	Computes the intersection of two lines .
7499	Computes the intersection of two polygons .
7500	Returns true if the specified ellipse contains the specified ellipse .
7501	Returns the intersection area of two rectangles .
7502	Returns the value of the matrix at the given index .
7503	Converts a matrix to a Quaternion .
7504	Rotate a DMatrixRMaj .
7505	Sets the x - axis of ang .
7506	Rotate a DMatrixRMaj
7507	Rotate a matrix .
7508	Sets the z - axis of ang .
7509	Converts EulerType to a DMatrix .
7510	Returns a DMatrixRMaj for rotation about axis .
7511	Sets the angle .
7512	Converts a motion to a TwistCoordinate .
7513	Sets the initial and end translations .
7514	Computes the interpolation .
7515	Computes the SVD of the given points .
7516	Solve a point .
7517	Returns the length of the side at the specified index .
7518	Returns true if the given point is inside this intersection .
7519	Convert a ConicGeneral_F64 to a DMatrixRMaj .
7520	Convert a ConicGeneral_F64 to a DMatrix3x3
7521	Convert a ConicGeneral_F64 to a ParabolaGeneral_F64 .
7522	Convert a ParabolaGeneral_F64 to a ConicGeneral_F64 .
7523	Divides a tuple by a double .
7524	Converts a GeoTuple3D_F64 to a DMatrix .
7525	Converts a DMatrixRMaj to a GeoTuple3D .
7526	Sets the param vector .
7527	Returns the dist half of angA and angB .
7528	Returns true if the two planes intersect .
7529	Returns true if the plane contained the given point .
7530	Checks if the line intersects the sphere .
7531	Interpolates a and b .
7532	Extracts the quaternion from q .
7533	Process a Polygon2D_F64 array .
7534	Set to no motion .
7535	Converts a 3D matrix to a homogeneous matrix .
7536	Converts a Se2_F64 matrix to a homogeneous matrix .
7537	Converts a 3D axis to a 3D axis .
7538	Returns true if a and b are identical .
7539	Converts a latlon coordinate to a unit vector .
7540	Computes the radius of a circle .
7541	Computes the squared squared radius of a circle .
7542	Returns the point that is closest to l0 and l1 .
7543	Returns the point in the line that is closest to the specified point .
7544	Returns the point that is closest to the given plane .
7545	Returns the closest point to a line segment .
7546	Returns the point that is closest to the specified point .
7547	Transform a Se2_F64 into a Point2D_F64 .
7548	Transforms a set of points into a set of points .
7549	Returns true if this quadrilateral is equal to the given tol .
7550	Calculates the acute angle between two lines .
7551	Convert a LinePolar2D_F64 to a LineParametric2D_F64
7552	Convert a LineGeneral2D_F64 to a LinePolar2D_F64 .
7553	Convert a LineSegment2D_F64 to a LineParametric2D_F64
7554	Convert a LineSegment2D_F64 to a LineGeneral2D_F64
7555	Converts two points to a LineGeneral2D_F64 .
7556	Converts two points to a LineParametric2D_F64 .
7557	Convert a LineParametric2D_F64 to a LinePolar2D_F64 .
7558	Convert a LineParametric2D_F64 to a LineGeneral2D_F64
7559	Convert a LineGeneral2D_F64 to a LineParametric2D_F64
7560	Converts a plane normal to a plane general .
7561	Converts a plane tangent to a plane normal .
7562	Convert a plane to a 3D plane .
7563	Converts a 2D point to a 3D point .
7564	Converts a plane to a world .
7565	Returns true if t is identical to tol .
7566	Returns a copy of this object .
7567	Returns the norm squared .
7568	Computes the t - axis of a line .
7569	Returns true if the element is uncountable .
7570	Returns true if the given parabola is equivalent to the given tol .
7571	Returns the center of this point .
7572	Computes the acute angle between two lines .
7573	Returns true if the given point is in infinite H .
7574	Returns a random number of points .
7575	Converts a 4D point to a 3D point .
7576	Creates a new Vector2D_F64 with the given points minus the given points .
7577	Returns true if xb and yb are identical .
7578	Sets the rectangle s width and height .
7579	Convert an EllipseRotated_F64 to an EllipseQuadratic_F64 .
7580	Computes a point in the ellipse .
7581	Computes the angle between two ellipses .
7582	Computes the tangent of an ellipse .
7583	Selects a tangent .
7584	Returns the corner at the specified index .
7585	Computes the distance between two lines .
7586	Computes the distance between two points .
7587	Computes the distance between two LineSegments .
7588	Returns the distance between a plane and a point .
7589	Computes the distance between a cylinder and a point .
7590	Computes the distance between two lines .
7591	Computes the distance between two lines .
7592	Computes the distance between a quadrilateral and a point .
7593	Computes the squared distance between two quadrilateral points .
7594	Calculates the distance between a polygon and a point .
7595	Calculates the squared distance between a polygon and a point .
7596	Returns the origin of the line .
7597	Computes the distance between an ellipse and a point .
7598	Computes the distance between an ellipse and a point .
7599	Adds a transformation to the path .
7600	Returns the point that is closest to the given line segment .
7601	Returns the point that is closest to the specified point .
7602	Computes the polynomial curve .
7603	Creates a random vector with the specified minimum and maximum values .
7604	Converts a perpendicular vector to a canonical vector .
7605	Returns true if the two vectors are identical .
7606	Normalizes a vector .
7607	Creates a new 3D matrix .
7608	Convert a DMatrixRMaj to a Vector3D_F64
7609	Returns the distance between two points .
7610	Sets the ellipse .
7611	Normalizes the coordinates .
7612	Computes the triangle between two points .
7613	Computes the quadrilateral .
7614	Converts a polygon to a simple polygon .
7615	Returns the mean of a list of points .
7616	Returns a list of Point2D_F64 sorted in CCW order .
7617	Computes the normal distribution for a list of points .
7618	Returns true if the polygon is convex .
7619	Computes the inverse of the scalar .
7620	Returns the maximum abs .
7621	Computes the distance between two points .
7622	Computes the squared distance between two points .
7623	Randomly selects a number of points in a plane .
7624	Returns a random list of points .
7625	Returns a random number of points .
7626	Returns the mean of a list of points .
7627	Returns the mean of a list of points .
7628	Invalidates all jwt credentials .
7629	Invalidates all objects that match the given predicate .
7630	Combines the given collections into a set .
7631	Gets the features for the server . xml file .
7632	Gets the configuration dropins features .
7633	Gets the server xml features .
7634	Parse include node .
7635	Parse a feature manager node .
7636	Downloads a json file for a given product .
7637	Gets the open liberty feature set .
7638	Checks if only Open Liberty features are installed .
7639	Returns true if the reference collection contains the target collection ignoring case .
7640	Gets the next product version .
7641	Extracts the symbolic name from a jar file .
7642	Gets the map based install kernel jar .
7643	Returns true if file1 is a replacement jar .
7644	Extracts the version from a file name .
7645	Compares two versions .
7646	Executes the given action on a plugin .
7647	Checks if the given file is a Spring Boot uber jar .
7648	Gets the Arquillian property .
7649	Returns true if the given file is working in this environment .
7650	Moves the Tortoise back to the center .
7651	Checks if two objects are equal .
7652	Loads an integer from a string .
7653	Throws a pizza party .
7654	Verifies that the TURTLE is valid .
7655	Swaps blanks .
7656	Returns the distance to the target cell .
7657	Prints a message to the output stream .
7658	Prints a message to the output stream .
7659	Make an AFishy decision .
7660	Prints a variable value .
7661	Returns the uniform value between two ints .
7662	Returns the uniform distribution of two doubles .
7663	Returns the poisson of a given parameter .
7664	Returns the discrete value of a double array .
7665	Main function .
7666	Capitalizes the first character of a word .
7667	Uncapitalizes the first character of a word .
7668	Fixes a path .
7669	Converts a criteria join to a string .
7670	Returns the cookie sentence for the given token .
7671	Filter the cookie list .
7672	Extracts the auth token from the cookie list .
7673	Registers the given injector as a Guice bound .
7674	Gets all RolePermissions from the RoleStore .
7675	Adds a projection to the list .
7676	Convert a JobInfo to a JobDetail .
7677	Convert a TriggerInfo to a TriggerBuilder .
7678	Sets the count interval values .
7679	Sets the start end time .
7680	Sends a MailItem to the queue .
7681	Writes the contents of this stream to the given output stream .
7682	Initializes the scheduler .
7683	Returns a collection of all fields of the given class .
7684	Returns the field map for the given class .
7685	Converts an exception to a Robe response .
7686	Configures the token based authentication .
7687	Generate attributes hash .
7688	Generates a token string .
7689	Sends a message to the specified MailItem .
7690	Generates a password from a user s old password .
7691	Changes the password of a user .
7692	Returns the user with the given account name .
7693	Hash a password .
7694	Verifies that the given account name is a valid email address .
7695	Verifies the strength of a password .
7696	Provides a search model .
7697	Commits the transaction if it is successful .
7698	Throws an error if the transaction is not active .
7699	Starts the transaction .
7700	Configures a field by its name .
7701	Checks if the given token is authorized to execute the given method on the given templates .
7702	Parse a Date object from a Field object .
7703	Gets the response .
7704	Creates a new constraint with the given name and value .
7705	Creates a NOT_EQUALS restriction .
7706	Creates a LESS_THAN restriction .
7707	Create a LESS_OR_EQUALS_THAN restriction .
7708	Creates a greater than restriction .
7709	Creates a greater or equals restriction .
7710	Creates a new restriction with the given name and value .
7711	Creates a restriction with the specified name and value .
7712	Adds a namespace to the namespace manager .
7713	Creates a new ResourceRepresentation with the given content .
7714	Creates a new ResourceRepresentation with the given rel .
7715	Creates a new resource representation with the specified value .
7716	Creates a new resource representation with the given namespace and href .
7717	Check if a byte array can be decoded .
7718	Encodes a string into a byte array .
7719	Checks if two Readers are equal .
7720	Moves src to dst .
7721	Touches a list of files .
7722	Returns the base name of the given file .
7723	Adds padding to the buffer .
7724	Returns the short name of the given class .
7725	Returns an unmodifiable set of all super classes of the given class .
7726	Verifies that a password is valid .
7727	Reads a string from the input stream .
7728	Appends a byte to the end of the buffer .
7729	Appends a byte array to the end of the buffer .
7730	Creates a copy of the given array .
7731	Adds the given fraction to this fraction .
7732	Subtracts the given fraction from this fraction .
7733	Returns a new fraction that is multiplied by f .
7734	Returns a new fraction divided by the given fraction .
7735	Returns the maximum value of a list of longs .
7736	Returns the minimum value of a list of longs .
7737	Checks if a condition is true .
7738	Fetches location forecast data .
7739	Fetches the data for a specific date .
7740	Fetches the content of a Sunrise object .
7741	Finds the hourly point forecasts from now .
7742	Finds the nearest forecast for the given date .
7743	Fetches the content of a forecast query .
7744	Creates a simple long - term forecast .
7745	Creates a new long - term forecast .
7746	Creates a Location from a string of coordinates .
7747	Fetches the available Meteo data .
7748	Creates a window symbol name from a point forecast .
7749	Returns the Beaufort level for a given point forecast .
7750	Creates a URI from a string .
7751	Checks if the current date is a sun date .
7752	Returns the point forecast for the given date time .
7753	Gets the best fit period forecast .
7754	Fetches the TextLocationWeather for the given longitude and latitude .
7755	Fetches the contents of a TextLocationWeather object .
7756	Updates the database .
7757	Invokes a string method .
7758	Acquires an object from a data source .
7759	Returns a referenced object for the given class and ref .
7760	Gets wrapped object .
7761	Returns the configuration for the given class .
7762	Returns true if the substituter is enabled .
7763	Create a class iterator .
7764	Returns the decoder .
7765	Returns a list of services for a given class .
7766	Returns the module with the specified interface implementation and module type .
7767	Acquires an InputStream from the given DataSource .
7768	Returns the number of bytes contained in the given data source .
7769	Gets wrapped data .
7770	Returns the index of the component .
7771	Returns the name of the component at the given index .
7772	Returns true if the input is colored .
7773	Executes a regex .
7774	Returns true if d and s are in a loop .
7775	Creates a subset of a runtime expression .
7776	Create a crevdissect expression .
7777	Dissects a runtime subexpression .
7778	Clones the outs of a state .
7779	Opts for a subre .
7780	Marks a subre .
7781	Creates a new NFA tree node .
7782	Parse a subre .
7783	Deltrates from a leftend to a state .
7784	Adds a nonword to the nfa .
7785	Clones a word .
7786	Scan a reference number .
7787	Brackets a state .
7788	Scan a plain pattern .
7789	Creates a new lacon .
7790	Creates a new one - chr color .
7791	Dovecs a UnicodeSet .
7792	Returns the color of a codepoint .
7793	Returns a pseudo - color .
7794	Creates a subrange of a range .
7795	Checks to see if a color is OK .
7796	Returns the color chain for the given Arc .
7797	Uncolors the given Arc .
7798	Dumps the colors .
7799	Starts the regex .
7800	Returns the prefixes .
7801	Interpolates a char array into a lexnest pattern .
7802	Returns the color of the specified codepoint .
7803	Initializes the state set .
7804	Returns the last cold state .
7805	Converts a char to a UnicodeSet .
7806	Converts a class name to a UnicodeSet .
7807	Sorts the arcs of the first and last arcs .
7808	Dump a nfa representation into a string .
7809	Returns a new state .
7810	Moves the outs from the old state to the new state .
7811	Moves from old state to new state .
7812	Copy ins from oldState to newState .
7813	Copy outs from the old state to the new state .
7814	Drops a state .
7815	Frees a state .
7816	Parse an arc into a new arc .
7817	Dup a state to a new state .
7818	Specifies the special colors .
7819	Dump nfa .
7820	Dump a state .
7821	Dumps the arcs of a state into a StringBuilder .
7822	Dump arcs from a to s .
7823	Dump an arc into a StringBuilder .
7824	Optimizes the regex .
7825	Analyzes the chain .
7826	Combines two arcs .
7827	Cleans up the state map .
7828	Mark a state as reachable .
7829	Marks that the given state can reach the given mark .
7830	Fixes all empty states .
7831	Returns true if the given Arc is unempty .
7832	Gets the rule parameters .
7833	Returns a map of all rule interpreter plugins in the repository .
7834	Gets the report plugins .
7835	Returns the rule selection for the given rule set .
7836	Executes a task .
7837	Get the error message for the given exception .
7838	Gather standard options .
7839	Gather task options .
7840	Gathers the task names from the given task factory .
7841	Interprets the given command line .
7842	Gets the command line .
7843	Executes a task .
7844	Read properties from a command line .
7845	Prints usage information .
7846	Gets the home directory .
7847	Creates the plugin class loader .
7848	Returns a set of ids for a given minLongitude minLatitude maxLatitude .
7849	Returns the ids of all cells that intersect the given latitude and longitude .
7850	Returns the URI for the given method and target .
7851	Adds a route to the map .
7852	Returns the number of routes .
7853	Adds a path pattern to the first route of this route .
7854	Adds a route to this route .
7855	Adds a route to the end of the list .
7856	Returns true if any of the given request path tokens have been matched .
7857	Checks if a property is equal to the given value .
7858	Returns the store file name .
7859	Compares two folders .
7860	Compares two entries .
7861	Compares two bookmarks .
7862	Sets the servlet class last modified time .
7863	Returns the list of dependents of this tag .
7864	Finds the class with the given name .
7865	Parse the authorization header from the request .
7866	Returns an instance of the ProtectedFunctionMapper .
7867	Maps a function to a class .
7868	Gets the map for a function .
7869	Resolve a function .
7870	Sets the values for a character array .
7871	Resolves a variable .
7872	Parse a tag file .
7873	Parse a jar file .
7874	Parse the tag file directives .
7875	Parse a jar file .
7876	Creates a compiler .
7877	Gets the resource as stream .
7878	Calculates the lastMod .
7879	Returns an ArrayList of ClassLoaders for this Activator .
7880	Check if the classloader is a parent of this classloader .
7881	Starts the loader with the given name .
7882	Reads the stream header from the input stream .
7883	Creates a pagination result .
7884	Creates a MetaKey from a string .
7885	Fills the requirements .
7886	Returns the tag file with the given short name .
7887	Parse an implicit tld .
7888	Returns the checksum for the given file and algorithm .
7889	Returns the size of the specified file .
7890	Validate the channel name .
7891	Seeks to the given block number .
7892	Locates a block by its position .
7893	Get Maven artifacts .
7894	Updates the OptState and the OptReps .
7895	Calculates the 1 - byte prices .
7896	Calculates the long rep prices .
7897	Calculates the normal match prices .
7898	Throws an exception if an expected byte is not found .
7899	Throws an exception if the byte is invalid .
7900	Scan tlds .
7901	Scan a tld .
7902	Add a jsp servlet wrapper .
7903	Gets the parent ClassLoader .
7904	Sets a bytecode .
7905	Returns the bytecode time for a given bytecode name .
7906	Saves the bytecode for a class to a file .
7907	Checks if the jsp is a tag file .
7908	Initializes the classpath .
7909	Starts the thread .
7910	Stops the thread .
7911	Runs the JSP recompiler .
7912	Finds a channel by its name .
7913	Finds a channel .
7914	Updates the deploy groups cache .
7915	Returns a list of deployment groups for the given position and count .
7916	Copies the contents of an InputStream to an OutputStream .
7917	Parse a jar file .
7918	Parses a JSP file into Attributes .
7919	Parse a quoted string .
7920	Adds the include directive to a node .
7921	Parse jsp attribute and body .
7922	Adds an attribute .
7923	Adds a child node to this node .
7924	Returns an iterator of attributes .
7925	Returns an iterator over all children of this node .
7926	Returns an iterator over all children with the given name .
7927	Returns the base Maven coordinates .
7928	Returns the alias for the given variable name .
7929	Sets the thread .
7930	Unsets the thread .
7931	Finds a print stream .
7932	Write a value to a StringWriter .
7933	Write a field to a StringWriter .
7934	Adds a new element to a parent element .
7935	Adds the element with the given name to the parent element .
7936	Writes the next character to the given writer .
7937	Sets the writer .
7938	Re - allocates a buffer .
7939	Maps a page of nodes to the given compiler .
7940	Gets the same parent state .
7941	Registers a storage model .
7942	Returns a boolean stream of data to the given consumer .
7943	Monitors a job .
7944	Checks if the given request is authenticated .
7945	Finishes the XML stream .
7946	Creates a Gson object .
7947	Encode for LZMA2 .
7948	Returns an unmodifiable map of the provided and extracted metadata .
7949	Returns the throwable associated with the given servlet request .
7950	Checks if a coordinate is a checksum .
7951	Finishes writing bytes to the stream .
7952	Returns the exception associated with the request .
7953	Evaluates an expression .
7954	Convert org . osgi . service . http . port to a prefix .
7955	Checks if the given path is an XML file .
7956	Parses a tag file directory .
7957	Loads the tag file .
7958	Removes the proto type files for a given class .
7959	Executes the JSP .
7960	Sets the uri root .
7961	Scans the given base file for files .
7962	Locates the uri root .
7963	Initializes the system class loader .
7964	Moves the hash to the given position .
7965	Checks if the given string matches the given string .
7966	Checks if the given string matches any optional spaces .
7967	Skips until the specified string is reached .
7968	Skips until ignoring esc .
7969	Skips until the first element of the given tag is found .
7970	Parse a token .
7971	Returns true if the source file has been unregistered .
7972	Creates a new unclassified coordinates object .
7973	Filters a list of AspectInformation by factory id .
7974	Gets the missing ids .
7975	Sets the schema resource prefix .
7976	Sets the DTD resource prefix .
7977	Uencodes a prefix .
7978	Converts a node into a tree node .
7979	Merge errors from a BindingResult into a result .
7980	Initializes the binder .
7981	Scan all ChannelAspectFactory references .
7982	Unqualifies a path .
7983	Invokes the tag plugin .
7984	Gets a byte array from the cache .
7985	Returns an int array with the specified size .
7986	Converts a collection of ArtifactResults into an AetherResult .
7987	Gets the resource as stream .
7988	Validates the tag library .
7989	Pushes a stream to the include stack .
7990	Returns the XML encoding of a jar file .
7991	Scan XMLDecl .
7992	Reports a fatal error .
7993	Returns the real path of the resource .
7994	Gets the URL of a resource .
7995	Gets a resource as a stream .
7996	Returns a set of the resource paths for the given path .
7997	Logs a message and exception .
7998	Adds a filter .
7999	Gets the buffer size .
8000	Returns the memory usage for the given dictSize .
8001	Set a preset dict .
8002	Moves the window .
8003	Fills a window with bytes .
8004	Process pending bytes .
8005	Returns the number of bytes to be read from the buffer at the specified position .
8006	Gets the match length .
8007	Verify that the given matches are valid .
8008	Moves the cursor to the specified position .
8009	Recycles the buffer .
8010	Flushes the buffer .
8011	Clears the buffer .
8012	Flushes the response buffer .
8013	Closes the response stream .
8014	Writes a string to the buffer .
8015	Allocate a char buffer .
8016	Throws a JavacError .
8017	Creates a key from the given meta data .
8018	Generates the class .
8019	Compiles a class .
8020	Deletes the generated files .
8021	Initializes the java compiler .
8022	Checks if a system jar is in the webinf .
8023	Quotes a character .
8024	Generates servlet declarations .
8025	Compiles the tag handler pool list .
8026	Generate xml log .
8027	Generate common postamble .
8028	Generates the postamble for the given node .
8029	Generates a new JasperTagHandler .
8030	Generate tag handler attributes .
8031	Reads the properties from an input stream .
8032	Exports a channel .
8033	Validate the xml view .
8034	Returns the JspTag for the given handler class .
8035	Parses the given expression .
8036	Select a property from a list of properties .
8037	Checks if the given URI is a jsp page .
8038	Prints a comment .
8039	Prints a string .
8040	Print the specified string as a javaline .
8041	Prints a multi - line number .
8042	Gets the expression in xml .
8043	Check if the scope is valid .
8044	Escapes an XML string .
8045	Validate expressions .
8046	Gets the tag handler class name .
8047	Creates a Java package from the given path .
8048	Splits the given path and pat into an array of strings .
8049	Creates a Java identifier .
8050	Mangles a character .
8051	Returns true if the given key is a java keyword .
8052	Adds a property to the map .
8053	Returns the value of the given modifier .
8054	Returns a SortedSet containing the metadata for the given namespace and key .
8055	Runs the user write model .
8056	Returns the base name for the given name .
8057	Puts a value into the cache .
8058	Loads a key from the database .
8059	Builds a collection of metrics for a given payload .
8060	Resolves a Number .
8061	Writes the given object to the given output stream .
8062	Returns the TTL for the specified granularity .
8063	Creates the prepared statements .
8064	Tracks a list of delayed metrics sent by a tenant .
8065	Tracks a Tenant s delayed aggregate metrics .
8066	Reads an unversioned double or long from the input stream .
8067	Puts an unversioned double or long into the output stream .
8068	Returns an unmodifiable map of all properties .
8069	Creates a new container .
8070	Schedule slots that are eligible for rollup .
8071	Clears a slot from running .
8072	Sets the callbacks for the given event .
8073	Calls this Emitter once .
8074	Removes an event from the queue .
8075	Emits an event to all registered callbacks .
8076	Returns a list of listeners for the given event .
8077	Gets the remote name .
8078	Appends a rollup event to the output stream .
8079	Parses a timestamp from a file .
8080	Starts the server .
8081	Returns the RollupComputer for the given granularity .
8082	Creates an IOContainer from the configuration .
8083	Adds a granularity to the map .
8084	Computes the maximums for a list of outputs .
8085	Formats the given headers according to the specified maximums .
8086	Formats the given outputs with the given maximums .
8087	Register metrics .
8088	Sets the name of the thread pool .
8089	Adds a metric index and docCount to the list of metric names .
8090	Returns an unmodifiable set of complete metric names .
8091	Returns a list of tokens for a given locator .
8092	Adds a batch of statements to the ResultSet .
8093	Returns the granularity from points in interval .
8094	Returns the granularity from points less than equal to the requested duration .
8095	Set the server time in milliseconds .
8096	Returns a set of unique hosts .
8097	Gets the maximum number of connections per host .
8098	Returns an iterable of all the metric column families .
8099	Inserts a collection of metrics into the graph .
8100	Inserts a collection of metrics into the Cassandra model .
8101	Returns a set of locators for the specified granularity .
8102	Gets metric names from elasticsearch .
8103	Convert query regex to grab current and next level .
8104	Starts the storage manager .
8105	Stops the file uploader .
8106	Returns true if the given locator is present in the batch layer .
8107	Returns true if the given Locator is present in the discovery layer .
8108	Returns true if the given Locator is present in the token discovery layer .
8109	Returns true if the locator is delayed for the given slot .
8110	Sets the delayed locator for the current slot .
8111	Maps the finer ranges of a given granularity to a map .
8112	Returns an iterable of ranges for a given interval .
8113	Inserts a set of metrics into Cassandra .
8114	Insert a collection of metrics into a column family .
8115	Returns true if the metric is delayed .
8116	Returns the bound statement for the given metric if it is delayed .
8117	Gets the metadata values for the given locator .
8118	Returns a serializer for the given type .
8119	Checks if the content type is valid .
8120	Returns true if the HTTP headers are valid .
8121	Inserts a list of IMetrics into Elasticsearch .
8122	Returns true if at least one of the aggregated metrics are expected .
8123	Checks to see if the files in the download directory are getting merged properly .
8124	Returns a new instance of the Extractor .
8125	Returns true if the given OS name and version match .
8126	Starts the rabbit MQ process .
8127	Stops the rabbit mq process .
8128	Creates a default instance of PnSignalingParams .
8129	Adds a list of IceServers to the peer connection .
8130	Adds an IceServer to the PeerConnection .
8131	Sends a message to a user .
8132	Sends a message to all registered PnPeers .
8133	Gets the value of the weitereAdresse property .
8134	Gets the value of the userDefinedSimplefield property .
8135	Gets the value of the userDefinedAnyfield property .
8136	Sets the value of the APISuchfelder property .
8137	Gets the value of the multimediaAnhang property .
8138	Gets the value of the statusVBM property .
8139	Gets the value of the statusIS24 property .
8140	Gets the value of the statusHP property .
8141	Gets the value of the importmodus property .
8142	Gets the value of the addressdruck property .
8143	Gets the value of the waehrung property .
8144	Gets the value of the Bodenbelag property .
8145	Sets the region value .
8146	Sets the value of the area property .
8147	Sets the value of the address property .
8148	Sets the value of the description property .
8149	Sets the value of the RentCollectionPeriod property .
8150	Sets the furnished value for this OverseasRentalAd .
8151	Sets the value of the phone1 property .
8152	Sets the value of the phone2 property .
8153	Sets the value of the contactName property .
8154	Sets the value of the phoneInfo property .
8155	Sets the value of the mainEmail property .
8156	Sets the cc email address .
8157	Sets the value of the externalId property .
8158	Sets the value of the agentId property .
8159	Sets the energypass value .
8160	Sets the Energiepass . Jahrgang property .
8161	Sets the Energiepass . Gebaeudeart .
8162	Sets the value of the BueroTyp property .
8163	Checks if a string is a numeric value .
8164	Sets the gebiete value .
8165	Sets the value of the group property .
8166	Sets the value of the agent property .
8167	Gets the value of the property property .
8168	Sets the value of the Verkaufstatus property .
8169	Gets the value of the userDefinedExtend property .
8170	Sets the PreisZeiteinheit .
8171	Gets the value of the zimmer property .
8172	Gets the value of the haus property .
8173	Gets the value of the bueroPraxen property .
8174	Gets the value of the gastgewerbe property .
8175	Gets the value of the landUndForstwirtschaft property .
8176	Gets the value of the Sonstige property .
8177	Gets the value of the zinshausRenditeobjekt property .
8178	Gets the value of the terrain property .
8179	Sets the value of the umfang property .
8180	Sets the value of the wohnungtyp property .
8181	Returns the ISO 2 - encoded version of the given country .
8182	Gets the country ISO2 from ISO 3166 code .
8183	Returns the ISO3 code for the given country .
8184	Returns the ISO 3166 country code from the given ISO 2166 code .
8185	Returns the country name for the given country and language .
8186	Translates a country name into a language .
8187	Gets the value of the anbieter property .
8188	Sets the value of the business element category property .
8189	Gets the value of the pdf property .
8190	Sets the value of the actionart property .
8191	Sets the value of the realestateitems property .
8192	Sets the value of the pacht property .
8193	Downgrade OpenImmoDocument to previous version .
8194	Upgrade OpenImmoDocument from previous version .
8195	Gets the value of the content property .
8196	Returns the names of all the fields in this MetaDataType .
8197	Sets the view blick value .
8198	Sets the value of the pauschalmiete property .
8199	Sets the monatsmiete value .
8200	Gets the value of the parkplatz property .
8201	Sets the lastenaufzug .
8202	Sets the value of the zustandArt property .
8203	Gets the value of the feld property .
8204	Handles a validation event .
8205	Dumps a single line of text to a writer .
8206	Returns the value at the given position or the default value .
8207	Prints this record as an iterable .
8208	Sets the value at the given position .
8209	Sets the value of the ctype property .
8210	Sets the value of the haustyp property .
8211	Gets the value of the energiepass property .
8212	Sets the Keller property .
8213	Sets the value of the GrundstTyp property .
8214	Sets the value of the geschlAttr property .
8215	Sets the value of the HallenTyp property .
8216	Gets the value of the wiederholungstermin property .
8217	Gets the value of the teilungsversteigerung property .
8218	Upgrade OpenImmoDocument from previous version .
8219	Gets the value of the bevorzugt property .
8220	Gets the value of the wunsch property .
8221	Sets the value of the uebertragung .
8222	Sets the value of the modus property .
8223	Gets the value of the emailSonstige property .
8224	Gets the value of the telSonstige property .
8225	Sets the value of the HandelTyp property .
8226	Downgrade OpenImmoDocument to previous version .
8227	Sets the value of the apiSuchfeld1 property .
8228	Sets the value of the apiSuchfeld2 property .
8229	Sets the value of the apiSuchfeld3 property .
8230	Gets the value of the row property .
8231	Sets the value of the distanzenSport property .
8232	Gets the value of the anhang property .
8233	Gets the value of the ObjectKategorie2 property .
8234	Gets the Objektzustand .
8235	Gets the value of the HausKategorie property .
8236	Gets die Ausstattungsqualitaet .
8237	Gets the value of the vermarktungsart property .
8238	Gets the value of the interessent property .
8239	Sets the value of the ProvisionTeilen property .
8240	Sets the value of the ackerland property .
8241	Sets the value of the bauerwartungsland property .
8242	Sets the value of the bootsstaende property .
8243	Sets the value of the buero property .
8244	Sets the value of the camping property .
8245	Sets the value of the doppelhaus property .
8246	Sets the einfamilienhaus property .
8247	Sets the value of the einzelhandelGross property .
8248	Sets the einzelhandel - klein value .
8249	Sets the value of the garagen property .
8250	Sets the value of the garten property .
8251	Sets the gastronomie value .
8252	Sets the value of the gewerbe property .
8253	Sets the value of the hotel property .
8254	Sets the value of the industrie property .
8255	Sets the value of the keineBebauung property .
8256	Sets the value of the kleingewerbe property .
8257	Sets the lager value for this JAXBElement .
8258	Sets the value of the mehrfamilienhaus property .
8259	Setter für die obstpflanzung .
8260	Sets the value of the parkhaus property .
8261	Sets the production value for this JAXBElement .
8262	Sets the reihenhaus property .
8263	Sets the value of the stellplaetze property .
8264	Sets the value of the villa property .
8265	Sets the wald value for this JAXBElement .
8266	Sets the anbieter value .
8267	Gets the value of the wohnung property .
8268	Gets the value of the grundstueck property .
8269	Gets the value of the einzelhandel property .
8270	Gets the value of the hallenLagerProd property .
8271	Gets the value of the parken property .
8272	Gets the value of the freizeitimmobilieGewerblich property .
8273	Gets the value of the objektartZusatz property .
8274	Gets the value of the stellplatzart property .
8275	Sets the MaxMietdauer .
8276	Gets the value of the feature property .
8277	Sets the zimmertyp value .
8278	Upgrade OpenImmoDocument from previous version .
8279	Sets the value of the keineAngabe property .
8280	Sets the value of the erdwaerme property .
8281	Sets the value of the solarheizung property .
8282	Sets the value of the pelletheizung property .
8283	Sets the gas value for this JAXBElement .
8284	Sets the value of the oel property .
8285	Sets the fernwaerme value .
8286	Sets the value of the strom property .
8287	Sets the kohle value .
8288	Generates a random string of the specified length .
8289	Generates a random number of letters .
8290	Generates a random numeric string of the specified length .
8291	Gets the value of the wohnungKategorie property .
8292	Sets the benutzer value .
8293	Sets the value of the ObjectElement property .
8294	Gets the value of the feed property .
8295	Sets the value of the Moebliert property .
8296	Gets the value of the serviceleistungen property .
8297	Sets the value of the sub - administrative area .
8298	Sets the value of the city property .
8299	Sets the value of the LocationStructure property .
8300	Downgrade OpenImmoDocument to previous version .
8301	Upgrade OpenImmoDocument from previous version .
8302	Sets the value of the LandTyp property .
8303	Gets the value of the field property .
8304	Upgrade OpenImmoDocument from previous version .
8305	Gets the value of the ad property .
8306	Sets the gastgewTyp value .
8307	Sets the value of the Platzart property .
8308	Gets die Datenverkabelung .
8309	Gets die klimaanlage .
8310	Gets the value of the image property .
8311	Sets the priceType value for this OverseasSaleAd .
8312	Sets the value of the newDevelopmentAvailability property .
8313	Sets the value of the directions property .
8314	Sets the value of the co2Rating property .
8315	Sets the value of the energyRating property .
8316	Sets the value of the viewingDetails property .
8317	Sets the propertyStatus value for this OverseasSaleAd .
8318	Sets the value of the pictures property .
8319	Sets the value of the bebaubarAttr property .
8320	Upgrade OpenImmoDocument from previous version .
8321	Sets the value of the ParkenTyp property .
8322	Sets the value of the alterAttr property .
8323	Sets the value of the freizeitTyp property .
8324	Sets the value of the telefonart property .
8325	Sets the value of the emailart property .
8326	Sets the value of the overseasSales property .
8327	Sets the value of the overseasRental property .
8328	Creates the user defined simplefield element .
8329	Gets the value of the Fehler property .
8330	Sets the value of the erbpacht property .
8331	Gets the value of the stpSonstige property .
8332	Gets the valuelist value .
8333	Sets the minDauer value .
8334	Sets the value of the zinsTyp property .
8335	Gets the value of the photo property .
8336	Sets the metadata value for this Feed .
8337	Sets the value of the projects property .
8338	Sets the value of the properties property .
8339	Downgrades a KyeroDocument to the previous version .
8340	Upgrades a KyeroDocument from the previous version .
8341	Gets the value of the immobilie property .
8342	Gets the value of the Object property .
8343	Gets the value of the fehlerliste property .
8344	Gets the value of the status property .
8345	Sets the SonstigeTyp value .
8346	Sets the value of the distanzen property .
8347	Gets the value of the distanzen property .
8348	Gets the value of the distanzenSport property .
8349	Returns true if the given exception is compatible with the given throws clause .
8350	Sets the bindings for the namespace URI .
8351	Bind a prefix to a namespace URI .
8352	Removes a binding from the namespace .
8353	Checks if the given string has an opening tag .
8354	Consume comment tokens .
8355	Consumes a line of text .
8356	Returns the comment token for the given line .
8357	Initializes logging .
8358	Starts mapping a namespace URI to a prefix .
8359	Adds an iterator to the composite iterator .
8360	Adds a new option .
8361	Adds a string option .
8362	Adds an integer option .
8363	Adds a long option .
8364	Adds a double option .
8365	Adds a boolean option .
8366	Parse an option value .
8367	Creates a new instance of the given class .
8368	Called after access .
8369	Sets the target object .
8370	Resolves the static method name to the target class name .
8371	Finds a matching method .
8372	Converts a digit to an unsigned string .
8373	Serialize an object to a byte array .
8374	Deserializes an object from a byte array .
8375	Gets the child element by tag name .
8376	Gets the child element value by tag name .
8377	Returns a list of all child elements of the given element .
8378	Checks if the node name matches the desired name .
8379	Returns true if the node name matches the given collection of desired names .
8380	Sets the size of a string .
8381	Monitors the given handle with a release listener .
8382	Adds an entry to the list of tracked entries .
8383	Keep monitoring thread alive .
8384	Calculates the city of a mobile number .
8385	Start prefix mapping .
8386	Ends a prefix mapping .
8387	Adds a future callback .
8388	Parse the tree .
8389	Gets the text color for the specified item .
8390	Sets the values of this layout .
8391	Returns the color of the item at the specified position .
8392	Sets the text size .
8393	Returns the x - coordinate in the bounds of the item .
8394	Gets the intro .
8395	Returns the names of the keywords in the test library .
8396	Returns the arguments for the given keyword .
8397	Returns the documentation for the given keyword .
8398	Starts the remote server .
8399	Stops the remote server .
8400	Starts the Robot Framework remote server .
8401	Convert properties from a file to a JSON string .
8402	Convert properties from a file to a JSON string .
8403	Converts an input stream to a JSON string .
8404	Converts the given properties to a JSON string .
8405	Converts a map of properties to a JSON string .
8406	Converts from values to an object map .
8407	Converts a set of properties to an object map .
8408	Converts properties to json .
8409	Returns the radius of a shadow and circle .
8410	Creates a builder for OcspFetcher .
8411	Finds the X509Certificate that is the immediate subject of the given certificate .
8412	Processes the markdown files from the input directory .
8413	Preprocess markdown files .
8414	Substitutes the given variables with the given pattern string .
8415	Gets the title from a list of strings .
8416	Adds the title to the HTML file .
8417	Replaces all the variables in the given map with new ones .
8418	Update relative paths in html .
8419	Copy files from one directory to another .
8420	Check if the given path is a valid path .
8421	Wraps the slider content .
8422	Fades the animation up to the specified duration .
8423	Fades down the animation with the specified duration .
8424	Calculates the percentage based on the width .
8425	Computes the overlap between the small and large view .
8426	Gets the launch intent .
8427	Launches an activity .
8428	Get a list of tasks .
8429	Get a list of FactSheets .
8430	Downloads a file from the response .
8431	Builds the HTTP client .
8432	Creates an AccessControlEntity .
8433	Updates a data model .
8434	Create a full export .
8435	Returns a list of exports for the given export type .
8436	Set the OAuth2 token provider host .
8437	Sets the client credentials .
8438	Process a GraphQL multipart .
8439	Get a list of bookmarks .
8440	Adds the given permissions to the given graph .
8441	Writes the permissions for a graph .
8442	Adds rulesets to the MarkLogicDatasetGraph .
8443	Closes the buffer .
8444	Executes a SPARQL query definition .
8445	Creates a MarkLogic database graph .
8446	Limits the number of threads per process .
8447	Resizes this operation .
8448	Rotate a GMO operation .
8449	Sets the gravity of this operation .
8450	Removes all profiles from this operation .
8451	Sets the font to use .
8452	Creates a GMO operation from a file .
8453	Adds an image to this operation .
8454	Parses the given object and returns the arguments as a list of strings .
8455	Prints usage information to a PrintStream .
8456	Extracts a TimeUnit from a time string .
8457	Parse the target object .
8458	Executes the given URL .
8459	Executes a file .
8460	Interprets the given file as a list of actions .
8461	Sort a list of rectangles by size .
8462	Renders the given template text .
8463	Gets the XML rel for a slide .
8464	Returns true if the mouse event is in the range .
8465	Checks if the element overlaps vertically with the specified element .
8466	Executes an outbound operation .
8467	Executes an outbound operation .
8468	Requires a file .
8469	Gets or creates a temporary directory .
8470	Creates a LogValueMap from a String .
8471	Logs a message at TRACE level .
8472	Logs a message at TRACE level .
8473	Logs a message at the DEBUG level .
8474	Logs a message at the DEBUG level .
8475	Logs a message at the INFO level .
8476	Logs a message at the INFO level .
8477	Sends an info message to the listeners .
8478	Logs a message at the WARN level .
8479	Logs a message at the WARN level .
8480	Logs a message at the error level .
8481	Logs an error with the specified event and message .
8482	Add to context line and method .
8483	Start steno wrapper .
8484	Writes a list of keys and values to a JSON file .
8485	Serializes a throwable .
8486	Returns the log value .
8487	Returns the caller data for the given logging event .
8488	Safely encodes a value .
8489	Creates a database .
8490	Checks the mappings .
8491	Parse a SaveAttr .
8492	Save data to object in context .
8493	Refreshes a sheet row from the given context .
8494	Parse a save attribute string .
8495	Gets the save attribute list from a row .
8496	Gets the save attribute from a list of save attributes .
8497	Sets the value of the hidden save object column .
8498	Sets the save attributes for a sheet .
8499	Sets the SaveAttrs for a row .
8500	Prepares the context and attributes for the given cell .
8501	Returns fmt number .
8502	Sets the shift attributes .
8503	Sets the XSSFEvaluationWorkbook .
8504	Gets the XSSFEvaluationWorkbook wrapper .
8505	Gets the formula evaluator .
8506	Recalculates the max column count .
8507	Loads a web sheet from an input stream .
8508	Loads a web sheet .
8509	Loads a work sheet by tab name .
8510	Exports the file .
8511	Processes the request and saves it .
8512	Processes the submit request .
8513	Populates the component .
8514	Returns the current sheet configuration .
8515	Reads an object from the serial workbook .
8516	Returns the locale for the given component .
8517	Returns a streamed representation of the current picture .
8518	Gets the cell helper .
8519	Gets the picture helper .
8520	Gets the validation handler .
8521	Gets the chart helper .
8522	Converts an array of Ptgs to an array of Ptgs .
8523	Convert a Ptg to a WatchList .
8524	Convert a ptg to a watch list .
8525	Creates a single Ptg instance .
8526	Returns a list of all rows in the current row .
8527	Assembles a list of SerialRows from a list of SerialRows .
8528	Helper method to fixup a RefRelativeRowOneToOne .
8529	Build a dynamic row for the RefPtgBase .
8530	Build dynamic row for area ptg base .
8531	Returns the BG color for the given plot area .
8532	Gets the XColor from the solid fill color .
8533	Find automatic fill color .
8534	Get XColor from schema color .
8535	Get XColor from rgb color .
8536	Get XColor with automatic fill .
8537	Convert a XSSF color to a CLR color .
8538	Gets the triplet from XSSFColor .
8539	Get the BG color from a cell .
8540	Finds the component name from the class .
8541	Populate the attributes of a UIComponent .
8542	Matches a parameter method with the given name .
8543	Sets an object property .
8544	Returns the value of a property in an object .
8545	Setup the control attributes for a cell .
8546	Finds the validation attributes for a cell .
8547	Setup the chart for a FacesCell .
8548	Setup the charts for a face cell .
8549	Setup a FacesCell Picture .
8550	Initialize XSSFChartsMap .
8551	Gets the title of the pie chart .
8552	Sets the style for a series .
8553	Creates a 3D 3D pie chart .
8554	Setup the bar style .
8555	Initializes the XSSFChartsMap .
8556	Gets the chart id from parent .
8557	Initializes the anchors map .
8558	Generate single XSSFChart .
8559	Transforms a collection into a collection object .
8560	Get the full name from a row .
8561	Rebuild upper level formula .
8562	Setup upper level formula .
8563	Builds the cell formula for shifted rows .
8564	Gathers rows mapping by full name .
8565	Change index number in shift map .
8566	Changes the upper level final length .
8567	Change index number in hidden column .
8568	Sets the full name in the hidden column .
8569	Gets the original row number in hidden column .
8570	Sets the original row number in the hidden column .
8571	Find parent rows mapping from shift map .
8572	Find child rows mapping from shift map .
8573	Finds the item at the given index in the given collection .
8574	Builds the current range .
8575	Returns true if the given row is a static row .
8576	Returns true if the given row is a static row reference .
8577	Replace expression with cell value .
8578	Returns the cell range address of the merged region .
8579	Returns a list of all cells in the given sheet that have been skipped .
8580	Add skip cell to list in the region .
8581	Builds the sheet comment from alias .
8582	Build comment from alias .
8583	Builds the sheet configuration .
8584	Gets the sheet configuration .
8585	Build form command from sheet configuration .
8586	Verify last cell .
8587	Builds the sheet .
8588	Check and repair last row .
8589	Build command list from sheet comment .
8590	Sets the parent for a child command .
8591	Checks if each command is in the list .
8592	Match a command to a sheet configuration form .
8593	Copy template for tie commands .
8594	Builds the command list .
8595	Process a method line .
8596	Parse a command line .
8597	Moves a comment to a map .
8598	Creates a config command .
8599	Builds the attribute map for the given command line .
8600	Get sheet configuration from configuration command .
8601	Sets the footer of sheet configuration .
8602	Sets the body of the sheet configuration .
8603	Sets the header of the sheet configuration .
8604	Delete a row .
8605	Remove ranges from shift map .
8606	Find remove full name list .
8607	Gets each command from part name .
8608	Inserts an empty object into the data context .
8609	Delete object in context .
8610	Prepare collection data in context .
8611	Index command range .
8612	Is row allow add boolean .
8613	Inserts a template into a build reference .
8614	Evaluate normal cells .
8615	Evaluate user formula .
8616	Returns true if the given string is a valid user formula .
8617	Create a comment for a cell .
8618	Evaluate a boolean expression .
8619	Removes all rows in a sheet .
8620	Removes a single row from the sheet .
8621	Removes a cached cell for a given row .
8622	Remove rows in body .
8623	Load a picture from the current page .
8624	Loads the chart from the current page .
8625	Assembles a new value .
8626	Gets the cell value with format .
8627	Gets the cell value without formatting .
8628	Get cell string value with type .
8629	Gets the cell string value with number type .
8630	Sets the value of a cell .
8631	Set the value of a cell as a String .
8632	setCellValueBoolean Method .
8633	Set the value of a cell as a date .
8634	Sets the cell value number .
8635	Copy rows from srcSheet to destSheet .
8636	Copies a single row from src sheet to dest sheet .
8637	Copy a cell from a source row to a new row .
8638	Copies the cell set value from the source cell to the new cell .
8639	Copies the cell set style from the source cell to the new cell .
8640	Clone a comment .
8641	Creates a comment anchor .
8642	Creates or inserts a comment .
8643	Matches the comment settings .
8644	Get XSSFVMLDrawing from cell .
8645	Get the CTS shape from the XSSFVMLDrawing
8646	Gets the cell style from source cell .
8647	Convert a POI cell to a FacesCell .
8648	Gets the row column from component attributes .
8649	Gets the initial rows from the sheet configuration .
8650	Gets a FacesRow from a body row .
8651	Get a FacesCell from a body row .
8652	Get a POI cell from a sheet .
8653	Gets the key from the poi cell .
8654	Gets or adds a tie cell in map .
8655	Returns the current data context name .
8656	Evaluates the given expression using the given context .
8657	Evaluates an expression .
8658	Writes an object to the output stream .
8659	Removes a row from the map .
8660	Merge a RowsMapping into this one .
8661	Recovers a sheet .
8662	Returns the chart type for the given CTChart .
8663	Converts a string to a basic stroke .
8664	Initialize chart data from xssfhart .
8665	Setup the chart data .
8666	Initializes the XSSFAnchorsMap .
8667	Initialize XSSFAnchorsMap for sheet .
8668	Returns the associate chart id for the given CTTwoCellAnchor .
8669	Get chart id from child node attributes .
8670	Build each object .
8671	Save data in context .
8672	Recalculates the formula .
8673	Gets the PoiCell with row col from tab .
8674	Gets the FacesCell with rowCol from the current page .
8675	Restore a data context .
8676	Returns the last collection object with the given full name .
8677	Is need restore boolean .
8678	Start restore data context .
8679	Shift row ref .
8680	Sets the first row reference .
8681	Set last row plus reference .
8682	Build the cells for a given row .
8683	Build a single cell .
8684	Read an object from a java . io file .
8685	Builds the category list .
8686	Builds the serial list .
8687	Build chart series in list .
8688	Get color list from dpt list with value list .
8689	Get a CTDPt from a list with the specified index .
8690	Sets the command index map .
8691	Gets the pictrues map .
8692	Gets the XSSFPictruesMap .
8693	indexPictureInMap indexPicture IndexPicture IndexPicture IndexPicture IndexPicture IndexPicture IndexPicture IndexPicture IndexPicture IndexPicture IndexPicture IndexPicture IndexPicture IndexPicture IndexPicture IndexPicture IndexPicture IndexPicture IndexPicture IndexPicture IndexPicture IndexPicture IndexPicture IndexPicture IndexPicture IndexPicture IndexPicture
8694	Generates a style string for a picture .
8695	Generate chart style string .
8696	Gets the size of the anchor .
8697	Returns the parser s pattern .
8698	Returns a streamed image of the current chart .
8699	Recovers the cell from the given sheet .
8700	Returns the cell style for a given cell .
8701	Gets the cell style .
8702	Returns the cell font color .
8703	Gets the cell font decoration .
8704	Gets the cell style .
8705	Gets the column style .
8706	Gets the alignment from a cell .
8707	Gets the vertical alignment from the cell style .
8708	Calculates the total height of a sheet .
8709	Setup the cell style .
8710	Get input type from cell type .
8711	Gets the resource paths for the given path .
8712	Gets the resource as stream .
8713	Removes the prefix path from a resource .
8714	Evaluate input type .
8715	Finds the bean with the given name .
8716	Joins an array of shorts into a string .
8717	Rounds a double value to a specified number of places .
8718	Gets the tab type .
8719	Gets the tab style .
8720	Returns the default date pattern .
8721	Gets the decimal separator by default locale .
8722	Gets the thousand separator by default locale .
8723	Sets the tie command alias list .
8724	Builds the form watch list .
8725	Builds the watch list for a given cell .
8726	Adds a new row to the watch list .
8727	Returns true if the given string is a command string .
8728	Parse widget attributes .
8729	Gets the attribute key in map by cell .
8730	Parse validation attributes from a comment .
8731	Finds the position of a pair bracket in a string .
8732	Parse command attributes .
8733	Parse input attributes .
8734	Parse validation attributes .
8735	Split by eual sign .
8736	Parse special attributes .
8737	Process calendar attributes .
8738	Process select item attributes .
8739	Gather special attributes .
8740	Parse a comment to a map .
8741	Find the first non - cell name position in a string .
8742	Removes all characters from a string .
8743	Returns the Excel column name for a given number .
8744	Converts a string to an int .
8745	Gets the cell by reference .
8746	Converts a short height unit to a pixel .
8747	Returns true if the given string is a valid date .
8748	Parse a date .
8749	Checks if the given string is a numeric string .
8750	Returns true if the given parameter should continue .
8751	Sets a property for an object .
8752	Compare this cell to another cell .
8753	Returns true if the given child is inside the given range .
8754	Removes all hidden columns from a sheet .
8755	Delete hidden columns in a row .
8756	Delete a cell from a row .
8757	Processes a system event .
8758	Refreshes the cell after the status changed .
8759	Validate with row column in current page .
8760	Validate by tie web sheet validation bean .
8761	Checks the error message from the object in the context .
8762	Validate all rules for single cell .
8763	Validate a cell .
8764	Validate a cell .
8765	Validate the current page .
8766	Validate row in current page .
8767	Validate a row .
8768	Refreshes the cells in the current page .
8769	Refreshes the cells in the given row .
8770	Sets the submit mode in the view .
8771	Pre - validates the current page .
8772	Clears this cell .
8773	Loads the header rows .
8774	Loads the header row without the configuration tab .
8775	Fills the header cells to the maximum number of columns .
8776	Gets header column style .
8777	Gets the width style .
8778	Loads the header row with the configuration tab .
8779	Gets the column width style .
8780	Clears the workbook .
8781	Initializes the tabs .
8782	Loads the data .
8783	Refreshes the data for this sheet .
8784	Refresh the data for the given row .
8785	Refreshes the data for a cell .
8786	Finds the tab index with the given tab name .
8787	Loads the work sheet .
8788	Prepare work sheet .
8789	Sets the data table page .
8790	Saves the objects in the view map .
8791	Setup the row info .
8792	Loads the body rows from the sheet .
8793	Assembles a FacesBodyRow .
8794	Refresh a Cached Cell .
8795	Process a refresh cell .
8796	Creates the dynamic columns for a tab .
8797	Add a repeat row .
8798	Refreshes the body rows in the range .
8799	Sets the unsaved state .
8800	Returns true if the view has not been saved .
8801	Returns the common constructor for the given type .
8802	Write input stream to output stream .
8803	Writes a long .
8804	Writes a string to a writer .
8805	Sets the traffic statistics tag .
8806	Adds a bitmap .
8807	Add a file descriptor .
8808	Removes the parameter with the given name .
8809	Adds a header to the request .
8810	Clears this request .
8811	Calls the StreamingPlayer to play the specified volume .
8812	Called when the player stops playing .
8813	Bind to streaming service .
8814	Unbinds the radio .
8815	Drops the listener .
8816	Stores the image to disk .
8817	Converts an InputStream to a String .
8818	Converts an input stream to a string .
8819	Sends data to the specified output stream .
8820	Returns the number of bytes that are available .
8821	Closes the pool .
8822	Reads a single int from the stream .
8823	Resets the stream .
8824	Sends a start message to the client .
8825	Sends the content disposition header to the specified output stream .
8826	Sends the content type header .
8827	Send the transfer encoding header .
8828	Send end of header .
8829	Send end message .
8830	Sends the specified parts to the specified OutputStream .
8831	Returns the number of bytes in the given part array .
8832	Checks if the given URI is a redirect .
8833	Sends a NOT_MODIFIED response .
8834	Sets the date header .
8835	Sets the date and cache headers for the HTTP response .
8836	Sets the content type header for the given file .
8837	Closes a channel on flush .
8838	Sends the decision header to the client .
8839	Sends data to the given OutputStream .
8840	Installs the cache with the given version .
8841	Ensures that the working directory exists .
8842	Gets a cache response .
8843	Creates a new body input stream .
8844	Resets the bitmap .
8845	Get a WebsockifySslContext .
8846	Validate a keystore .
8847	Replaces the current scale type with the given one .
8848	Stops the location listening .
8849	Gets a PendingIntent .
8850	Disconnects the given URLConnection .
8851	Bind to the Goro service .
8852	Unbinds this service from the application service .
8853	Notifies the ViewLoadListenerProvider that the view has changed .
8854	Opens a channel .
8855	On accept data .
8856	Override this method to handle the onReset event .
8857	Waits for the loader to load .
8858	Sets the text or hides it .
8859	Hides soft input from the text view .
8860	Show soft input .
8861	Toggles soft input from the text view .
8862	Returns the width of the pixels .
8863	Called when an exception is thrown on a connection .
8864	Clears the cache for the given URL .
8865	Populates an image with the given URL .
8866	Cancels the loading of an image .
8867	Creates an image consumer for the given view .
8868	Sets the result image .
8869	Sets the loading image .
8870	Starts a new loader task .
8871	Adds an image to the cache .
8872	Releases a byte array .
8873	Called when a URL connection is prepared .
8874	Adds a parameter to the request .
8875	Attempts to connect to GINGERBREAD_MR1 .
8876	Returns the MD5 hash of the given text .
8877	Returns the String identifying the given integer .
8878	Returns the String identifying the given Cubas instance .
8879	Checks if the given result is CUBLOS_STATUS_SUCCESS .
8880	Checks if the last result is a cublas error .
8881	Adds a lexeme to the list of lexemes .
8882	Adds a new ending with the given id .
8883	Returns the estimate for the given wordform .
8884	Prints a long description .
8885	Verify and set KamolsAttribute .
8886	Converts an AttributeValues to a Kamols Markup .
8887	Verify and set AVSAttribute .
8888	Removes Kamols MarkupFormating from a tag .
8889	Returns a list of metric data for this application .
8890	Gets the query string .
8891	Process a JsonNode into a List of MetricData .
8892	Parses the given json string and returns a list of AppInfo objects .
8893	Gets the connection configuration .
8894	Performs a metric query .
8895	Create a GenericodeReader for the GC04 Code List .
8896	Create a GenericodeReader to execute read .
8897	Create a GenericodeReader to execute read .
8898	Creates a GenericodeReader for reading GC10 code lists .
8899	Create a GenericodeReader to execute read .
8900	Create a GenericodeReader to execute read .
8901	Returns the id of a column .
8902	Returns the value of the given column in the given row .
8903	Returns the column with the given ID from the given column set .
8904	Get all key ids .
8905	Returns the key with the given ID from the given column set .
8906	Checks if the given column is a key column .
8907	Creates a new column .
8908	Creates a key for a given column .
8909	Sets the number of lines to skip .
8910	Adds a column at the specified index .
8911	Create a GenericodeWriter to write the GC04 code list .
8912	Creates a GenericodeWriter to write the GC04 code list set .
8913	Creates a GenericodeWriter for the GC04 column set .
8914	Create a GenericodeWriter to write a GC10 code list .
8915	Creates a GenericodeWriter to write the GC10 code list set .
8916	Creates a GenericodeWriter for the GC10 column set .
8917	Create a GenericodeValidator to validate the GC04 code list .
8918	Create a GenericodeValidator to validate the GC04 code list set .
8919	Create a GenericodeValidator to validate the GC04 column set .
8920	Create a GenericodeValidator to validate the GC10 code list .
8921	Create a GenericodeValidator to validate the GC10 code list set .
8922	Create a GenericodeValidator to validate the GC10 column set .
8923	Sends the logs to the server .
8924	Sets the logging context .
8925	Gets the logger level .
8926	Returns a boolean representation of the capture .
8927	Sets the maximum size of the log file to store .
8928	Prepends the given JSONObject to the given message .
8929	Append the stack metadata to the given JSONObject .
8930	Creates a JSONObject .
8931	Logs the location .
8932	Sets the user identity .
8933	Reads a byte array from a file .
8934	Starts the location updates .
8935	Sizes the given region by the given number of entries .
8936	Sizes a partitioned region .
8937	Size replicated or local region .
8938	Reads a snapshot record .
8939	Dumps the data to a PrintWriter .
8940	Gets the time values since idx .
8941	Converts a file to a chart .
8942	Returns a pool for a given server name .
8943	Gets the pool for the locator .
8944	Checks if a region exists on the server .
8945	Gets a member from a JMX object .
8946	Returns a list of host names for the given JMX .
8947	Looks up the network host .
8948	Is error and send exception boolean .
8949	Executes a function and returns a collection of results .
8950	Flattens a collection of objects into a collection of objects .
8951	Executes a query and returns a collection of ReturnType objects .
8952	Creates a new CacheListenerBridge for the after - put event .
8953	Creates a new CacheListenerBridge for after deletion .
8954	Handle exceptions .
8955	Gets the onRegionFilterKeyFacts array .
8956	Executes the given function .
8957	Returns a list of host names for the given JMX .
8958	Executes a function on a region .
8959	Returns the app name for the given resources .
8960	Construct the security - client - auth .
8961	Returns the region with the given name .
8962	Returns the region with the given name .
8963	Constructs a comparison between two map .
8964	Returns true if valueTimeStamps must be inserted .
8965	Closes this resource .
8966	Converts a directory to a CSV file .
8967	Main entry point for the stats reader .
8968	Reconnects to the JMX server .
8969	Stop all members on the given host .
8970	Shuts down a member .
8971	Shut down all members of a JMX .
8972	Shuts down the redundancy zone .
8973	Store pagination map .
8974	Read results by page map .
8975	Imports a region .
8976	Checks if remote locators and locators match .
8977	Executes the function .
8978	Builds the region check sum map .
8979	Returns the value of the given column name .
8980	Returns true if the given typeMirror is a type of the given type .
8981	Serialize an object to a byte array .
8982	Deserializes a byte array .
8983	Creates a new instance of the given class .
8984	Check for table id .
8985	Check for fields .
8986	Checks if the given element is a supertype of the given type .
8987	Returns the schema .
8988	Writes Java code from Shillelagh .
8989	Emit get id .
8990	Returns an observable representation of this query .
8991	Checks that the given column name is equal to the declared field .
8992	Returns the value of a string or the default string if the string is blank .
8993	Capitalizes the given string .
8994	Checks if the given typeMirror is a type of the given type .
8995	Returns a builder for descending queries .
8996	Reads the temperature from the device file .
8997	Returns the cursor method value for the given type .
8998	Prints a message to the messenger .
8999	Prints an error message .
9000	Gets the icon fonts .
9001	Returns a list of Google Material Design icons .
9002	Creates the sld editor layout .
9003	Gets the background decoration .
9004	Returns the power of a given point raised by the given pexponent .
9005	Sets the values .
9006	Returns the int power of a given BigDecimal .
9007	Returns the root of a BigDecimal .
9008	Exp Taylor .
9009	Converts a BigDecimal to a Newton BigDecimal .
9010	Converts a Newton to a BigDecimal
9011	Returns an arctan representation of a BigDecimal .
9012	Returns arctan Taylor .
9013	Returns the sqrt of a BigDecimal .
9014	Prints the PI of a string .
9015	Returns the timestamp for a given time .
9016	Sets the minimum and maximum limits .
9017	Puts a float into the map .
9018	Prints the number of counters .
9019	Adds a new complex to this one .
9020	Subtracts a complex from this one .
9021	Multiply this Complex by z .
9022	Divides a complex into two complexes .
9023	Sets the matrix .
9024	Returns the RowVector for the specified row .
9025	Returns the ColumnVector for the specified column .
9026	Sets the array of values .
9027	Transposes this matrix into a new matrix .
9028	Adds a matrix to this matrix .
9029	Subtracts a matrix from this matrix .
9030	Multiply this matrix by k .
9031	Multiplies this matrix by the given matrix .
9032	Prints the specified width to the specified output stream .
9033	Sets the image resource .
9034	Validate the coefficients .
9035	Compute the next position of the function .
9036	Clears this sld .
9037	Converts a StyledLayerDescriptorInfo to an XML file .
9038	Converts a RawSld to a StyledLayerDescriptorInfo .
9039	Validate a styled layer descriptor .
9040	Validate a raw sld .
9041	Computes the area between two points .
9042	Sets this matrix to the given matrix .
9043	Sets the specified values .
9044	Returns the inverse of this matrix .
9045	Returns the determinant of this matrix .
9046	Returns the standard deviation .
9047	Solve a column vector .
9048	Prints a decomposed matrix .
9049	_forwardElimination Method .
9050	Returns a new ColumnVector with a forward substitution .
9051	Returns a new ColumnVector that represents the back substitution of a column vector .
9052	Improves the residuals of the matrix .
9053	Converts a SquareMatrix to a SquareMatrix
9054	Returns the next VonNeumann .
9055	Do iteration procedure .
9056	Computes the next position of the function .
9057	Throws an exception if the position is not changed .
9058	Computes the next position of the function .
9059	Checks if the given intervals are valid .
9060	Adds a new element to this list .
9061	Multiply by m .
9062	Returns the value of pbase with the given pexponent .
9063	Do iteration procedure .
9064	Gets the sld manager .
9065	Converts a long value to a char bit array .
9066	Decomposes a set of bits .
9067	Prints a PW .
9068	Validate float biased exponent .
9069	Validate float unbiased exponent .
9070	Validate the double - biased exponent value .
9071	Validate the double unbiased exponent .
9072	Creates the SldGwtService asynchronously .
9073	Returns the next central value .
9074	Returns the next polar .
9075	Returns the next ratio .
9076	Creates a prime sieve .
9077	Computes the factors of a given integer .
9078	Do iteration procedure .
9079	Computes the next position of the function .
9080	Throws an exception if the position is not changed .
9081	Sets the java fx application .
9082	Sets the configuration file .
9083	Sets the default configuration for the reader .
9084	Initialize fxml loader .
9085	Adds a latlng parameter to the request .
9086	Gets the host - port pair from the service instance .
9087	Returns the applicable attribute definition for the given UUID .
9088	Evaluates the given attribute definition .
9089	Sanitizes a tag .
9090	Sets the address of the request .
9091	Adds a map of components to the request .
9092	Returns a collection of service names .
9093	Returns a collection of ServiceInstances matching the given name .
9094	Returns a list of all collaborations to be logged in .
9095	Gets the meta data for decimal as .
9096	Change password for logged in user .
9097	Get a list of all users .
9098	Gets the gravatar for an email address .
9099	Returns the gravatar for the given user .
9100	Populate from elasticsearch json .
9101	Gets the ElasticSearchFieldType .
9102	Create a flow step .
9103	Update a flow step .
9104	Get a flow step by id .
9105	Get FlowStep by step .
9106	Returns a list of all the steps for the given flow parameter .
9107	Delete a flow step .
9108	Force delete flow step .
9109	Populate the table fields .
9110	Close the ABaseES connection .
9111	Handles a message .
9112	Called when the connection is closed .
9113	Gets the ECHO messages from the given return value .
9114	Returns a list of personal inventory items .
9115	Create a table record .
9116	Delete a form container .
9117	Gets the form flow historical data .
9118	Gets the form and field historical data .
9119	Gets the most recent form and field historical data .
9120	Locks the form container .
9121	Unlocks a form container .
9122	Unlock a form container .
9123	Map a form container to a ResultSet .
9124	Converts a role list parameter to a list of objects .
9125	Create a form definition .
9126	Updates the form definition .
9127	Gets the form definition by id .
9128	Gets the form definition by name .
9129	Returns a list of all forms for the given logged in user .
9130	Delete a form definition .
9131	Gets the storage key from the formDefIdContId and formFieldId parameters .
9132	Initialize XMemcachedClient .
9133	Shuts down the MemCache client .
9134	Parse a string to a long .
9135	Converts an input document to a PDF file .
9136	Gets the field values for a form from the cache .
9137	Create a flow step rule entry .
9138	Create FlowStepExitRule .
9139	Create a FlowStepRule .
9140	Updates the flow step entry rule .
9141	Update the flow step exit rule .
9142	Update the flow step rule .
9143	Moves the flow step rule entry up .
9144	Moves the flow step entry rule down .
9145	Delete a flow step rule entry .
9146	Delete a flow step exit rule .
9147	Delete a FlowStepViewRule
9148	Initializes the session .
9149	Returns a list of all user queries .
9150	Get a list of all roles .
9151	Gets the service ticket as hex upper .
9152	Creates a text - masked field .
9153	Creates a field with a text barcode .
9154	Create a field with a decimal spinner .
9155	Create a field with a decimal slider .
9156	Create a table field .
9157	Updates a field s text .
9158	Updates a field s text barcode .
9159	Updates a field s decimal spinner .
9160	Update a field s decimal slider .
9161	Update a field s table .
9162	Returns the field with the given name .
9163	Get fields by form name and logged in user .
9164	Get fields by form type id and logged in user .
9165	Delete a field .
9166	Forcibly deletes a field .
9167	Gets the meta data for a table field .
9168	Updates the value of the user field .
9169	Gets or creates an indices .
9170	Create a flow .
9171	Update a flow .
9172	Get a flow by id .
9173	Get a flow by name .
9174	Delete a flow .
9175	Force delete a flow .
9176	Updates the global field value .
9177	Returns a list of all global field values .
9178	Gets the form definition id and title .
9179	Decrypts the initial packet .
9180	Closes and cleans the ABaseClientWebSocket connection .
9181	Initialize a new request .
9182	Gets the exception message verbose .
9183	Create a new admin user .
9184	Gets the access token .
9185	Returns information about a user profile .
9186	Execute a JSON object .
9187	Executes a form .
9188	Get json response handler .
9189	Checks if the connection is valid .
9190	Gets the HTTP client .
9191	Gets the path to fluid specific trust store .
9192	Closes the connection .
9193	Returns a list of FlowItems for a given JobView .
9194	Send a form to a flow .
9195	Called when the connection is closed .
9196	Called when a message is received .
9197	Sends a JSON Message to the Fluid client .
9198	Sends a message to the remote endpoint .
9199	Closes the user session .
9200	Executes a native SQL query synchronously .
9201	Request a license .
9202	Apply a license .
9203	Creates a text plain field .
9204	Creates the paragraph text plain field .
9205	Creates the field parameter text HTML .
9206	Create field MultiChoiceSelectMany .
9207	Create a date - time field .
9208	Updates the TextPlain field of the route field .
9209	Updates the text of a field .
9210	Update a field s date and time .
9211	Updates a field s decimal position .
9212	Update the route field value .
9213	Create a field value .
9214	Gets the configuration by key .
9215	Returns a list of all configurations .
9216	Creates an attachment .
9217	Returns the attachment with the given id .
9218	Deletes an attachment .
9219	Forcibly deletes an attachment .
9220	Parse a jar file .
9221	Sets the classloader for the given jar file .
9222	Throws a ParsingException if the element is not the parent of the XSD schema .
9223	Throws an exception if the XSD schema is not a parent of the XSD schema .
9224	Throws a ParsingException if the attribute is not present .
9225	Gets the schema node .
9226	Throws an exception if the parent element is not an XSD schema .
9227	Throws an exception if the parent element is not an XSD schema .
9228	Converts the given value to a T .
9229	Creates a Cli interface .
9230	Creates a Cli instance with the given options .
9231	Parse a set of arguments from a class .
9232	Parse arguments using instance .
9233	Creates a URL builder for the given path .
9234	Removes a footer view .
9235	Returns the value of p .
9236	Computes the 3D gradient of noise .
9237	Returns the 3D noise value for the given coordinates .
9238	Returns the 3D noise of the given coordinates .
9239	Computes the cubic interpolation between two numbers .
9240	Returns the scurve of a curve .
9241	Sets the bounds between the current lower and upper bounds .
9242	Process a CloudTrailEvent .
9243	Process a CloudTrailEvent .
9244	Returns the account id for the CloudTrail event .
9245	Applies a rule entity to a violation entity .
9246	Gets the event serializer .
9247	Creates a file with the given name .
9248	Creates a directory .
9249	Restores all properties .
9250	Creates the implementation map .
9251	Adds a new object to the collection .
9252	Sets a property .
9253	Gets the array property .
9254	Returns the next state for the given action .
9255	Processes the queue .
9256	Returns the value associated with the given type .
9257	Gets the parameterized type .
9258	Returns the type variable for the given type .
9259	Prints the stack trace from the given stream .
9260	Prints the stack trace to the given writer .
9261	Replaces the given object with a remote object .
9262	Runs the task .
9263	Sets the task .
9264	Checks if a task has been accepted .
9265	Checks if a task has been rejected .
9266	Returns true if the task has started .
9267	Returns true if the task has completed .
9268	Stops the given task .
9269	Gets the JobImpl .
9270	Adds a job to the list .
9271	Converts a mode name to a blocking mode .
9272	Read a resolved object from the stream .
9273	Sets up the xml reader .
9274	Adds a reader for the given mime type .
9275	Copies the reader map to a new Catalog .
9276	Creates a new catalog instance .
9277	Load system catalogs .
9278	Parse the catalog from the given URL .
9279	Parse pending catalogs .
9280	Parse a catalog file .
9281	Parses an unknown entry in the catalog .
9282	Parse all catalogs .
9283	Resolve the doctype for the given publicId and systemId .
9284	Resolves a document .
9285	Resolves a system .
9286	Resolves a local URI .
9287	Resolve subordinate catalogs .
9288	Makes the given sysid absolute .
9289	Normalizes a URI .
9290	Encodes the given integer as a byte .
9291	Adds a delegate to a catalog entry .
9292	Creates a new soft value reference .
9293	Fires a throwable on all registered listeners .
9294	Adds a throwable to the stack .
9295	Create implementation .
9296	Compares this task to another task .
9297	Returns the value of this address .
9298	Returns the object at the given index .
9299	Sets an object at the given index .
9300	Maintains the vm .
9301	Adds a new entry type .
9302	Returns the entry type for the given name .
9303	Returns the number of entries of the specified type .
9304	Returns the entry argument for the given argument number .
9305	Sets the context class loader .
9306	Swaps two ints .
9307	Removes a node from the queue .
9308	Cleans up a timeout .
9309	Loads a class .
9310	Loads the protocol .
9311	Creates a URLStreamHandler for the given protocol .
9312	Check if the handler pkgs are valid .
9313	Returns the value of this object .
9314	Create implementation .
9315	Makes a LongCounter synchronized .
9316	Converts a LongCounter to a linear LongCounter .
9317	Returns true if the extension is in the namespace stack .
9318	Checks if a stream notification has been received .
9319	Rebinds the given name to the given target object .
9320	Gets the object instance .
9321	Substitute a string .
9322	Splits a string by a delimiter .
9323	Joins an array of bytes into a single string .
9324	Converts an object to a string .
9325	Returns the value as a String .
9326	Creates a new thread safe map .
9327	Returns the value associated with the given key .
9328	Returns the value associated with the given key or null if there is no such key .
9329	Removes a timed entry from the map .
9330	Flushes the cache .
9331	Returns a list of valid keys .
9332	Sets the resolution of this timer .
9333	Gets a TimedEntry by key .
9334	Returns an iterator over all the children of the given element with the given tag name .
9335	Returns a unique child element with the given tag name .
9336	Returns the optional child element with the given tag name .
9337	Returns the content of the given element .
9338	Returns the unique child content for the given element .
9339	Returns the content of the given element with the given tag name .
9340	Sets the maximum queue size .
9341	Sets the blocking mode .
9342	Sets the blocking mode name .
9343	Executes the TaskWrapper .
9344	Resolves a system .
9345	Resolves a public with a system id .
9346	Resolves an external system .
9347	Resolves an external public .
9348	queryResolver Method .
9349	Appends a vector to the end of the list .
9350	Resolves all system reverses .
9351	Resolves a system reverse .
9352	Resolves all catalogs for a given system .
9353	Resolve all local system .
9354	Resolves all subordinate catalogs .
9355	Reads a catalog from a file .
9356	Reads the catalog from the given input stream .
9357	Connects to a file .
9358	Gets the output stream .
9359	Cas next update .
9360	Help delete a node .
9361	Returns the value of the base header or null if not found .
9362	Creates a snapshot entry .
9363	Cas right update .
9364	Creates a logger .
9365	Returns a list of objects .
9366	Returns the short name of the class .
9367	Returns the implementation of this class as a string .
9368	Returns an iterator of the names of the properties .
9369	Returns the property group for the given basename .
9370	Returns a compatible constructor for the given type and value type .
9371	Creates a copy of the given object .
9372	Dereferences an object to the expected type .
9373	Initializes the JNDI object .
9374	Updates the jndi cache .
9375	Returns the key set .
9376	Returns a set containing the defaults .
9377	Remove a property listener .
9378	Fires a property added event to all registered listeners .
9379	Fires a property removed event to all registered listeners .
9380	Notifies all registered listeners that a property has changed .
9381	Notifies all registered listeners that a property has changed .
9382	Creates a prefixed property name .
9383	Loads the properties from a PropertyReader .
9384	Loads a class .
9385	Returns the property group with the given basename and index .
9386	Returns true if the entity is resolved .
9387	Resolves a system id .
9388	Resolve the system id as a URL .
9389	Resolves the classpath name .
9390	Sets the value as a string .
9391	Normalizes a publicId .
9392	Encodes a PublicId into a URN .
9393	Decodes a URN .
9394	Replace a string with a new string .
9395	Starts the application . If reset is true the application will start immediately .
9396	Stops the engine .
9397	Make a StopWatch synchronized .
9398	Compares this object with the given object .
9399	Generates a hashcode from a byte array .
9400	Generates a hashcode from an array of objects .
9401	Creates the list .
9402	Sets the value of a field .
9403	Reads the next token from the cat file .
9404	Initializes the date editor .
9405	Adds a vertex to the list .
9406	Sets the root vertex .
9407	Removes a vertex .
9408	Performs a depth first search of the vertex .
9409	Visit a vertex and mark it as a spanning tree .
9410	Finds a vertex by its data .
9411	Returns an array of all the cycles in this vertex .
9412	Normalizes a string .
9413	Parses the given XML string into an Element .
9414	Parse an XML document from an input stream .
9415	Parse the given InputSource into an Element .
9416	Creates a new element with the given local part .
9417	Resolves a qualified name for the given element .
9418	Copy attributes from destElement to srcElement .
9419	Returns true if the given node has any child elements .
9420	Returns an iterator of all child elements of the given node .
9421	Returns the text content of the given node .
9422	Returns an iterator over all child elements of a given node .
9423	Returns the parent element of the given node .
9424	Adds a resource to the queue .
9425	Reads the catalog from an input stream .
9426	Read a catalog from a file .
9427	Returns the host address .
9428	Resolves an entity .
9429	Sets the system property class value .
9430	Displays information about a class .
9431	Append a description of a class to a StringBuffer .
9432	Strips the package name from the given class name .
9433	Returns the package name of a class .
9434	Forcibly loads a class .
9435	Returns the primitive wrapper for the given type .
9436	Returns a list of all interfaces for the given class .
9437	Returns an array of all the unique interfaces of the given class .
9438	Returns true if the given class is a primitive wrapper .
9439	Creates a new instance of the given class .
9440	Returns the getter method for the given attribute .
9441	Gets the attribute setter method .
9442	Converts a string to a Java class .
9443	Returns a system property .
9444	Gets the filenames of a property .
9445	Removes weak objects from the queue .
9446	Returns an iterator over the elements in this set .
9447	Creates a URLLister for the given protocol .
9448	Returns the set of entries in this map .
9449	Add a BoundPropertyListener .
9450	Remove a BoundPropertyListener .
9451	Checks if a string is null .
9452	Finds a PropertyEditor for the given type name .
9453	Registers an editor .
9454	Converts the given text to the given type .
9455	Gets the context class loader .
9456	Checks if the given Throwable is an ApplicationDeadlockException .
9457	Schedules a timeout .
9458	Called by the thread pool to do the work .
9459	Creates a subcontext with the given name .
9460	Lookup an object with the given name and class .
9461	Checks that the given object is an instance of the given class .
9462	Appends information about a class to a string buffer .
9463	Returns the transition with the given name .
9464	Reads the properties from the catalog .
9465	Query the verbosity .
9466	Query the relative catalogs .
9467	Returns a list of catalogs .
9468	Returns the catalog files .
9469	Returns true if the resource is public or not .
9470	Query for the use static catalog .
9471	Resolve entity from publicId and systemId
9472	Resolves the given href to the given base .
9473	Makes the given URI absolute .
9474	Resolve a class .
9475	Invokes the setter for the given value .
9476	Returns the local name of the given element .
9477	Returns the namespace URI for the given node and prefix .
9478	Returns the namespace URI for the given element .
9479	Returns a list of elements in the given enumeration .
9480	Returns an InputStream for the given filename .
9481	Loads properties from a file .
9482	Reads a map of properties from the filesystem .
9483	Adds a new edge .
9484	Adds a new outgoing edge to this vertex .
9485	Adds an incoming edge to this vertex .
9486	Returns true if this edge contains the specified edge .
9487	Removes the specified edge .
9488	Finds an edge in this vertex or null if not found .
9489	Finds an edge .
9490	Returns the cost of a vertex .
9491	Creates a jar file .
9492	Returns true if the iterator has the next iteration .
9493	Fires an event to the task queue .
9494	Install jvm type provider .
9495	Cleans a folder .
9496	Dispatches an action to the application thread .
9497	Returns the action stream for the given action type .
9498	Creates the fxml path for the given view type .
9499	Converts a collection of records to a Stream of many records .
9500	Converts a collection of rights to a Stream .
9501	Converts a collection of rights to a stream of one .
9502	Converts a collection of rights to a stream of one - to - one rights
9503	Gets whether or not robots are allowed on a page .
9504	Executes the instruction generated .
9505	Starts the analyzer .
9506	Main method .
9507	Returns the degree of the sum of all words .
9508	Returns a map of class arguments .
9509	Override this method to inform a resource loader .
9510	Checks if the data source is valid .
9511	Returns an iterable of the specified type .
9512	Returns an array of the given class .
9513	Returns a list of objects of a given class .
9514	Returns a collection of tokens .
9515	Returns a list of all elements of the given class .
9516	Returns an Either instance of the given type .
9517	Returns an Either instance of the given right type .
9518	Checks if a validation failed for the given type .
9519	Returns a Validation instance of the given type .
9520	Returns a try of the given type if it is successful .
9521	Connect jdbc on with url and driver and username and password .
9522	Runs the given SQL in the database .
9523	Query in with sql .
9524	Returns the array as a boolean array .
9525	Returns a Query object for the given example .
9526	Called when a SQLite database is upgraded .
9527	Backups a table to the database .
9528	Restores a table from a CSV file .
9529	Sets the empty text .
9530	Dumps a table to a CSV file .
9531	Unescapes a CSV string .
9532	Gets the values from a csv row .
9533	Gets the csvPairs as a map .
9534	Converts a map to a CSV string .
9535	Join a list of strings into a single string .
9536	Joins an array of strings into a single string .
9537	Reads a database model from an index .
9538	Write to index .
9539	Inspects the entity s id .
9540	Returns the BaseDaoModel for the given entity .
9541	Gets the bind type .
9542	Import a SQLite database from a CSV file .
9543	Backup all tables to csv .
9544	Restore all tables from csv
9545	Writes the index to a file .
9546	Creates a query for the given entity manager .
9547	Creates a typed query .
9548	Renders the query .
9549	Delete the table with the given id .
9550	Saves an object to the cache .
9551	Updates the contents of an object .
9552	Adds an array of where - in items .
9553	Adds a subquery to the query .
9554	Returns the next active stack .
9555	Returns the empty intention stack .
9556	Adds a plan to the cache .
9557	Selects a plan based on the given policy .
9558	Selects a random plan .
9559	Sets the plan variables for the given agent .
9560	Returns the belief at the given index .
9561	Returns a copy of the parent byte array .
9562	Returns a copy of this byte array s children .
9563	Grows a byte array .
9564	Creates a logger .
9565	Steps up the body .
9566	Sets the goals .
9567	Pauses the scanner for user input .
9568	Initialize the intention selection pools .
9569	Initializes the intention selection threads .
9570	Start intention selection threads .
9571	Shutdown all intention selection threads .
9572	Registers a JillExtension .
9573	Resets the AObjectCatalog .
9574	Loads an agent .
9575	Processes the plans for a goal .
9576	Creates the agents in the catalog .
9577	Loads a class .
9578	Loads a JillExtension from the given class name .
9579	Checks if two objects have the same name .
9580	Returns the usage of the agent .
9581	Parse a configuration file .
9582	Parse argument with option .
9583	Evaluates a belief base .
9584	Returns the object at the given index .
9585	Finds an object by its name .
9586	Pushes an object to the queue .
9587	Returns the object at the specified index .
9588	Pushes an object to the stack .
9589	Pops the object .
9590	Returns the type of the given object .
9591	Returns true if the given belief matches the given query .
9592	Main method .
9593	Convert a String to a byte array .
9594	Posts a goal on the stack .
9595	Sends a message to an agent .
9596	Sends a message to the specified agent .
9597	Returns a byte array of goals .
9598	Creates a new belief set .
9599	Adds a belief to the beliefbase .
9600	Evaluates a query .
9601	Suspends the agent .
9602	Returns the belief set field with the given name .
9603	Registers a random number of neighbours .
9604	Builds the name .
9605	Runs all the agents .
9606	Returns true if the given execution stack is valid .
9607	Removes all active agents from the given set .
9608	Manages a goal .
9609	Shuts down the pool .
9610	Sets the idle state of an agent .
9611	Moves the disc from the specified position to the specified position .
9612	Initializes the AObjectCatalog .
9613	Waits until all pools are idle .
9614	Finishes the selection process .
9615	Returns true if all pools are idle .
9616	Returns the poolid of the given agent .
9617	Picks an expression .
9618	Sets the expression .
9619	Creates a JPA join expression .
9620	Finds or creates a join recursively .
9621	Finds or creates a join for the given property .
9622	Returns true if the end has been reached .
9623	Gets the upload stream .
9624	Handles a request .
9625	Returns true if the given parameter has the given value .
9626	Returns the parameter with the given name .
9627	Parse the parameters from the expression .
9628	Configures the transaction manager .
9629	Gets the target file for a given artifact .
9630	Writes the given artifact to the given file .
9631	Post - process an instance .
9632	Returns the declared constructor for the given implementation class .
9633	Builds a string representation of a configuration object .
9634	Returns the interface method for the given method .
9635	Returns the type of the given field .
9636	Gets the dependency value .
9637	Persists the temporary file .
9638	Sets the default link .
9639	Sets the default link template .
9640	Handle links .
9641	Handle header links .
9642	Handles the body links .
9643	Parse a link object .
9644	Returns the value of the given map or adds it if it does not exist .
9645	Handle Capabilities .
9646	Checks if a method is allowed .
9647	Registers the instance processor .
9648	Registers an instance factory .
9649	Registers an instance processor .
9650	Registers a class processor .
9651	Returns an instance of the given interface class .
9652	Adds a new argument .
9653	Creates the target file list .
9654	Convert this MarshalObject to an XML string .
9655	Initializes the constructor .
9656	Checks if the given template has a reference to the given template file .
9657	Creates a template model from a reader .
9658	Creates a template model from a file .
9659	Sets the request path .
9660	Gets a stoppable observable .
9661	Converts the given string to an object of the given type .
9662	Sets the value of a field .
9663	Add capture to logger .
9664	Remove an appender with the given name from the logger .
9665	Clears the appender with the given name .
9666	Reads a file from the http request .
9667	Parse the EMF model file .
9668	Resolves all proxies .
9669	Returns a list of files in the given directory .
9670	Parse a directory .
9671	Checks if the model is fully resolved .
9672	Finds all EObjects in the given resource set .
9673	Sets the model directories .
9674	Sets the file extensions .
9675	Sets the list of model resources .
9676	Reads the next record .
9677	Sets an array of values for a parameter .
9678	Sets the value of a boolean parameter .
9679	Executes a big - endian update .
9680	Converts a string to an object of the given type .
9681	Merges the given velocity template with the given artifact name .
9682	Returns the model directory .
9683	Returns the template directory .
9684	Writes a value to the response .
9685	Starts the web ui .
9686	Configures the web .
9687	Prints a QWebView .
9688	Writes the contents of an InputStream to an OutputStream .
9689	Invoke a method on a proxy .
9690	Attaches the request to the response .
9691	Detaches the object from the server .
9692	Gets the cookies associated with this request .
9693	Dump the message .
9694	Returns a list of invocation metrics .
9695	Initializes the EventStreamConfig object .
9696	Sets the remote host .
9697	Returns the parameter with the given name and type .
9698	Removes a prefix from the path .
9699	Returns the common directory between two files .
9700	Converts basePath to absPath .
9701	Converts a basePath to a relPath .
9702	Returns the dir depth of the given file .
9703	Dumps an error on an HTTP request .
9704	Sends a JSON object .
9705	Add a parameter template .
9706	Adds a list of ParameterizedTemplateModels .
9707	Initializes the parameterized template model .
9708	Returns a list of ParameterizedTemplateModel objects that have references to the given template file .
9709	Sets whether save is enabled .
9710	Delete the ConfirmDialog .
9711	Called when an element is deleted .
9712	Creates a new instance of the given managed class .
9713	Returns an array of files .
9714	Returns a summary of the results .
9715	Returns the summary row for the given directory .
9716	Gets the sub summary row .
9717	Creates a new instance of the given managed class .
9718	Gets the setup class .
9719	Returns the list of model directories .
9720	Gets the list of model resources .
9721	Sets the candidates for this item .
9722	Loads the configuration document from the given input stream .
9723	Called when an error occurs .
9724	Returns true if the given formal parameter array is an object .
9725	Read a JSON object from the given HTTP request .
9726	Reads a JSON object from an input stream .
9727	Extracts the parameter from a FitCell .
9728	Gets the hints .
9729	Checks if the request is an XHR request .
9730	Checks if the request is an android request .
9731	Handles an ElementEvent .
9732	Returns a list of properties with the given annotation .
9733	Returns the annotation for the given property descriptor .
9734	Logs a message .
9735	Performs a WHOIS lookup on the given domain .
9736	Check if jruby - has - parser for whoisHost
9737	Gets a managed class from the container .
9738	Gets a managed method from a managed class .
9739	Process Not contains exception .
9740	Processes a non - contains message .
9741	Returns the boolean value for the given column label .
9742	Returns true if the argument is a wrapper for the specified class .
9743	Serializes the given HTTP response .
9744	Returns the value of the cookie with the given name .
9745	Adds a cookie to the response .
9746	Removes the cookie with the given name .
9747	Returns an iterator over the cookies .
9748	Gets the target file list producer .
9749	Adds a field to the class .
9750	Compiles the class .
9751	Verifies that the response is equal to the given token .
9752	Returns the value of a file .
9753	Ensure trailing slash .
9754	Login with the given username and password .
9755	Gets the HttpServletRequest .
9756	Invoke a method on a proxy .
9757	Executes a mutable transaction .
9758	Executes an immutable transaction .
9759	Returns a list of all files in the directory .
9760	Returns the last file in the directory .
9761	Gets the concrete configuration .
9762	Checks if the request path starts with the given path component .
9763	Returns a list of artifact factories for the given model type .
9764	Gets the session for the given instance key .
9765	Serializes the given HTTP response .
9766	Reads the metadata from the file .
9767	Handles a request .
9768	Override tearDown to close the statement .
9769	Force close all stale event streams .
9770	Handle all allowed methods .
9771	Attempts to upload the blob .
9772	Deletes the data from the server .
9773	Extract the column parameters from a row .
9774	Gets the arguments names .
9775	Schedules a task for a given period .
9776	Timeout a task .
9777	Loads the repository configuration .
9778	Returns the next file in the cache .
9779	Configures the ChameRIA application .
9780	Prints the welcome banner .
9781	Prints a ChameRIA stopped banner .
9782	Creates a Chameleon instance .
9783	Registers a shutdown hook .
9784	Triggers a notification .
9785	Called when a trigger event is triggered .
9786	Inserts and replaces the given row .
9787	Returns the count of all files .
9788	setter for score - sets
9789	getter for variables - gets
9790	setter for variables - sets
9791	getter for questionType - gets
9792	setter for questionType - sets
9793	getter for token - gets
9794	getter for depLabel - gets
9795	setter for depLabel - sets
9796	getter for semanticType - gets
9797	setter for semanticType - sets
9798	getter for sections - gets
9799	setter for sections - sets
9800	indexed getter for sections - gets an indexed value -
9801	indexed setter for sections - sets an indexed value -
9802	getter for uris - gets
9803	setter for uris - sets
9804	getter for types - gets
9805	setter for types - sets
9806	getter for targetType - gets
9807	setter for targetType - sets
9808	getter for rank - gets
9809	setter for rank - sets
9810	getter for queryString - gets
9811	setter for queryString - sets
9812	getter for candidateAnswers - gets
9813	setter for candidateAnswers - sets
9814	getter for candidateAnswers - gets an indexed value -
9815	indexed setter for candidateAnswers - sets an indexed value -
9816	getter for query - gets
9817	setter for query - sets
9818	getter for hitList - gets
9819	setter for hitList - sets
9820	indexed getter for hitList - gets an indexed value -
9821	indexed setter for hitList - sets an indexed value -
9822	getter for abstractQuery - gets
9823	setter for abstractQuery - sets
9824	getter for searchId - gets
9825	setter for searchId - sets
9826	setter for docId - sets
9827	getter for offsetInBeginSection - gets
9828	setter for offsetInBeginSection - sets
9829	getter for offsetInEndSection - gets
9830	setter for offsetInEndSection - sets
9831	getter for beginSection - gets
9832	setter for beginSection - sets
9833	getter for endSection - gets
9834	setter for endSection - sets
9835	getter for aspects - gets
9836	setter for aspects - sets
9837	getter for triple - gets
9838	setter for triple - sets
9839	getter for sourceRelation - gets
9840	setter for sourceRelation - sets
9841	getter for subject - gets
9842	setter for subject - sets
9843	getter for predicate - gets
9844	setter for predicate - sets
9845	getter for isObjUri - gets
9846	setter for isObjUri - sets
9847	getter for operator - gets
9848	setter for operator - sets
9849	getter for operatorArgs - gets
9850	setter for operatorArgs - sets
9851	getter for concept - gets
9852	getter for score - gets
9853	getter for text - gets
9854	setter for text - sets
9855	getter for id - gets
9856	setter for id - sets
9857	getter for name - gets
9858	getter for abbreviation - gets
9859	setter for abbreviation - sets
9860	setter for concept - sets
9861	getter for variables - gets
9862	setter for variables - sets
9863	getter for namedEntityTypes - gets
9864	setter for namedEntityTypes - sets
9865	getter for conceptType - gets
9866	setter for conceptType - sets
9867	getter for occurrences - gets
9868	setter for occurrences - sets
9869	getter for concepts - gets
9870	setter for concepts - sets
9871	getter for originalText - gets
9872	setter for originalText - sets
9873	getter for arguments - gets
9874	setter for arguments - sets
9875	getter for label - gets
9876	setter for label - sets
9877	Returns the next clear bit at the given index .
9878	Sets the bit at the specified index .
9879	Frees a buffer .
9880	Creates a new instance of the CacheValue object .
9881	Rehashes an array of values to a new size .
9882	Converts this MonomerNotation to a HELM2 string .
9883	Checks if the brackets are in the parenthesis section .
9884	Adds the details to a string .
9885	Returns a HELM2 representation of the source unit and the target unit .
9886	Adds an element to this notation .
9887	Main method to parse a file .
9888	Checks if the given polymerId is valid .
9889	Checks if a polymerId is valid in the connection section
9890	Check connection details .
9891	Checks if a group ID is valid .
9892	Checks if the given string is repeating .
9893	Checks if the polymer is a peptide or a RNA .
9894	Converts this object to a JSON string .
9895	Returns the simple PolymerNotation for the given string .
9896	Returns the current GroupingNotation .
9897	Converts this polymer to HELM2 .
9898	Converts a polymer to a HELM2 string .
9899	Converts the list of connections to HELM2 .
9900	Convert a grouping to a HELM2 notation .
9901	Converts the annotation to HELM2 .
9902	Gets the polymer and grouping IDs .
9903	Returns the PolymerNotation with the given id .
9904	Sets the polymer elements .
9905	Converts a string to a HELM2 string .
9906	Sets the annotation for the given string .
9907	Sets the count for the given string .
9908	Determine which MonomerNotation to use .
9909	Returns a MonomerNotationGroupElement whose type is a MonomerNotation .
9910	Determines which HELM entity to use for the given string .
9911	Returns the value of this interval .
9912	Parse a string .
9913	Sets the RNA content .
9914	Defines the ambiguity of a string .
9915	Get the statistics for the worker thread .
9916	Creates a graph from a collection of edges .
9917	Creates a graph from a collection of nodes and edges .
9918	Initialize the paths .
9919	Returns a list of nodes sorted by reachability .
9920	Subscribes a method to a pattern .
9921	Returns the number of subscribers for the given pattern .
9922	Unsubscribes a function interface .
9923	Executes a return request .
9924	Simplified method form for invoking the ReturnSync operation .
9925	Returns true if the request is a poll request .
9926	Sends a shutdown message with the given reason .
9927	Throws an exception if the given exception requires non - local handling .
9928	Unlocks a run state .
9929	Creates a worker .
9930	Tries to add a worker .
9931	Register a worker thread .
9932	Deregister a worker thread .
9933	Signals that a WorkQueue is active .
9934	Runs the worker .
9935	Awaits work for a given number of spins .
9936	Returns the number of tasks that have been queued .
9937	Returns a WorkQueue for the common submitter pool .
9938	Returns the number of tasks that need to be completed by the external helper .
9939	Submits a ForkJoinTask .
9940	Creates a ForkJoinPool .
9941	Gets a value from the pool .
9942	Builds a string from the given AStatement1 .
9943	Gets the statistics for the thread pool .
9944	Creates a list from the given elements .
9945	Reverses this list .
9946	Returns true if all elements of the given Iterable satisfy the given predicate .
9947	Folds an Iterable to the left .
9948	Folds the given list to the right using the given function .
9949	Pushes a task to the pool .
9950	Converts a nullable to an AOption .
9951	Creates an ALongHashMap from keys and values .
9952	Returns an empty map .
9953	Creates an AListMap from the keys and values of two iterables .
9954	Converts an Iterable of keys and values into an AListMap .
9955	Returns a set of keys .
9956	Normalizes a resource name .
9957	Marshals a BoundType to a String .
9958	Returns a subsequence of this string .
9959	Returns a binary search for the elements in the given list .
9960	Returns a binary search for the element at the specified index using the specified comparator .
9961	Creates a future that sends the given email .
9962	Sends an email .
9963	Bind a RouteBinding .
9964	Binds the filter to the given handler .
9965	Show tag body .
9966	Returns the value of a Long as an int .
9967	Remove duplicate strings from the given array .
9968	Returns a string like the given value .
9969	Runs this run .
9970	Login a user .
9971	Gets the login user from the cookie .
9972	Gets the login user .
9973	Checks if a password is valid .
9974	Save a user in a cookie .
9975	Gets the login key .
9976	Creates a CookieUser for the given uuid .
9977	Forwards the request to the given context .
9978	Appends a file separator to the given path .
9979	Returns the value of the given parameter as a long .
9980	Debug a message .
9981	Returns information about the caller at the given level .
9982	Converts a char array to a byte array .
9983	Converts a CharSequence to a byte array .
9984	Converts a byte array to a simple char array .
9985	Converts a CharSequence to an ASCII byte array .
9986	Looks up the localized data for the given locale code .
9987	Schedules a task to be executed in the specified number of seconds .
9988	Crops the image .
9989	Schedules the given Invocation in milliseconds .
9990	Invokes the given direct invocation in the thread .
9991	Gets the rest operations .
9992	Renders an AJAX error message .
9993	Renders a forbidden ajax message .
9994	Creates a template for the given view .
9995	Parse currentActionPath and url .
9996	Render data tables .
9997	Render empty data tables .
9998	Sets the items of the combo box .
9999	Sends the response to the given context .
10000	Returns a list of all types of the given injector .
10001	Returns the current method .
10002	Compacts the memory .
10003	Propagate metrics collection .
10004	Encodes a string .
10005	Returns the charset for the given file .
10006	Copies the contents of an input stream to an output stream .
10007	Copy a number of bytes from the input stream to the output stream .
10008	Copy the contents of an InputStream to a Writer .
10009	Copy the contents of a Reader to a Writer .
10010	Copy a number of characters from a Reader to a Writer .
10011	Copies the contents of a Reader to an OutputStream .
10012	Copy the contents of a Reader to an OutputStream .
10013	Compares two input streams .
10014	Compares two Readers .
10015	Applies the given io to the pipeline .
10016	Returns the SQL node for the given group name and id .
10017	Unmarshals a string .
10018	Unzips a zip file into a directory .
10019	Creates a PermissionDialogFragment from a PermBean .
10020	Called when the dialog resumes .
10021	Adds the core value type .
10022	Returns true if the given regex matches the given value .
10023	Returns true if the given string is mobile .
10024	Checks if the given string is a phone number .
10025	Returns true if the given string is a birthday day .
10026	Checks if the given string is a valid URL .
10027	Returns true if the given string is a valid date time .
10028	Executes a servlet filter .
10029	Encodes the given string in Base64 .
10030	Decodes a Base64 - encoded string .
10031	Converts a hex string to a byte array .
10032	Reads the UTF - 8 properties from an input stream .
10033	Reads the content of an input stream as a string .
10034	Reads the contents of a file as a string .
10035	Writes a byte array to a file .
10036	Copies the source directory to the target directory .
10037	Serializes an XML document to a string .
10038	Constructs a Document object from the given file .
10039	Constructs a Document object from the given XML string .
10040	Gets a Document object from an input stream .
10041	Validates the XML signature for the given public key .
10042	Signs a document using the given public key and private key .
10043	Returns true if the given class is cache safe .
10044	Returns true if the given class is a primitive array .
10045	Returns true if the given class is a primitive wrapper array .
10046	Resolves a primitive class if necessary .
10047	Returns true if lhsType is assignable from rhsType .
10048	Checks if the given value is assignable to the given type .
10049	Returns all interfaces for the given instance .
10050	Returns all interfaces of the given instance as a set .
10051	Writes brikar - tempconfig - to a temporary file .
10052	Returns a map of variables for the given URI .
10053	Add a message to the PermBean .
10054	Creates a druid plugin .
10055	Binds the given class to the given extension point .
10056	Returns the built - in object for the given type .
10057	Returns the primitive type of the given type .
10058	Converts the given object to the given type .
10059	Converts the user defined value type to the given object .
10060	Executes a query on the specified type .
10061	Returns the cookie with the given name .
10062	Returns the session object for the given type and name .
10063	Initialize the data source .
10064	setFtlSharedVariable Method .
10065	Sets the value of a parameter .
10066	Sets the value of a parameter .
10067	Shows the permission dialog .
10068	Returns true if all values are granted .
10069	Returns true if any of the given values is denied .
10070	Finds records by a SQL select .
10071	Find the first record in the Query SqlNode .
10072	Returns true if the given column is a new value .
10073	Returns true if the given method declares an exception of the given type .
10074	Processes the queue .
10075	Adds a value to the map .
10076	Checks if the given string matches the given pattern .
10077	Reads the arguments of an interface class .
10078	Returns the protobuf entity for the given class .
10079	Checks if the class is a protobuf entity .
10080	Gets all protobuf fields of a given class .
10081	Returns the protobuf getter for the given field .
10082	Returns the setter for the given field in the protobuf attribute .
10083	Returns the thread - specific mapper .
10084	Gets the JsonFactory .
10085	Converts an object to a JSON string .
10086	Sets the borders .
10087	Get user record .
10088	Copies the attributes from the JMX object to the target object .
10089	Copy out attributes from a JMX object to a target object .
10090	Returns the property associated with the given key .
10091	Sets a property .
10092	Adds the app to the frame .
10093	Saves a token .
10094	Returns the access token .
10095	Returns the default class loader .
10096	Returns the URL of the resource with the given name .
10097	Gets the resource as stream .
10098	Gets the class as stream .
10099	Initializes p_other .
10100	Initializes the scheme name .
10101	Initializes the path from the given URI spec .
10102	Sets the scheme .
10103	Sets the user info .
10104	Sets the host .
10105	Set the port number .
10106	Appends a path to the URI .
10107	Sets the query string .
10108	Sets the fragment .
10109	Gets the URI string .
10110	Creates a PreparedStatement based on an Iterator .
10111	Initializes the service .
10112	Returns the muffin for the given parameter .
10113	Sets the muffin .
10114	Returns the contents of the clipboard .
10115	Set the contents of the clipboard .
10116	Opens a file stream .
10117	Loads services by type .
10118	Sets the service parameters for the given operation .
10119	Returns the service parameters for the given operation .
10120	Returns the parametrized operation with the given id .
10121	Returns the first instance of the given class in the given collection .
10122	Parse a query response .
10123	Returns an iterator over the elements in this buffer .
10124	Returns the encoding of the given xml string .
10125	Returns the parent logger .
10126	Returns an instance of the JdbcLogConnection .
10127	Returns the authorization code for the given authorization URL .
10128	Visit a package declaration .
10129	Visit a class declaration .
10130	Visits an ExecutableDeclaration .
10131	Returns the option with the given key from the given properties .
10132	Returns a filter for a collection of mods .
10133	Returns a filter for the given type .
10134	Returns a new DeclarationFilter that matches both this and f .
10135	Returns a new DeclarationFilter that matches either this or f .
10136	Returns this object as a map .
10137	Makes the given constructor accessible .
10138	Prepare object query .
10139	Replace slash with hyphen .
10140	Converts a byte array to a hexadecimal string .
10141	Returns the indexes of the parameter with the given name .
10142	Parse a named sql .
10143	Convert collection to protobufs .
10144	Sets the protobuf field value .
10145	Sets the value of a POJO field .
10146	Returns true if the given pathname should be included in this file .
10147	Returns an instance of the JdbcLogResultSet .
10148	Creates a Map of ExpectedLabels to Integers .
10149	Extracts the values from a list of values .
10150	Returns the generic supertype of the given type at the given index .
10151	Polls the MBeanConnection .
10152	Polls the scheduler individually .
10153	Returns the declared field of the given class .
10154	Returns the declared methods of the given class .
10155	Returns the declared method for the given class .
10156	Returns an array of all declared methods that are annotated with the given annotation class .
10157	Returns an array of all declared constructors of the given annotation class .
10158	Dumps a byte .
10159	Returns the index of the substring ignoring case .
10160	Removes all chars from a string .
10161	Cleans up the state of the database .
10162	Initializes the audit .
10163	Initializes the message queue .
10164	Initializes the password validator .
10165	Initializes the password authenticator .
10166	Resolves a locale code .
10167	Looks up the LocaleInfo object for a given locale code .
10168	Returns an instance of a JdbcLogStatement .
10169	Clears the cache .
10170	Pushes an element to the stack .
10171	Pops the element from the stack .
10172	Creates a new InputStream .
10173	Parses the given arguments into a Properties object .
10174	Checks if the given tokens match the given patterns .
10175	Moves the x and y coordinates .
10176	Returns true if this rectangle encloses the given rectangle .
10177	Returns true if x and y are equal .
10178	Returns the intersection of this rectangle with the given rectangle .
10179	Returns a union of this rectangle with another rectangle .
10180	Replaces this radial with the given radial .
10181	Replaces this rect with the given rect .
10182	Returns the index of the specified column .
10183	Returns the index of the specified row .
10184	Returns the cell bounds relative to the given coordinates .
10185	Calculates the columns .
10186	Calculates the number of rows in an area .
10187	Unwraps a Throwable .
10188	Starts the main thread .
10189	Called when a code is updated .
10190	Copy and resize code buffer .
10191	Render instructions .
10192	Initializes the app .
10193	Creates a partial copy of this QueryParameter .
10194	Adds a child node to this node .
10195	Clears all children of this node .
10196	Returns the next solution in the sequence .
10197	Adds a list of WAMInstructions to this Functor .
10198	Add instructions and this to parent .
10199	Called when a property is changed .
10200	Registers a WorkPanel .
10201	Updates the current component flags .
10202	Creates a new instance of the type .
10203	Evaluates if the given term is a variable or an anonymous variable .
10204	Optimizes a list of WAMInstructions .
10205	Compares two collections .
10206	Called when a service request is received .
10207	Performs the start tag .
10208	Renders the button .
10209	Resets the state of the machine .
10210	Initializes the training examples .
10211	Returns the value associated with the given key or null if the key does not exist .
10212	Returns the index of the specified key or - 1 if the key does not exist .
10213	Sets the value at the specified index .
10214	Removes the value associated with the given key .
10215	Removes the value at the given index .
10216	Returns true if the given property exists .
10217	Sets the value of a property .
10218	Returns the value of a property .
10219	Checks if the wrapper type is assignable from the primitive type .
10220	Initializes the callee .
10221	Returns a decision tree for the given state .
10222	Initializes the lookups for this node .
10223	Returns a unified list of variables for the given query and statement .
10224	Returns true if left is equal to right .
10225	Returns true if leftVar is bound and rightTerm is not .
10226	Compiles the query for the given clause .
10227	Finds the maximum arguments in a clause .
10228	Allocates the permanent query registers for the given clause .
10229	Gathers position and occurrence information .
10230	Displays the compiled predicate .
10231	Displays a compiled query .
10232	Puts a 32 - bit integer into a ByteBuffer .
10233	Converts a ByteBuffer into a String .
10234	Returns the string value of the attribute .
10235	Sets the value of the attribute .
10236	Reads a term .
10237	Checks if a class exists and is loadable .
10238	Checks if the given class is a subtype of the given class .
10239	Returns true if parent is a subtype of child .
10240	Checks if the given class is a subtype of the given parent class .
10241	Returns the class with the given name .
10242	Creates a new instance of the given class .
10243	Creates a new instance of the given constructor .
10244	Calls a method overriding an illegal access exception .
10245	Calls a method on an object .
10246	Calls a static method .
10247	Returns a constructor for the given arguments .
10248	Finds matching setters for the given property name .
10249	Returns a transactional queue .
10250	Gets the transactional requeue .
10251	Gets the type from the given object .
10252	Resets the search algorithm .
10253	Returns the target node or null if not found .
10254	Creates a new instance of the type .
10255	Adds a TZ support to this endpoint .
10256	Adds an alternate dimension to the table .
10257	Adds a dimension to the table .
10258	Returns a set of free variables for the given query .
10259	Returns a set of non - anonymous variables for the given query .
10260	Compares two SearchNodes .
10261	Writes an object to a file .
10262	Reads a buffered input stream as a string .
10263	Creates a search node for a given state .
10264	Generates the trace indentation for a given delta .
10265	Allocates the argument registers for the given expression .
10266	Returns true if the last body term is in the argument position only .
10267	Gets the majority classification .
10268	Checks if all the examples have the same classification .
10269	Chooses the best property to decide on .
10270	Creates a functor with the given name and arguments .
10271	Returns a variable with the given name .
10272	Executes the given action with error handling .
10273	Gets the element at the specified index .
10274	Sets the texture of the gradient .
10275	Paints the specified area immediately .
10276	Creates a buffered image .
10277	Creates a Graphics object from the given BufferedImage .
10278	Creates a binary image .
10279	Create the SGIS surface .
10280	Sets the QueueSearchAlgorithm .
10281	Search for a node in the queue .
10282	Searches a list of nodes starting from the given startStates .
10283	Main method to parse Prolog .
10284	Converts a query to a clause .
10285	Returns a list of terms .
10286	Creates a FUNCTOR term .
10287	Returns a list of FUNCTOR terms .
10288	Returns a list of terms .
10289	Returns the variable with the given name .
10290	Returns the int literal term .
10291	Returns a Term representing the literal value of a floating point .
10292	Returns a string literal .
10293	Returns the directive .
10294	Interns an operator .
10295	Initializes the built - ins .
10296	Consumes a token .
10297	Attempts to consume a token of the given type .
10298	Binds the transaction to this thread .
10299	Rolls back all Transactional enlistments .
10300	Collects the elements from the iterator into the target collection .
10301	Reserves a call point with the given name and length .
10302	Converts a time of day to ticks .
10303	Convert ticks to years .
10304	Returns the number of ticks with the given hours set to the given number of ticks .
10305	Returns a number of ticks with minutes set to the given number of ticks .
10306	Returns the number of seconds between a given number of ticks .
10307	Returns the ticks with the given year set to the given long ticks .
10308	Returns the ticks with the given month set to the given ticks .
10309	Returns the number of ticks with the given date set to the given number of ticks .
10310	Returns the milliseconds from the start of a given year .
10311	Gets the month of year .
10312	Reads a byte array from the stream .
10313	Apply the given key with the given entry . If rehashing is true try rehashing .
10314	Returns the entry for the given key .
10315	Returns the cuckoo of the given entry .
10316	Rehashes the hash table .
10317	Called when an action is performed .
10318	Defines if the next available item is available or not .
10319	Fires a PropertyChangeEvent with the value of the previousAvailable property .
10320	Fires a PropertyChangeEvent to indicate that the property is finished .
10321	Gets an instance of the WAMResolvingNativeMachine .
10322	Returns an iterator over all variables in the sequence .
10323	Returns the expected I of the given probabilities .
10324	pForDistribution Method .
10325	Sets the number of ticks in the calendar .
10326	Performs the given action .
10327	Creates a new URL .
10328	Gets the request info .
10329	Returns the list of headers .
10330	Returns the list of cookies in the request .
10331	Returns the list of parameters for the request .
10332	Gets the request scope .
10333	Gets the page scope .
10334	Gets the session scope .
10335	Gets the application scope .
10336	Returns the user s principal .
10337	DoStartTag Method .
10338	Converts a property to a HTML table .
10339	Searches a list of nodes starting from a set of startStates .
10340	Set the current screen state .
10341	Walks a term .
10342	Compares two SearchNodes .
10343	Updates the internal registers .
10344	Notifies all registered listeners that a property has changed .
10345	Leaves a clause .
10346	Returns true if the context is in the top - level function .
10347	Converts an array of objects to an array of objects .
10348	Sets the arguments for this operator .
10349	Returns the fixity of this associativity .
10350	Returns true if this is an infix .
10351	Compares this object to the given object .
10352	Called when a property is changed .
10353	Register a WorkFlowController .
10354	Returns the enum attribute factory for the given class .
10355	Creates a new ComponentFactory with the given class name .
10356	Returns the storage cell for the given variable .
10357	Returns true if the storage cell is bound .
10358	Sets a column attribute .
10359	Sets a row attribute .
10360	Returns the column attribute set or null if not found .
10361	Returns the row attribute set or null .
10362	Inserts a cell into the attributes set .
10363	Creates a new instance of a TimeRangeType .
10364	Creates a new instance of the type .
10365	Returns true if the given CharSequence is an instance of this pattern .
10366	Creates the initial context for the given term .
10367	Updates the registers .
10368	Returns the value of this node s scope .
10369	Returns the target path for this node . Returns null if there is no target path .
10370	Joins both forward and reverse paths .
10371	Caches a block .
10372	Gets the properties for a resource .
10373	Sets the throttle rate .
10374	Reads a byte array from the stream .
10375	Skips the specified number of bytes .
10376	Gathers the disjunctions .
10377	Gets an int from a byte array at the given offset .
10378	Writes an integer to a byte array .
10379	Writes a 24 bit integer to a byte array .
10380	Get a 24 bit int from a byte array .
10381	Converts a byte array to a short .
10382	Write short to byte array .
10383	Returns the child state for the given operator .
10384	Returns an iterator over all valid operators in the tree .
10385	Returns the id of the attribute .
10386	Returns the value of the attribute .
10387	Sets the value of the attribute .
10388	Converts a string value to an array .
10389	Converts an array to a list .
10390	Converts a name to a chameleon case .
10391	Converts a case - sensitive value to a case - sensitive string .
10392	Returns the current configuration .
10393	Returns a list of handlers .
10394	Resolves a call point with the given functor name .
10395	Sets the code address .
10396	Returns true if the given HierarchyAttribute is a sub category of this HierarchyAttribute .
10397	Returns the id of the category .
10398	Returns the value at the given level .
10399	Returns the last value of the path .
10400	Writes an object to the output stream .
10401	Reads an object from the stream .
10402	Computes the h value for the given search node .
10403	Returns the modified value of a long .
10404	Adds a UserReadableError message .
10405	Handles exceptions .
10406	Write a string to the output stream .
10407	Attempts to classify the given state .
10408	Compares two elements .
10409	Returns an iterator over this client .
10410	Returns the log base 2 of the specified int .
10411	Returns the log base2 v2 for the given int .
10412	Returns the log base 10 version 2 of the given int .
10413	Converts a 10 - byte integer into a 3 - byte integer .
10414	Returns the log base 10 of a long .
10415	Converts a long value to a log base 10 int .
10416	Returns the character count in 32 - bit format .
10417	Gets the character count in 64 - bit format .
10418	Gets the character count decimal .
10419	Sets the head of this Functor with the given instructions .
10420	Emits the code for the given WAMMachine .
10421	Sets the current screen .
10422	Evaluates a predicate .
10423	Returns the property for the given key .
10424	Returns the properties for the given key .
10425	Get key iterator .
10426	Creates the array properties .
10427	Sets the throttle rate .
10428	Evaluates a numeric type .
10429	Finds the properties .
10430	Gets the properties using the system property .
10431	Gets the properties from the classpath .
10432	Gets the properties using CWD .
10433	Leave a Functor .
10434	Returns the value of this term .
10435	Sets the substitution for the given term .
10436	Creates a new queue of search nodes .
10437	Cleans up oos .
10438	Appends a LoggingEvent to the log .
10439	Fire connector thread .
10440	Initialize the printers .
10441	Commits the transaction .
10442	Rolls back the transaction .
10443	Request a write operation .
10444	Adds a cached operation to the cache .
10445	Acquires a global write lock .
10446	Releases the global write lock .
10447	Enlists the transactional resource with the current session .
10448	Enters a rule set node .
10449	Attempts to insert the specified element into the queue . If the queue is full it waits for the specified timeout .
10450	Returns a new element . If the element isn t empty it is returned .
10451	Puts an element into the stream .
10452	Inserts the specified element into the buffer .
10453	Returns the next object from the source .
10454	Gets a property as a boolean .
10455	Returns the value of the specified property as an Integer .
10456	Returns the value of the specified property as a Long .
10457	Calls a mixin .
10458	Sets the addition visitor .
10459	Backtracks a check node .
10460	Retrieves the code from a WAMCallPoint .
10461	Executes the query and extracts bindings .
10462	Decodes a header .
10463	Captures all the fields in this object .
10464	Restores a field to its original state .
10465	Returns the value associated with the specified class and attribute .
10466	Adds a value to the map .
10467	Returns a collection of all field names of the given class .
10468	Executes the script .
10469	Offers a node .
10470	Returns the first node at the current level or null if there are no markers .
10471	Creates a new SearchNode for the given state .
10472	Creates a new queue of search nodes .
10473	Creates a simple term walker .
10474	Creates a goal walker for a term .
10475	Creates a new TermWalker for the given PositionalTermVisitor .
10476	Creates a TermWalker for a positional predicate .
10477	Creates a postfix walker for a positional term .
10478	Loads the properties from an input stream .
10479	Returns a Properties object from the given file .
10480	Returns a Properties object from the given URL .
10481	Gets the properties for the given path .
10482	Compute the grid size .
10483	Initializes the font metrics .
10484	Adds a property change listener .
10485	Adds a property change listener .
10486	Remove a property change listener .
10487	Fires a property change event to all registered listeners .
10488	Creates a new double range type .
10489	Fades the specified target color using the specified group .
10490	Shows the horizontal bar .
10491	Shows the left vertical bar .
10492	Shows the right vertical bar .
10493	Sanitize radio controls .
10494	Waits for the specified object to be evaluated .
10495	Waits until the specified timeout expires .
10496	Executes the script .
10497	Appends the classpath to the command line .
10498	Creates a new instance of the type .
10499	Prints the introduction of LoJiX .
10500	Initializes the command line reader .
10501	Evaluates the given sentence .
10502	Evaluates the query .
10503	Returns the multi type data for the given boolean .
10504	Converts a byte to a MultiTypeData .
10505	Gets the MultiTypeData for a char .
10506	Converts a short to a MultiTypeData .
10507	Gets the multi type data for a given integer .
10508	Gets the MultiTypeData for a long .
10509	Converts a float to a MultiTypeData .
10510	Gets the multi type data for a double .
10511	Gets a MultiTypeData object from a string .
10512	Gets the multi type data for the given object .
10513	Convert a MultiTypeData to a Class .
10514	Adds an attribute to the page .
10515	Clears up to the specified key .
10516	Expands a key .
10517	Inserts a character into the table .
10518	Compare two search nodes .
10519	Parse operators .
10520	Returns an enum map of operators matching the specified fixity .
10521	Check and resolve to fixity .
10522	Creates a new search node .
10523	Returns the right pad of the given string .
10524	Gets the parsing errors .
10525	Gets the options in force .
10526	Returns the usage of the command line options .
10527	Add trailing pair to properties .
10528	Adds options to properties .
10529	Adds a command line option .
10530	Takes the free args as properties .
10531	Checks if the command line option argument format meets the required format .
10532	Compares two iterators using the given mapping .
10533	Returns an enumeration of the options .
10534	Returns the options .
10535	Sets the selected stepper .
10536	Get the actual stemmer .
10537	Returns the stem of the given word .
10538	Main entry point for PTStemmer .
10539	Creates a new instance of the specified type .
10540	Resets the internal code address .
10541	Returns the trace environment frame .
10542	Trace a choice frame .
10543	Calls an internal function .
10544	Returns the next stack frame .
10545	Returns true if the ip is backtracked .
10546	Trails the given addr .
10547	Unwinds a trail .
10548	Tries to tidy the trail .
10549	Returns true if a1 is equal to a2 .
10550	Unify a constant cell .
10551	Print the slot at xi .
10552	Get random start state .
10553	Returns true if the state can be cloned .
10554	Gets the child state for the given operator .
10555	Returns an iterator of valid operators .
10556	Pretty print the board .
10557	Swap tile to location counting illegal .
10558	Swaps two tiles .
10559	Converts a string to a list of characters .
10560	Converts a char list to a state .
10561	Convert a LogRecord to a Log4j message .
10562	To log4j . Level .
10563	Requeues an element .
10564	Requeues an element .
10565	Increments the size and count of a record .
10566	Decreases the size and count of a record .
10567	Signal on size threshold crossing .
10568	Returns a naming enumeration for the given name .
10569	Returns an enumeration of bindings for a given name .
10570	Adds a property to the environment .
10571	Removes a property from the environment .
10572	Runs GCTillStable .
10573	Returns a literal representation of this node .
10574	Resolve a mixin reference .
10575	Pushes a variable reference .
10576	Sets the maximum height of a row .
10577	Updates the max column width .
10578	Executes the given ActionForward with error handling .
10579	Creates a new heuristic search node .
10580	Executes an ActionForward .
10581	Substitutes the built - ins for the given clause .
10582	Initialise the symbol table .
10583	Perform a top level check of the given clause .
10584	Returns the string representation of the given variable and function .
10585	Evaluates two numeric types .
10586	Called when the application is running .
10587	Called when the application is terminated .
10588	Called when the application is terminated .
10589	Returns true if the given node is offered .
10590	Returns the ceiling log2 of n .
10591	Updates the minimum node .
10592	Compares two nodes .
10593	Inserts a new node into the tree .
10594	Restarts the thread .
10595	Returns a set of all objects matching the given search method .
10596	Returns a collection of all objects matching the given search method .
10597	Finds all solutions matching the given search method .
10598	Returns the next element in the sequence .
10599	Restores the values in the given object to their original values .
10600	Returns the value of a property .
10601	Adds a value to a property of a class .
10602	Adds a value to a property of a class .
10603	Capture the method name .
10604	Removes the element from the list .
10605	Converts the given modifiers to a string .
10606	Converts a string to an integer .
10607	Converts a String to a Date .
10608	Checks if string is a valid date .
10609	Returns true if string s is a valid time .
10610	Returns true if the given string is a valid date time .
10611	Gets token source for string .
10612	Returns the token source for the given file .
10613	Returns the token source for the given input stream .
10614	Check if the given WAMInstruction is a constant .
10615	Checks if the given instruction is a void variable .
10616	Check if the given instruction is a non - arg instruction .
10617	Returns an iterator over all the children of this operator .
10618	Returns the argument at the given index .
10619	Returns an iterator over the children of this operator .
10620	Returns a string representation of the arguments .
10621	Retrieves a summary from the database .
10622	Retrieves a list of records from the database .
10623	Executes a SQL query .
10624	Emmits a code to this mnemonic .
10625	Sets the basic type for the given class .
10626	Consults the given input stream .
10627	Prints the binding for a variable .
10628	Expands the result set to a map .
10629	Runs the component .
10630	Reads the contents of the XML stream .
10631	Returns the current time in milliseconds .
10632	Returns the UUID time in milliseconds .
10633	Updates the track info for the given playlist .
10634	Updates the progress of a playlist .
10635	Render final output .
10636	Handles a resource request .
10637	Handles an event request .
10638	Fire start music request .
10639	Initializes the reader .
10640	Starts the reader thread .
10641	Shuts down the connection .
10642	Resets the parser .
10643	Parse the contents of the xmlstream .
10644	Process a packet .
10645	Sets the cli option .
10646	Creates a chat with the specified user and message listener .
10647	Internalizes the content manager .
10648	Resets this object to its original state .
10649	Sets the value of a property .
10650	Adds a PacketFilter .
10651	Process a request .
10652	Resets all properties .
10653	Initializes the Smack Packet Writer .
10654	Sends a packet to the server .
10655	Returns the next packet in the queue .
10656	Opens a JDBC stream .
10657	Returns a list of all the information contained in this object .
10658	Returns true if the given descriptor exists in the list of descriptors .
10659	Adds an event life cycle listener .
10660	Shuts down the executor .
10661	Checks if two files have the same content .
10662	Clean a direct byte buffer .
10663	Returns true if the given entry is a valid entry .
10664	Masks a null value .
10665	Returns true if x == y .
10666	Returns the entry for the given key .
10667	Resizes the table to a new capacity .
10668	Adds all keys in the given map .
10669	Removes the value associated with the given key .
10670	Removes an entry from the table for the given key .
10671	Removes a mapping from the table .
10672	Adds a new entry to the table .
10673	Create delegate map .
10674	Generates an xml attribute encoded binary string .
10675	Encodes a byte array into a hexadecimal string .
10676	Encodes the given string in Base64 .
10677	Encodes a byte array into a Base64 string .
10678	Iterate over a collection of objects .
10679	Sets the track selector controller .
10680	Sets the jump progress controller .
10681	Sets the controller to be used for playback changes .
10682	Sets the volume changeable controller .
10683	Broadcast available playlists .
10684	Handle command resources .
10685	Handles volume change .
10686	Handles a jump .
10687	Handles a select track request .
10688	Returns the thread cache for the given name .
10689	Returns the request cache for the given name .
10690	Returns the alt field for the given stream id .
10691	Gets the filter map .
10692	Returns the shard path for the given id .
10693	Adapts the given object to a Session .
10694	Invokes the given method on the given target object if it is not null .
10695	Deletes a tree .
10696	Updates one of the properties of the given object .
10697	Sets the ping interval .
10698	Schedule ping server task .
10699	Adds the given application options to the parser .
10700	Returns true if an option is present in the list of used options .
10701	Parse a command line argument .
10702	Prints the usage information for the given app .
10703	Parse a command line argument .
10704	Initializes the connection .
10705	Start TLS received by the server .
10706	Gets the compression handler .
10707	Request stream compression .
10708	Start the compression of the packet stream .
10709	Notifies the connection listeners that a connection error occurred .
10710	Notifies all connection listeners that a reconnection has been successful .
10711	Register a SASLMechanism .
10712	Returns a list of registered SASL mechanisms .
10713	Gets the output plugin behaviour .
10714	Logs a message with a throwable .
10715	Logs an error with a throwable .
10716	Logs a throwable .
10717	Creates a StartEvent from the given ID .
10718	Creates a StartEvent from the given identifier .
10719	Notify listeners .
10720	Returns true if the given ResourceModel contains the given resource .
10721	Checks if a resource with the given sourceID exists .
10722	Returns true if the given list of resource IDs contains a resource .
10723	Provides a resource with the given resource IDs .
10724	Returns the cached object for the given keyspace and column family .
10725	Gets the cache key .
10726	Removes a key from the cache .
10727	Puts a key into the cache .
10728	Returns a map of cf locations .
10729	Include a file in the list .
10730	Include a jar file in the location map .
10731	Add a sasl Mech .
10732	Adds a collection of sasl Mechs .
10733	Creates the debug reader and listener .
10734	Activate the JRE proxy .
10735	Registers the standard event listeners .
10736	Registers an event listener .
10737	Registers an event ID .
10738	Do with lock .
10739	Unregisters an event ID .
10740	Returns true if the given event can be run .
10741	Creates a new DSE session .
10742	Creates a MusicPlayerError .
10743	Start playing a track .
10744	Stop the player from playing .
10745	Executes a command on a player .
10746	Creates a playlist request .
10747	Creates a BroadcasterPlaylist .
10748	Appends a postfix to the URL .
10749	Returns a query parameter with the given name and value .
10750	Returns a query parameter with the given name and value .
10751	Returns a query parameter with the given name and value .
10752	Adds a query parameter to the URL .
10753	Gets the playlist for the given event model .
10754	Called when a launch button action is performed .
10755	Checks if the startup is finished .
10756	Checks if the given URL exists .
10757	Called when a browser button action is performed .
10758	Creates an image icon from the given path and description .
10759	Main method to launch Nakamura .
10760	Returns a copy of this array with the given values .
10761	Exports this object to a HashMap .
10762	Returns the value at the given index as a JSONResult .
10763	Returns the value associated with the given key .
10764	Returns the integer value .
10765	Returns the double value for the given value or the default value if the value is null .
10766	Returns the value as a string .
10767	Creates a command resource .
10768	Verifies that the given command is valid .
10769	Verifies that the given command has the correct capabilities .
10770	Verify a command .
10771	Execute batch async .
10772	Returns all subclasses of the given class .
10773	Returns the subclasses of the given FQCN .
10774	Searches for a class in the given location and returns a set of classes .
10775	Searches for a class in a directory and returns a map of class names and URIs .
10776	Searches a jar file .
10777	Converts this resource to a list .
10778	Returns the number of keys in this map .
10779	Process a packet .
10780	Returns the volume for the given event model .
10781	Creates an error response for an IQ .
10782	Create error response .
10783	Returns true if the given Identifiable is the target of the given EventModel .
10784	Sets whether or not login is enabled for the specified period .
10785	Creates a SynchronizedSet from a Set .
10786	Sets the name of this Roster .
10787	Updates the status of the request .
10788	Returns a collection of all the roster groups .
10789	Appends a RSM element to a query element .
10790	Parse an RSM .
10791	Filter a RSM response from a list of Identifiable objects .
10792	Creates a LeavingEvent .
10793	Reloads the roster .
10794	Creates a roster .
10795	Returns an unmodifiable collection of all entries in the roster .
10796	Gets the presence resource .
10797	Sets the offline presences for the given user .
10798	Fire a roster changed event to all registered listeners .
10799	Sets the digest for the given connection ID and password .
10800	Generate a music resource .
10801	Creates a player request .
10802	Gets the time passed .
10803	Registers a listener for updates .
10804	Initializes the properties file .
10805	Reloads the properties file .
10806	Parses a StreamError Element .
10807	Parse a set of mechanisms .
10808	Parse the compression methods from an XML element .
10809	Parse a PacketExtension .
10810	Decodes a String value from a class .
10811	Verifies if the given player is a target of the given event model .
10812	Gets the playback state from a resource .
10813	Returns the secret key for the given subdomain .
10814	Returns true if multiple subdomains are allowed .
10815	Adds a new value to this object .
10816	Returns the key set .
10817	Returns a collection of values .
10818	Purges a reference .
10819	Returns the entry for the given key or null if the key is null .
10820	Returns the hash code for the given entry .
10821	Creates a new entry with the given key and value .
10822	Checks to see if we are present or not .
10823	Sets whether the speaker is present or not .
10824	Updates the presence .
10825	Delivers a message to all registered listeners .
10826	Generates a script .
10827	Initializes the output directory .
10828	Loads properties from a file .
10829	Writes a string to a file .
10830	Returns the progress of the given event model .
10831	Creates a SynchronizedCollection from the given Collection .
10832	Discovers all service resolvers in the given range .
10833	Gets the config .
10834	Gets the thread pool .
10835	Creates a stop music request .
10836	Verifies if the given event model contains a stop music descriptor .
10837	Returns a DSE cluster .
10838	Adds a connection listener .
10839	Adds a packet listener .
10840	Adds a packet listening listener .
10841	Notifies all registered listeners that a packet has been sent .
10842	Adds a packet interceptor .
10843	Notifies all registered interceptors that a packet has been received .
10844	Converts a property name to a value .
10845	Attempts to reconnect to the server .
10846	Returns the current thread id .
10847	Returns true if the given node is a valid node .
10848	Gets the key for the given value .
10849	Returns the data for the given object at the given index .
10850	Looks up a valid node at the given index and returns it .
10851	Looks up the node at the given index .
10852	Compares two objects at the given index .
10853	Returns the least node at the given index .
10854	Returns the most node at the given index .
10855	Returns the next node that is greater than the given index .
10856	Returns the most valid node .
10857	Returns the least valid node .
10858	Copies the color from the given node to the given node at the given index .
10859	Returns true if the given node is a red node .
10860	Returns true if the given node is a black node .
10861	Returns the parent of the given node at the given index .
10862	Returns the parent node of the given node at the given index .
10863	Returns the right child of the given node at the given index .
10864	Returns the left child of the given node at the given index .
10865	Rotate a node to the left .
10866	Rotate a node to the right .
10867	Inserts a node into the tree at the given index .
10868	Do red black delete .
10869	Checks that the given object is not null .
10870	Inserts a value into the map .
10871	Checks if the current thread id contains the given key .
10872	Checks if the current thread id contains the given value .
10873	Returns the value associated with the specified key .
10874	Removes the value associated with the given key .
10875	Clears the cache .
10876	Returns the key set .
10877	Returns a collection of values .
10878	Returns a set of all entries in this bidi tree map .
10879	Copies all entries from the existing map to the new map .
10880	Deletes expired entries from the cache .
10881	Removes all cached objects from the cache .
10882	Activates the e2KS54H35j6vS5Z38nK40 .
10883	Gets a player request .
10884	Initializes a DefaultRosterStore .
10885	Opens a new DefaultRosterStore .
10886	Scan a range of addresses .
10887	Converts an InetAddress to a subnet address .
10888	Exports this record to a HashMap .
10889	Import track info from hash map .
10890	Adds all applications for the given set of classes .
10891	Executes the application .
10892	Prints the list .
10893	Print usage .
10894	Executes the command line .
10895	Creates a MuteEvent for a given source and target .
10896	Creates a MuteEvent from the given identifier .
10897	Returns the schema with the given name .
10898	Write a list of lines to a file .
10899	Checks if the application is in a jar .
10900	Adds an application option .
10901	Returns a list of Goodwill schema fields .
10902	Returns the thrift schema field with the given name .
10903	Returns the package name of the given JarEntry .
10904	Maps content to values .
10905	Creates an EventListener for an Identifiable .
10906	Sets the current state of the iterator .
10907	Iterate over the specified collection .
10908	Performs an iteration of the given iterator .
10909	Returns the track info for the given event model .
10910	Exports the data to a HashMap .
10911	Imports a resource from a resource model .
10912	Creates an error image from the given lines .
10913	Gets the image from the given URL .
10914	Returns a JSON representation of the given URL .
10915	Reverses a map .
10916	Multiplies this Cartesian product result into a set .
10917	Starts the daemon .
10918	Returns this object to the pool .
10919	Creates an EndedEvent from the given identifier .
10920	Returns the current track information .
10921	Updates the current playlist with the new track info .
10922	Shuffles all tracks in the queue .
10923	Verifies if the given capabilities can be used .
10924	Exports this object to a HashMap .
10925	Escapes an XML string .
10926	Evaluates a challenge and sends it to the client .
10927	Returns a JSON representation of this mapper .
10928	Runs the application . This method is called when the application is stopped . It is called when the application is stopped .
10929	Handles an event .
10930	Join all queues .
10931	Sets the value of a filter property .
10932	Removes a property from the map .
10933	Adds a principal .
10934	Removes a principal .
10935	Called when the root window is closing .
10936	Called when a user is counted .
10937	Called when an event is logged .
10938	Checks if a resource is permanent .
10939	Sets the name of the group .
10940	Returns true if the given object contains the given key .
10941	Returns true if the object contains the given value .
10942	Adds a new value to the map .
10943	Clears the cache .
10944	Returns the hash code for the given key .
10945	Checks if two keys are equal .
10946	Checks if two values are equal .
10947	Ensure capacity .
10948	Calculates the new capacity .
10949	Creates an iterator that iterates over all entries in this map .
10950	Loads an object from a stream .
10951	Registers the module s content generators .
10952	Initializes the add - on .
10953	Notifies all connection listeners that a reconnection has failed .
10954	Notifies all connection listeners that an attempt to reconnect has been made .
