12/24/2021 20:24:34 - WARNING - configs -   Process rank: -1, device: cuda, n_gpu: 1, distributed training: False, cpu count: 10
12/24/2021 20:24:34 - INFO - __main__ -   Namespace(adam_epsilon=1e-08, add_lang_ids=False, add_task_prefix=False, always_save_model=True, attention_batch_size=100, batch_size=48, beam_size=10, cache_path='save_models/summarize/ruby/codebert/cache_data', cpu_count=10, data_dir='/data/pretrain-attention/CodeAttention/data', data_num=-1, device=device(type='cuda'), do_eval=True, do_eval_bleu=True, do_test=True, do_train=True, gpu=0, gradient_accumulation_steps=1, local_rank=-1, lr=5e-05, max_grad_norm=1.0, max_source_length=256, max_target_length=128, model_dir='saved_models', model_name='codebert', n_gpu=1, no_cuda=False, num_train_epochs=15, output_dir='save_models/summarize/ruby/codebert', patience=2, res_dir='results/summarize/ruby/codebert', res_fn='results/summarize/ruby/codebert.txt', save_last_checkpoints=True, seed=1234, start_epoch=0, sub_task='ruby', summary_dir='tensorboard', task='summarize', warmup_steps=1000, weight_decay=0.0)
12/24/2021 20:27:29 - INFO - models -   Finish loading model [173M] parameters from codebert
12/24/2021 20:27:34 - INFO - utils -   Read 3000 examples, avg src len: 66, avg trg len: 12, max src len: 488, max trg len: 95
12/24/2021 20:27:34 - INFO - utils -   Sample 5k data for computing bleu/attention from /data/pretrain-attention/CodeAttention/data/summarize/ruby/train.jsonl
  0%|          | 0/3000 [00:00<?, ?it/s] 10%|█         | 300/3000 [00:00<00:00, 2924.82it/s] 20%|██        | 600/3000 [00:00<00:00, 2960.51it/s] 30%|███       | 900/3000 [00:00<00:00, 2948.12it/s] 42%|████▎     | 1275/3000 [00:00<00:00, 2972.72it/s] 55%|█████▌    | 1650/3000 [00:00<00:00, 3061.61it/s] 68%|██████▊   | 2025/3000 [00:00<00:00, 3053.74it/s] 78%|███████▊  | 2331/3000 [00:00<00:00, 2872.47it/s] 87%|████████▋ | 2619/3000 [00:00<00:00, 2339.78it/s] 96%|█████████▌| 2866/3000 [00:01<00:00, 2371.33it/s]100%|██████████| 3000/3000 [00:01<00:00, 2665.53it/s]
12/24/2021 20:27:36 - INFO - __main__ -   Parse AST trees and obtain leaf tokens
  0%|          | 0/3000 [00:00<?, ?it/s]leaf:  2 start:  (0, 0) , end:  (0, 3) , token:  def
leaf:  3 start:  (0, 4) , end:  (0, 8) , token:  node
leaf:  5 start:  (0, 8) , end:  (0, 9) , token:  (
leaf:  6 start:  (0, 9) , end:  (0, 15) , token:  parent
leaf:  7 start:  (0, 15) , end:  (0, 16) , token:  ,
leaf:  9 start:  (0, 17) , end:  (0, 23) , token:  indent
leaf:  10 start:  (0, 24) , end:  (0, 25) , token:  =
leaf:  11 start:  (0, 26) , end:  (0, 29) , token:  nil
leaf:  12 start:  (0, 29) , end:  (0, 30) , token:  )
leaf:  15 start:  (1, 6) , end:  (1, 12) , token:  return
leaf:  16 start:  (1, 13) , end:  (1, 19) , token:  unless
leaf:  18 start:  (1, 20) , end:  (1, 21) , token:  (
leaf:  20 start:  (1, 21) , end:  (1, 25) , token:  name
leaf:  21 start:  (1, 26) , end:  (1, 27) , token:  =
leaf:  24 start:  (1, 28) , end:  (1, 37) , token:  lookahead
leaf:  26 start:  (1, 37) , end:  (1, 38) , token:  (
leaf:  27 start:  (1, 38) , end:  (1, 53) , token:  :node_lookahead
leaf:  28 start:  (1, 53) , end:  (1, 54) , token:  )
leaf:  29 start:  (1, 55) , end:  (1, 57) , token:  ||
leaf:  31 start:  (2, 28) , end:  (2, 37) , token:  lookahead
leaf:  33 start:  (2, 37) , end:  (2, 38) , token:  (
leaf:  34 start:  (2, 38) , end:  (2, 58) , token:  :shorthand_lookahead
leaf:  35 start:  (2, 58) , end:  (2, 59) , token:  )
leaf:  36 start:  (2, 59) , end:  (2, 60) , token:  )
leaf:  40 start:  (5, 6) , end:  (5, 12) , token:  return
leaf:  42 start:  (5, 13) , end:  (5, 16) , token:  nil
leaf:  43 start:  (5, 17) , end:  (5, 19) , token:  if
leaf:  45 start:  (5, 20) , end:  (5, 28) , token:  KEYWORDS
leaf:  46 start:  (5, 28) , end:  (5, 29) , token:  .
leaf:  47 start:  (5, 29) , end:  (5, 37) , token:  include?
leaf:  51 start:  (5, 38) , end:  (5, 42) , token:  name
leaf:  52 start:  (5, 42) , end:  (5, 43) , token:  [
leaf:  53 start:  (5, 43) , end:  (5, 44) , token:  0
leaf:  54 start:  (5, 44) , end:  (5, 45) , token:  ]
leaf:  55 start:  (5, 45) , end:  (5, 46) , token:  .
leaf:  56 start:  (5, 46) , end:  (5, 52) , token:  to_sym
leaf:  60 start:  (9, 6) , end:  (9, 8) , token:  if
leaf:  62 start:  (9, 9) , end:  (9, 10) , token:  (
leaf:  64 start:  (9, 10) , end:  (9, 19) , token:  node_name
leaf:  65 start:  (9, 20) , end:  (9, 21) , token:  =
leaf:  67 start:  (9, 22) , end:  (9, 28) , token:  accept
leaf:  69 start:  (9, 29) , end:  (9, 34) , token:  :node
leaf:  70 start:  (9, 34) , end:  (9, 35) , token:  )
leaf:  73 start:  (10, 8) , end:  (10, 17) , token:  node_name
leaf:  74 start:  (10, 18) , end:  (10, 19) , token:  =
leaf:  76 start:  (10, 20) , end:  (10, 29) , token:  node_name
leaf:  77 start:  (10, 29) , end:  (10, 30) , token:  .
leaf:  78 start:  (10, 30) , end:  (10, 36) , token:  to_sym
leaf:  80 start:  (11, 8) , end:  (11, 17) , token:  shorthand
leaf:  81 start:  (11, 18) , end:  (11, 19) , token:  =
leaf:  82 start:  (11, 20) , end:  (11, 40) , token:  shorthand_attributes
leaf:  84 start:  (12, 6) , end:  (12, 11) , token:  elsif
leaf:  86 start:  (12, 12) , end:  (12, 13) , token:  (
leaf:  88 start:  (12, 13) , end:  (12, 22) , token:  shorthand
leaf:  89 start:  (12, 23) , end:  (12, 24) , token:  =
leaf:  90 start:  (12, 25) , end:  (12, 45) , token:  shorthand_attributes
leaf:  91 start:  (12, 45) , end:  (12, 46) , token:  )
leaf:  94 start:  (13, 8) , end:  (13, 17) , token:  node_name
leaf:  95 start:  (13, 18) , end:  (13, 19) , token:  =
leaf:  96 start:  (13, 20) , end:  (13, 24) , token:  :div
leaf:  97 start:  (14, 6) , end:  (14, 9) , token:  end
leaf:  100 start:  (17, 6) , end:  (17, 13) , token:  options
leaf:  101 start:  (17, 14) , end:  (17, 15) , token:  =
leaf:  103 start:  (17, 16) , end:  (17, 17) , token:  {
leaf:  104 start:  (17, 17) , end:  (17, 18) , token:  }
leaf:  108 start:  (20, 6) , end:  (20, 13) , token:  options
leaf:  109 start:  (20, 13) , end:  (20, 14) , token:  [
leaf:  110 start:  (20, 14) , end:  (20, 24) , token:  :recursive
leaf:  111 start:  (20, 24) , end:  (20, 25) , token:  ]
leaf:  112 start:  (20, 26) , end:  (20, 27) , token:  =
leaf:  114 start:  (20, 28) , end:  (20, 34) , token:  accept
leaf:  116 start:  (20, 34) , end:  (20, 35) , token:  (
leaf:  117 start:  (20, 35) , end:  (20, 45) , token:  :recursive
leaf:  118 start:  (20, 45) , end:  (20, 46) , token:  )
leaf:  122 start:  (23, 6) , end:  (23, 13) , token:  options
leaf:  123 start:  (23, 13) , end:  (23, 14) , token:  [
leaf:  124 start:  (23, 14) , end:  (23, 33) , token:  :leading_whitespace
leaf:  125 start:  (23, 33) , end:  (23, 34) , token:  ]
leaf:  126 start:  (23, 35) , end:  (23, 36) , token:  =
leaf:  128 start:  (23, 37) , end:  (23, 52) , token:  accept_stripped
leaf:  130 start:  (23, 52) , end:  (23, 53) , token:  (
leaf:  131 start:  (23, 53) , end:  (23, 72) , token:  :leading_whitespace
leaf:  132 start:  (23, 72) , end:  (23, 73) , token:  )
leaf:  136 start:  (26, 6) , end:  (26, 13) , token:  options
leaf:  137 start:  (26, 13) , end:  (26, 14) , token:  [
leaf:  138 start:  (26, 14) , end:  (26, 34) , token:  :trailing_whitespace
leaf:  139 start:  (26, 34) , end:  (26, 35) , token:  ]
leaf:  140 start:  (26, 36) , end:  (26, 37) , token:  =
leaf:  142 start:  (26, 38) , end:  (26, 53) , token:  accept_stripped
leaf:  144 start:  (26, 53) , end:  (26, 54) , token:  (
leaf:  145 start:  (26, 54) , end:  (26, 74) , token:  :trailing_whitespace
leaf:  146 start:  (26, 74) , end:  (26, 75) , token:  )
leaf:  149 start:  (29, 6) , end:  (29, 10) , token:  atts
leaf:  150 start:  (29, 11) , end:  (29, 12) , token:  =
leaf:  153 start:  (29, 13) , end:  (29, 23) , token:  attributes
leaf:  155 start:  (29, 23) , end:  (29, 24) , token:  (
leaf:  156 start:  (29, 24) , end:  (29, 33) , token:  shorthand
leaf:  157 start:  (29, 33) , end:  (29, 34) , token:  )
leaf:  158 start:  (29, 35) , end:  (29, 37) , token:  ||
leaf:  160 start:  (29, 38) , end:  (29, 39) , token:  {
leaf:  161 start:  (29, 39) , end:  (29, 40) , token:  }
leaf:  165 start:  (32, 6) , end:  (32, 13) , token:  options
leaf:  166 start:  (32, 13) , end:  (32, 14) , token:  [
leaf:  167 start:  (32, 14) , end:  (32, 24) , token:  :extension
leaf:  168 start:  (32, 24) , end:  (32, 25) , token:  ]
leaf:  169 start:  (32, 26) , end:  (32, 27) , token:  =
leaf:  170 start:  (32, 28) , end:  (32, 45) , token:  extend_attributes
leaf:  174 start:  (35, 6) , end:  (35, 13) , token:  options
leaf:  175 start:  (35, 13) , end:  (35, 14) , token:  [
leaf:  176 start:  (35, 14) , end:  (35, 25) , token:  :attributes
leaf:  177 start:  (35, 25) , end:  (35, 26) , token:  ]
leaf:  178 start:  (35, 27) , end:  (35, 28) , token:  =
leaf:  180 start:  (35, 29) , end:  (35, 51) , token:  attributes_assignments
leaf:  182 start:  (35, 52) , end:  (35, 56) , token:  atts
leaf:  183 start:  (35, 56) , end:  (35, 57) , token:  ,
leaf:  184 start:  (35, 58) , end:  (35, 63) , token:  false
leaf:  187 start:  (38, 6) , end:  (38, 18) , token:  current_node
leaf:  188 start:  (38, 19) , end:  (38, 20) , token:  =
leaf:  190 start:  (38, 21) , end:  (38, 22) , token:  [
leaf:  191 start:  (38, 22) , end:  (38, 27) , token:  :node
leaf:  192 start:  (38, 27) , end:  (38, 28) , token:  ,
leaf:  193 start:  (38, 29) , end:  (38, 38) , token:  node_name
leaf:  194 start:  (38, 38) , end:  (38, 39) , token:  ,
leaf:  195 start:  (38, 40) , end:  (38, 47) , token:  options
leaf:  196 start:  (38, 47) , end:  (38, 48) , token:  ,
leaf:  198 start:  (38, 49) , end:  (38, 50) , token:  [
leaf:  199 start:  (38, 50) , end:  (38, 51) , token:  ]
leaf:  200 start:  (38, 51) , end:  (38, 52) , token:  ,
leaf:  201 start:  (38, 53) , end:  (38, 59) , token:  indent
leaf:  202 start:  (38, 59) , end:  (38, 60) , token:  ]
leaf:  205 start:  (41, 6) , end:  (41, 15) , token:  def_check
leaf:  206 start:  (41, 16) , end:  (41, 17) , token:  =
leaf:  209 start:  (41, 18) , end:  (41, 19) , token:  !
leaf:  212 start:  (41, 19) , end:  (41, 31) , token:  @definitions
leaf:  213 start:  (41, 31) , end:  (41, 32) , token:  .
leaf:  214 start:  (41, 32) , end:  (41, 36) , token:  keys
leaf:  215 start:  (41, 36) , end:  (41, 37) , token:  .
leaf:  216 start:  (41, 37) , end:  (41, 45) , token:  include?
leaf:  218 start:  (41, 45) , end:  (41, 46) , token:  (
leaf:  219 start:  (41, 46) , end:  (41, 55) , token:  node_name
leaf:  220 start:  (41, 55) , end:  (41, 56) , token:  )
leaf:  221 start:  (41, 57) , end:  (41, 59) , token:  &&
leaf:  224 start:  (42, 18) , end:  (42, 26) , token:  Settings
leaf:  225 start:  (42, 26) , end:  (42, 28) , token:  ::
leaf:  226 start:  (42, 28) , end:  (42, 42) , token:  SELF_ENCLOSING
leaf:  227 start:  (42, 42) , end:  (42, 43) , token:  .
leaf:  228 start:  (42, 43) , end:  (42, 51) , token:  include?
leaf:  230 start:  (42, 51) , end:  (42, 52) , token:  (
leaf:  231 start:  (42, 52) , end:  (42, 61) , token:  node_name
leaf:  232 start:  (42, 61) , end:  (42, 62) , token:  )
leaf:  235 start:  (45, 6) , end:  (45, 8) , token:  if
leaf:  238 start:  (45, 9) , end:  (45, 10) , token:  (
leaf:  240 start:  (45, 10) , end:  (45, 15) , token:  close
leaf:  241 start:  (45, 16) , end:  (45, 17) , token:  =
leaf:  243 start:  (45, 18) , end:  (45, 33) , token:  accept_stripped
leaf:  245 start:  (45, 34) , end:  (45, 49) , token:  :self_enclosing
leaf:  246 start:  (45, 49) , end:  (45, 50) , token:  )
leaf:  247 start:  (45, 51) , end:  (45, 53) , token:  ||
leaf:  248 start:  (45, 54) , end:  (45, 63) , token:  def_check
leaf:  253 start:  (46, 8) , end:  (46, 20) , token:  current_node
leaf:  254 start:  (46, 20) , end:  (46, 21) , token:  [
leaf:  255 start:  (46, 21) , end:  (46, 29) , token:  @options
leaf:  256 start:  (46, 29) , end:  (46, 30) , token:  ]
leaf:  257 start:  (46, 30) , end:  (46, 31) , token:  [
leaf:  258 start:  (46, 31) , end:  (46, 46) , token:  :self_enclosing
leaf:  259 start:  (46, 46) , end:  (46, 47) , token:  ]
leaf:  260 start:  (46, 48) , end:  (46, 49) , token:  =
leaf:  261 start:  (46, 50) , end:  (46, 54) , token:  true
leaf:  263 start:  (48, 8) , end:  (48, 14) , token:  unless
leaf:  266 start:  (48, 15) , end:  (48, 20) , token:  close
leaf:  267 start:  (48, 20) , end:  (48, 21) , token:  .
leaf:  268 start:  (48, 21) , end:  (48, 25) , token:  nil?
leaf:  269 start:  (48, 26) , end:  (48, 28) , token:  ||
leaf:  272 start:  (48, 29) , end:  (48, 34) , token:  close
leaf:  273 start:  (48, 34) , end:  (48, 35) , token:  .
leaf:  274 start:  (48, 35) , end:  (48, 40) , token:  strip
leaf:  275 start:  (48, 40) , end:  (48, 41) , token:  .
leaf:  276 start:  (48, 41) , end:  (48, 47) , token:  empty?
leaf:  279 start:  (49, 10) , end:  (49, 14) , token:  undo
leaf:  281 start:  (49, 15) , end:  (49, 20) , token:  close
leaf:  283 start:  (50, 10) , end:  (50, 16) , token:  Logger
leaf:  284 start:  (50, 16) , end:  (50, 17) , token:  .
leaf:  285 start:  (50, 17) , end:  (50, 22) , token:  error
leaf:  287 start:  (50, 23) , end:  (50, 29) , token:  :parse
leaf:  288 start:  (50, 29) , end:  (50, 30) , token:  ,
leaf:  289 start:  (50, 31) , end:  (50, 36) , token:  @code
leaf:  290 start:  (50, 36) , end:  (50, 37) , token:  ,
leaf:  291 start:  (50, 38) , end:  (50, 40) , token:  @i
leaf:  292 start:  (50, 40) , end:  (50, 41) , token:  ,
leaf:  293 start:  (50, 42) , end:  (50, 44) , token:  @j
leaf:  294 start:  (50, 44) , end:  (50, 45) , token:  ,
leaf:  295 start:  (50, 46) , end:  (50, 61) , token:  :self_enclosing
leaf:  296 start:  (51, 8) , end:  (51, 11) , token:  end
leaf:  297 start:  (52, 6) , end:  (52, 9) , token:  end
leaf:  301 start:  (56, 6) , end:  (56, 8) , token:  if
leaf:  303 start:  (56, 9) , end:  (56, 15) , token:  accept
leaf:  305 start:  (56, 16) , end:  (56, 29) , token:  :inline_child
leaf:  310 start:  (58, 8) , end:  (58, 14) , token:  Logger
leaf:  311 start:  (58, 14) , end:  (58, 15) , token:  .
leaf:  312 start:  (58, 15) , end:  (58, 20) , token:  error
leaf:  314 start:  (58, 21) , end:  (58, 27) , token:  :parse
leaf:  315 start:  (58, 27) , end:  (58, 28) , token:  ,
leaf:  316 start:  (59, 21) , end:  (59, 26) , token:  @code
leaf:  317 start:  (59, 26) , end:  (59, 27) , token:  ,
leaf:  318 start:  (60, 21) , end:  (60, 23) , token:  @i
leaf:  319 start:  (60, 23) , end:  (60, 24) , token:  ,
leaf:  320 start:  (61, 21) , end:  (61, 23) , token:  @j
leaf:  321 start:  (61, 23) , end:  (61, 24) , token:  ,
leaf:  322 start:  (62, 21) , end:  (62, 34) , token:  :inline_child
leaf:  323 start:  (62, 35) , end:  (62, 41) , token:  unless
leaf:  325 start:  (62, 42) , end:  (62, 46) , token:  node
leaf:  327 start:  (62, 47) , end:  (62, 59) , token:  current_node
leaf:  328 start:  (62, 59) , end:  (62, 60) , token:  ,
leaf:  329 start:  (62, 61) , end:  (62, 67) , token:  indent
leaf:  331 start:  (63, 6) , end:  (63, 11) , token:  elsif
leaf:  333 start:  (63, 12) , end:  (63, 19) , token:  comment
leaf:  335 start:  (63, 20) , end:  (63, 32) , token:  current_node
leaf:  336 start:  (63, 32) , end:  (63, 33) , token:  ,
leaf:  337 start:  (63, 34) , end:  (63, 40) , token:  indent
leaf:  340 start:  (65, 6) , end:  (65, 10) , token:  else
leaf:  343 start:  (67, 8) , end:  (67, 12) , token:  text
leaf:  345 start:  (67, 13) , end:  (67, 25) , token:  current_node
leaf:  346 start:  (67, 25) , end:  (67, 26) , token:  ,
leaf:  347 start:  (67, 27) , end:  (67, 33) , token:  indent
leaf:  348 start:  (67, 33) , end:  (67, 34) , token:  ,
leaf:  349 start:  (67, 35) , end:  (67, 40) , token:  false
leaf:  350 start:  (68, 6) , end:  (68, 9) , token:  end
leaf:  353 start:  (71, 6) , end:  (71, 10) , token:  root
leaf:  355 start:  (71, 11) , end:  (71, 23) , token:  current_node
leaf:  356 start:  (71, 23) , end:  (71, 24) , token:  ,
leaf:  357 start:  (71, 25) , end:  (71, 31) , token:  indent
leaf:  361 start:  (74, 6) , end:  (74, 12) , token:  parent
leaf:  362 start:  (74, 12) , end:  (74, 13) , token:  [
leaf:  363 start:  (74, 13) , end:  (74, 22) , token:  @children
leaf:  364 start:  (74, 22) , end:  (74, 23) , token:  ]
leaf:  365 start:  (74, 24) , end:  (74, 26) , token:  <<
leaf:  366 start:  (74, 27) , end:  (74, 39) , token:  current_node
leaf:  367 start:  (75, 4) , end:  (75, 7) , token:  end
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367]
[(0, 1), (1, 2), (1, 3), (1, 4), (1, 13), (1, 37), (1, 38), (1, 57), (1, 58), (1, 59), (1, 98), (1, 99), (1, 105), (1, 106), (1, 119), (1, 120), (1, 133), (1, 134), (1, 147), (1, 148), (1, 162), (1, 163), (1, 171), (1, 172), (1, 185), (1, 186), (1, 203), (1, 204), (1, 233), (1, 234), (1, 298), (1, 299), (1, 300), (1, 351), (1, 352), (1, 358), (1, 359), (1, 367), (4, 5), (4, 6), (4, 7), (4, 8), (4, 12), (8, 9), (8, 10), (8, 11), (13, 14), (13, 16), (13, 17), (14, 15), (17, 18), (17, 19), (17, 36), (19, 20), (19, 21), (19, 22), (22, 23), (22, 29), (22, 30), (23, 24), (23, 25), (25, 26), (25, 27), (25, 28), (30, 31), (30, 32), (32, 33), (32, 34), (32, 35), (38, 39), (38, 43), (38, 44), (39, 40), (39, 41), (41, 42), (44, 45), (44, 46), (44, 47), (44, 48), (48, 49), (49, 50), (49, 55), (49, 56), (50, 51), (50, 52), (50, 53), (50, 54), (59, 60), (59, 61), (59, 71), (59, 83), (59, 97), (61, 62), (61, 63), (61, 70), (63, 64), (63, 65), (63, 66), (66, 67), (66, 68), (68, 69), (71, 72), (71, 79), (72, 73), (72, 74), (72, 75), (75, 76), (75, 77), (75, 78), (79, 80), (79, 81), (79, 82), (83, 84), (83, 85), (83, 92), (85, 86), (85, 87), (85, 91), (87, 88), (87, 89), (87, 90), (92, 93), (93, 94), (93, 95), (93, 96), (99, 100), (99, 101), (99, 102), (102, 103), (102, 104), (106, 107), (106, 112), (106, 113), (107, 108), (107, 109), (107, 110), (107, 111), (113, 114), (113, 115), (115, 116), (115, 117), (115, 118), (120, 121), (120, 126), (120, 127), (121, 122), (121, 123), (121, 124), (121, 125), (127, 128), (127, 129), (129, 130), (129, 131), (129, 132), (134, 135), (134, 140), (134, 141), (135, 136), (135, 137), (135, 138), (135, 139), (141, 142), (141, 143), (143, 144), (143, 145), (143, 146), (148, 149), (148, 150), (148, 151), (151, 152), (151, 158), (151, 159), (152, 153), (152, 154), (154, 155), (154, 156), (154, 157), (159, 160), (159, 161), (163, 164), (163, 169), (163, 170), (164, 165), (164, 166), (164, 167), (164, 168), (172, 173), (172, 178), (172, 179), (173, 174), (173, 175), (173, 176), (173, 177), (179, 180), (179, 181), (181, 182), (181, 183), (181, 184), (186, 187), (186, 188), (186, 189), (189, 190), (189, 191), (189, 192), (189, 193), (189, 194), (189, 195), (189, 196), (189, 197), (189, 200), (189, 201), (189, 202), (197, 198), (197, 199), (204, 205), (204, 206), (204, 207), (207, 208), (207, 221), (207, 222), (208, 209), (208, 210), (210, 211), (210, 215), (210, 216), (210, 217), (211, 212), (211, 213), (211, 214), (217, 218), (217, 219), (217, 220), (222, 223), (222, 227), (222, 228), (222, 229), (223, 224), (223, 225), (223, 226), (229, 230), (229, 231), (229, 232), (234, 235), (234, 236), (234, 249), (234, 297), (236, 237), (236, 247), (236, 248), (237, 238), (237, 239), (237, 246), (239, 240), (239, 241), (239, 242), (242, 243), (242, 244), (244, 245), (249, 250), (249, 262), (250, 251), (250, 260), (250, 261), (251, 252), (251, 257), (251, 258), (251, 259), (252, 253), (252, 254), (252, 255), (252, 256), (262, 263), (262, 264), (262, 277), (262, 296), (264, 265), (264, 269), (264, 270), (265, 266), (265, 267), (265, 268), (270, 271), (270, 275), (270, 276), (271, 272), (271, 273), (271, 274), (277, 278), (277, 282), (278, 279), (278, 280), (280, 281), (282, 283), (282, 284), (282, 285), (282, 286), (286, 287), (286, 288), (286, 289), (286, 290), (286, 291), (286, 292), (286, 293), (286, 294), (286, 295), (300, 301), (300, 302), (300, 306), (300, 307), (300, 330), (300, 350), (302, 303), (302, 304), (304, 305), (307, 308), (308, 309), (308, 323), (308, 324), (309, 310), (309, 311), (309, 312), (309, 313), (313, 314), (313, 315), (313, 316), (313, 317), (313, 318), (313, 319), (313, 320), (313, 321), (313, 322), (324, 325), (324, 326), (326, 327), (326, 328), (326, 329), (330, 331), (330, 332), (330, 338), (330, 339), (332, 333), (332, 334), (334, 335), (334, 336), (334, 337), (339, 340), (339, 341), (339, 342), (342, 343), (342, 344), (344, 345), (344, 346), (344, 347), (344, 348), (344, 349), (352, 353), (352, 354), (354, 355), (354, 356), (354, 357), (359, 360), (359, 365), (359, 366), (360, 361), (360, 362), (360, 363), (360, 364)]  3%|▎         | 90/3000 [00:00<00:03, 897.41it/s]  6%|▋         | 189/3000 [00:00<00:02, 947.28it/s]  9%|▉         | 284/3000 [00:00<00:02, 926.24it/s] 13%|█▎        | 377/3000 [00:00<00:03, 681.38it/s] 16%|█▌        | 467/3000 [00:00<00:03, 743.50it/s] 19%|█▊        | 560/3000 [00:00<00:03, 795.11it/s] 22%|██▏       | 645/3000 [00:00<00:03, 614.28it/s] 25%|██▍       | 739/3000 [00:01<00:03, 691.10it/s] 28%|██▊       | 831/3000 [00:01<00:02, 749.27it/s] 31%|███       | 921/3000 [00:01<00:02, 789.45it/s] 34%|███▍      | 1020/3000 [00:01<00:02, 844.18it/s] 37%|███▋      | 1109/3000 [00:01<00:02, 630.59it/s] 40%|████      | 1214/3000 [00:01<00:02, 726.71it/s] 44%|████▍     | 1327/3000 [00:01<00:02, 822.53it/s] 47%|████▋     | 1420/3000 [00:01<00:01, 849.91it/s] 50%|█████     | 1512/3000 [00:01<00:01, 841.64it/s] 53%|█████▎    | 1601/3000 [00:02<00:01, 832.14it/s] 56%|█████▋    | 1688/3000 [00:02<00:02, 583.95it/s] 59%|█████▉    | 1781/3000 [00:02<00:01, 656.37it/s] 63%|██████▎   | 1877/3000 [00:02<00:01, 726.51it/s] 66%|██████▌   | 1970/3000 [00:02<00:01, 776.27it/s] 69%|██████▊   | 2057/3000 [00:02<00:01, 799.44it/s] 72%|███████▏  | 2159/3000 [00:02<00:00, 858.37it/s] 75%|███████▌  | 2252/3000 [00:02<00:00, 870.15it/s] 78%|███████▊  | 2343/3000 [00:03<00:01, 534.19it/s] 82%|████████▏ | 2454/3000 [00:03<00:00, 643.67it/s] 85%|████████▍ | 2537/3000 [00:03<00:00, 682.91it/s] 88%|████████▊ | 2640/3000 [00:03<00:00, 764.84it/s] 91%|█████████▏| 2744/3000 [00:03<00:00, 828.45it/s] 95%|█████████▍| 2837/3000 [00:03<00:00, 854.40it/s] 98%|█████████▊| 2931/3000 [00:03<00:00, 877.56it/s]100%|██████████| 3000/3000 [00:03<00:00, 760.33it/s]
12/24/2021 20:27:40 - INFO - __main__ -   Obtain subtokens and their attention
Computing attention:   0%|          | 0/30 [00:00<?, ?it/s]
raw_code:  def node(parent, indent = nil)
      return unless (name = lookahead(:node_lookahead) ||
                            lookahead(:shorthand_lookahead))

      # Skip node if it's a reserved keyword
      return nil if KEYWORDS.include? name[0].to_sym

      # Accept either explicit node_name or implicit :div node_name
      # with shorthand attributes
      if (node_name = accept :node)
        node_name = node_name.to_sym
        shorthand = shorthand_attributes
      elsif (shorthand = shorthand_attributes)
        node_name = :div
      end

      # Node creation options
      options = {}

      # Get leading whitespace
      options[:recursive] = accept(:recursive)

      # Get leading whitespace
      options[:leading_whitespace] = accept_stripped(:leading_whitespace)

      # Get trailing whitespace
      options[:trailing_whitespace] = accept_stripped(:trailing_whitespace)

      # Get wrapped node attributes
      atts = attributes(shorthand) || {}

      # Inherit attributes from definition
      options[:extension] = extend_attributes

      # Get unwrapped node attributes
      options[:attributes] = attributes_assignments atts, false

      # Create node
      current_node = [:node, node_name, options, [], indent]

      # Check for self enclosing tags and definitions
      def_check = !@definitions.keys.include?(node_name) &&
                  Settings::SELF_ENCLOSING.include?(node_name)

      # Check if the node is explicitly self enclosing
      if (close = accept_stripped :self_enclosing) || def_check
        current_node[@options][:self_enclosing] = true

        unless close.nil? || close.strip.empty?
          undo close
          Logger.error :parse, @code, @i, @j, :self_enclosing
        end
      end

      # Check whether we have explicit inline elements and add them
      # with increased base indentation
      if accept :inline_child
        # Inline node element
        Logger.error :parse,
                     @code,
                     @i,
                     @j,
                     :inline_child unless node current_node, indent
      elsif comment current_node, indent
        # Accept same line comments
      else
        # Accept inline text element
        text current_node, indent, false
      end

      # Add the current node to the root
      root current_node, indent

      # Add the parsed node to the parent
      parent[@children] << current_node
    end
leaves:  [2, 3, 5, 6, 7, 9, 10, 11, 12, 15, 16, 18, 20, 21, 24, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 40, 42, 43, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 64, 65, 67, 69, 70, 73, 74, 76, 77, 78, 80, 81, 82, 84, 86, 88, 89, 90, 91, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 108, 109, 110, 111, 112, 114, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 149, 150, 153, 155, 156, 157, 158, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 209, 212, 213, 214, 215, 216, 218, 219, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 238, 240, 241, 243, 245, 246, 247, 248, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 266, 267, 268, 269, 272, 273, 274, 275, 276, 279, 281, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 327, 328, 329, 331, 333, 335, 336, 337, 338, 340, 341, 343, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 367]
ast list length 3000
tokens list length 3000
tokens 0: 
{2: 'def', 3: 'node', 5: '(', 6: 'parent', 7: ',', 9: 'indent', 10: '=', 11: 'nil', 12: ')', 15: 'return', 16: 'unless', 18: '(', 20: 'name', 21: '=', 24: 'lookahead', 26: '(', 27: ':node_lookahead', 28: ')', 29: '||', 31: 'lookahead', 33: '(', 34: ':shorthand_lookahead', 35: ')', 36: ')', 40: 'return', 42: 'nil', 43: 'if', 45: 'KEYWORDS', 46: '.', 47: 'include?', 51: 'name', 52: '[', 53: '0', 54: ']', 55: '.', 56: 'to_sym', 60: 'if', 62: '(', 64: 'node_name', 65: '=', 67: 'accept', 69: ':node', 70: ')', 73: 'node_name', 74: '=', 76: 'node_name', 77: '.', 78: 'to_sym', 80: 'shorthand', 81: '=', 82: 'shorthand_attributes', 84: 'elsif', 86: '(', 88: 'shorthand', 89: '=', 90: 'shorthand_attributes', 91: ')', 94: 'node_name', 95: '=', 96: ':div', 97: 'end', 100: 'options', 101: '=', 103: '{', 104: '}', 108: 'options', 109: '[', 110: ':recursive', 111: ']', 112: '=', 114: 'accept', 116: '(', 117: ':recursive', 118: ')', 122: 'options', 123: '[', 124: ':leading_whitespace', 125: ']', 126: '=', 128: 'accept_stripped', 130: '(', 131: ':leading_whitespace', 132: ')', 136: 'options', 137: '[', 138: ':trailing_whitespace', 139: ']', 140: '=', 142: 'accept_stripped', 144: '(', 145: ':trailing_whitespace', 146: ')', 149: 'atts', 150: '=', 153: 'attributes', 155: '(', 156: 'shorthand', 157: ')', 158: '||', 160: '{', 161: '}', 165: 'options', 166: '[', 167: ':extension', 168: ']', 169: '=', 170: 'extend_attributes', 174: 'options', 175: '[', 176: ':attributes', 177: ']', 178: '=', 180: 'attributes_assignments', 182: 'atts', 183: ',', 184: 'false', 187: 'current_node', 188: '=', 190: '[', 191: ':node', 192: ',', 193: 'node_name', 194: ',', 195: 'options', 196: ',', 198: '[', 199: ']', 200: ',', 201: 'indent', 202: ']', 205: 'def_check', 206: '=', 209: '!', 212: '@definitions', 213: '.', 214: 'keys', 215: '.', 216: 'include?', 218: '(', 219: 'node_name', 220: ')', 221: '&&', 224: 'Settings', 225: '::', 226: 'SELF_ENCLOSING', 227: '.', 228: 'include?', 230: '(', 231: 'node_name', 232: ')', 235: 'if', 238: '(', 240: 'close', 241: '=', 243: 'accept_stripped', 245: ':self_enclosing', 246: ')', 247: '||', 248: 'def_check', 253: 'current_node', 254: '[', 255: '@options', 256: ']', 257: '[', 258: ':self_enclosing', 259: ']', 260: '=', 261: 'true', 263: 'unless', 266: 'close', 267: '.', 268: 'nil?', 269: '||', 272: 'close', 273: '.', 274: 'strip', 275: '.', 276: 'empty?', 279: 'undo', 281: 'close', 283: 'Logger', 284: '.', 285: 'error', 287: ':parse', 288: ',', 289: '@code', 290: ',', 291: '@i', 292: ',', 293: '@j', 294: ',', 295: ':self_enclosing', 296: 'end', 297: 'end', 301: 'if', 303: 'accept', 305: ':inline_child', 310: 'Logger', 311: '.', 312: 'error', 314: ':parse', 315: ',', 316: '@code', 317: ',', 318: '@i', 319: ',', 320: '@j', 321: ',', 322: ':inline_child', 323: 'unless', 325: 'node', 327: 'current_node', 328: ',', 329: 'indent', 331: 'elsif', 333: 'comment', 335: 'current_node', 336: ',', 337: 'indent', 340: 'else', 343: 'text', 345: 'current_node', 346: ',', 347: 'indent', 348: ',', 349: 'false', 350: 'end', 353: 'root', 355: 'current_node', 356: ',', 357: 'indent', 361: 'parent', 362: '[', 363: '@children', 364: ']', 365: '<<', 366: 'current_node', 367: 'end'}
Computing attention:   3%|▎         | 1/30 [00:01<00:43,  1.49s/it]Computing attention:   7%|▋         | 2/30 [00:02<00:37,  1.33s/it]Computing attention:  10%|█         | 3/30 [00:03<00:34,  1.29s/it]Computing attention:  13%|█▎        | 4/30 [00:05<00:32,  1.27s/it]Computing attention:  17%|█▋        | 5/30 [00:06<00:31,  1.25s/it]Computing attention:  20%|██        | 6/30 [00:07<00:29,  1.24s/it]Computing attention:  23%|██▎       | 7/30 [00:08<00:28,  1.24s/it]Computing attention:  27%|██▋       | 8/30 [00:10<00:27,  1.24s/it]Computing attention:  30%|███       | 9/30 [00:11<00:25,  1.23s/it]Computing attention:  33%|███▎      | 10/30 [00:12<00:24,  1.23s/it]Computing attention:  37%|███▋      | 11/30 [00:13<00:23,  1.23s/it]Computing attention:  40%|████      | 12/30 [00:15<00:22,  1.23s/it]Computing attention:  43%|████▎     | 13/30 [00:16<00:20,  1.23s/it]Computing attention:  47%|████▋     | 14/30 [00:17<00:19,  1.23s/it]Computing attention:  50%|█████     | 15/30 [00:18<00:18,  1.23s/it]Computing attention:  53%|█████▎    | 16/30 [00:19<00:17,  1.23s/it]Computing attention:  57%|█████▋    | 17/30 [00:21<00:15,  1.22s/it]Computing attention:  60%|██████    | 18/30 [00:22<00:14,  1.23s/it]Computing attention:  63%|██████▎   | 19/30 [00:23<00:13,  1.23s/it]Computing attention:  67%|██████▋   | 20/30 [00:24<00:12,  1.23s/it]Computing attention:  70%|███████   | 21/30 [00:26<00:11,  1.23s/it]Computing attention:  73%|███████▎  | 22/30 [00:27<00:09,  1.23s/it]Computing attention:  77%|███████▋  | 23/30 [00:28<00:08,  1.23s/it]Computing attention:  80%|████████  | 24/30 [00:29<00:07,  1.23s/it]Computing attention:  83%|████████▎ | 25/30 [00:30<00:06,  1.22s/it]Computing attention:  87%|████████▋ | 26/30 [00:32<00:04,  1.22s/it]Computing attention:  90%|█████████ | 27/30 [00:33<00:03,  1.22s/it]Computing attention:  93%|█████████▎| 28/30 [00:34<00:02,  1.22s/it]Computing attention:  97%|█████████▋| 29/30 [00:35<00:01,  1.22s/it]Computing attention: 100%|██████████| 30/30 [00:37<00:00,  1.22s/it]Computing attention: 100%|██████████| 30/30 [00:37<00:00,  1.24s/it]
attention_list shape:  (3000, 1, 12, 256, 256)
subtokens_list length:  3000
subtokens 0: 
['<s>', 'def', 'Ġnode', 'Ġ(', 'Ġparent', 'Ġ,', 'Ġindent', 'Ġ=', 'Ġnil', 'Ġ)', 'Ġreturn', 'Ġunless', 'Ġ(', 'Ġname', 'Ġ=', 'Ġlook', 'ahead', 'Ġ(', 'Ġ:', 'node', '_', 'look', 'ahead', 'Ġ)', 'Ġ||', 'Ġlook', 'ahead', 'Ġ(', 'Ġ:', 'sh', 'orth', 'and', '_', 'look', 'ahead', 'Ġ)', 'Ġ)', 'Ġreturn', 'Ġnil', 'Ġif', 'ĠKEY', 'WOR', 'DS', 'Ġ.', 'Ġinclude', '?', 'Ġname', 'Ġ[', 'Ġ0', 'Ġ]', 'Ġ.', 'Ġto', '_', 'sym', 'Ġif', 'Ġ(', 'Ġnode', '_', 'name', 'Ġ=', 'Ġaccept', 'Ġ:', 'node', 'Ġ)', 'Ġnode', '_', 'name', 'Ġ=', 'Ġnode', '_', 'name', 'Ġ.', 'Ġto', '_', 'sym', 'Ġshorthand', 'Ġ=', 'Ġshorthand', '_', 'att', 'ributes', 'Ġel', 's', 'if', 'Ġ(', 'Ġshorthand', 'Ġ=', 'Ġshorthand', '_', 'att', 'ributes', 'Ġ)', 'Ġnode', '_', 'name', 'Ġ=', 'Ġ:', 'div', 'Ġend', 'Ġoptions', 'Ġ=', 'Ġ{', 'Ġ}', 'Ġoptions', 'Ġ[', 'Ġ:', 'rec', 'ursive', 'Ġ]', 'Ġ=', 'Ġaccept', 'Ġ(', 'Ġ:', 'rec', 'ursive', 'Ġ)', 'Ġoptions', 'Ġ[', 'Ġ:', 'leading', '_', 'wh', 'ites', 'pace', 'Ġ]', 'Ġ=', 'Ġaccept', '_', 'stri', 'pped', 'Ġ(', 'Ġ:', 'leading', '_', 'wh', 'ites', 'pace', 'Ġ)', 'Ġoptions', 'Ġ[', 'Ġ:', 'tra', 'iling', '_', 'wh', 'ites', 'pace', 'Ġ]', 'Ġ=', 'Ġaccept', '_', 'stri', 'pped', 'Ġ(', 'Ġ:', 'tra', 'iling', '_', 'wh', 'ites', 'pace', 'Ġ)', 'Ġatt', 's', 'Ġ=', 'Ġattributes', 'Ġ(', 'Ġshorthand', 'Ġ)', 'Ġ||', 'Ġ{', 'Ġ}', 'Ġoptions', 'Ġ[', 'Ġ:', 'ext', 'ension', 'Ġ]', 'Ġ=', 'Ġextend', '_', 'att', 'ributes', 'Ġoptions', 'Ġ[', 'Ġ:', 'att', 'ributes', 'Ġ]', 'Ġ=', 'Ġattributes', '_', 'ass', 'ign', 'ments', 'Ġatt', 's', 'Ġ,', 'Ġfalse', 'Ġcurrent', '_', 'node', 'Ġ=', 'Ġ[', 'Ġ:', 'node', 'Ġ,', 'Ġnode', '_', 'name', 'Ġ,', 'Ġoptions', 'Ġ,', 'Ġ[', 'Ġ]', 'Ġ,', 'Ġindent', 'Ġ]', 'Ġdef', '_', 'check', 'Ġ=', 'Ġ!', 'Ġ@', 'def', 'initions', 'Ġ.', 'Ġkeys', 'Ġ.', 'Ġinclude', '?', 'Ġ(', 'Ġnode', '_', 'name', 'Ġ)', 'Ġ&&', 'ĠSettings', 'Ġ::', 'ĠS', 'ELF', '_', 'EN', 'CL', 'OS', 'ING', 'Ġ.', 'Ġinclude', '?', 'Ġ(', 'Ġnode', '_', 'name', 'Ġ)', 'Ġif', '</s>']
subtoken_numbers_list length:  3000
subtoken_numbers_list 0: 
[0, 0, 0]
